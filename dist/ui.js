/*! For license information please see ui.js.LICENSE.txt */
(()=>{var e={1398:e=>{"use strict";e.exports=require("vscode")},6928:e=>{"use strict";e.exports=require("path")},9829:(e,t,o)=>{function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function i(){"use strict";i=function(){return t};var e,t={},o=Object.prototype,r=o.hasOwnProperty,a=Object.defineProperty||function(e,t,o){e[t]=o.value},c="function"==typeof Symbol?Symbol:{},s=c.iterator||"@@iterator",l=c.asyncIterator||"@@asyncIterator",m=c.toStringTag||"@@toStringTag";function u(e,t,o){return Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,o){return e[t]=o}}function h(e,t,o,n){var i=t&&t.prototype instanceof b?t:b,r=Object.create(i.prototype),c=new N(n||[]);return a(r,"_invoke",{value:E(e,o,c)}),r}function p(e,t,o){try{return{type:"normal",arg:e.call(t,o)}}catch(e){return{type:"throw",arg:e}}}t.wrap=h;var g="suspendedStart",d="suspendedYield",f="executing",T="completed",w={};function b(){}function I(){}function v(){}var y={};u(y,s,(function(){return this}));var S=Object.getPrototypeOf,C=S&&S(S(M([])));C&&C!==o&&r.call(C,s)&&(y=C);var P=v.prototype=b.prototype=Object.create(y);function x(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function k(e,t){function o(i,a,c,s){var l=p(e[i],e,a);if("throw"!==l.type){var m=l.arg,u=m.value;return u&&"object"==n(u)&&r.call(u,"__await")?t.resolve(u.__await).then((function(e){o("next",e,c,s)}),(function(e){o("throw",e,c,s)})):t.resolve(u).then((function(e){m.value=e,c(m)}),(function(e){return o("throw",e,c,s)}))}s(l.arg)}var i;a(this,"_invoke",{value:function(e,n){function r(){return new t((function(t,i){o(e,n,t,i)}))}return i=i?i.then(r,r):r()}})}function E(t,o,n){var i=g;return function(r,a){if(i===f)throw Error("Generator is already running");if(i===T){if("throw"===r)throw a;return{value:e,done:!0}}for(n.method=r,n.arg=a;;){var c=n.delegate;if(c){var s=A(c,n);if(s){if(s===w)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(i===g)throw i=T,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i=f;var l=p(t,o,n);if("normal"===l.type){if(i=n.done?T:d,l.arg===w)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(i=T,n.method="throw",n.arg=l.arg)}}}function A(t,o){var n=o.method,i=t.iterator[n];if(i===e)return o.delegate=null,"throw"===n&&t.iterator.return&&(o.method="return",o.arg=e,A(t,o),"throw"===o.method)||"return"!==n&&(o.method="throw",o.arg=new TypeError("The iterator does not provide a '"+n+"' method")),w;var r=p(i,t.iterator,o.arg);if("throw"===r.type)return o.method="throw",o.arg=r.arg,o.delegate=null,w;var a=r.arg;return a?a.done?(o[t.resultName]=a.value,o.next=t.nextLoc,"return"!==o.method&&(o.method="next",o.arg=e),o.delegate=null,w):a:(o.method="throw",o.arg=new TypeError("iterator result is not an object"),o.delegate=null,w)}function D(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function O(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function N(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(D,this),this.reset(!0)}function M(t){if(t||""===t){var o=t[s];if(o)return o.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var i=-1,a=function o(){for(;++i<t.length;)if(r.call(t,i))return o.value=t[i],o.done=!1,o;return o.value=e,o.done=!0,o};return a.next=a}}throw new TypeError(n(t)+" is not iterable")}return I.prototype=v,a(P,"constructor",{value:v,configurable:!0}),a(v,"constructor",{value:I,configurable:!0}),I.displayName=u(v,m,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===I||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,v):(e.__proto__=v,u(e,m,"GeneratorFunction")),e.prototype=Object.create(P),e},t.awrap=function(e){return{__await:e}},x(k.prototype),u(k.prototype,l,(function(){return this})),t.AsyncIterator=k,t.async=function(e,o,n,i,r){void 0===r&&(r=Promise);var a=new k(h(e,o,n,i),r);return t.isGeneratorFunction(o)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},x(P),u(P,m,"Generator"),u(P,s,(function(){return this})),u(P,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),o=[];for(var n in t)o.push(n);return o.reverse(),function e(){for(;o.length;){var n=o.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=M,N.prototype={constructor:N,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(O),!t)for(var o in this)"t"===o.charAt(0)&&r.call(this,o)&&!isNaN(+o.slice(1))&&(this[o]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var o=this;function n(n,i){return c.type="throw",c.arg=t,o.next=n,i&&(o.method="next",o.arg=e),!!i}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],c=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var s=r.call(a,"catchLoc"),l=r.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!l)throw Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(e,t){for(var o=this.tryEntries.length-1;o>=0;--o){var n=this.tryEntries[o];if(n.tryLoc<=this.prev&&r.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var i=n;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,w):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),w},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var o=this.tryEntries[t];if(o.finallyLoc===e)return this.complete(o.completion,o.afterLoc),O(o),w}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var o=this.tryEntries[t];if(o.tryLoc===e){var n=o.completion;if("throw"===n.type){var i=n.arg;O(o)}return i}}throw Error("illegal catch attempt")},delegateYield:function(t,o,n){return this.delegate={iterator:M(t),resultName:o,nextLoc:n},"next"===this.method&&(this.arg=e),w}},t}function r(e,t,o,n,i,r,a){try{var c=e[r](a),s=c.value}catch(e){return void o(e)}c.done?t(s):Promise.resolve(s).then(n,i)}function a(e){return function(){var t=this,o=arguments;return new Promise((function(n,i){var a=e.apply(t,o);function c(e){r(a,n,i,c,s,"next",e)}function s(e){r(a,n,i,c,s,"throw",e)}c(void 0)}))}}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,m(n.key),n)}}function l(e,t,o){return t&&s(e.prototype,t),o&&s(e,o),Object.defineProperty(e,"prototype",{writable:!1}),e}function m(e){var t=function(e){if("object"!=n(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var o=t.call(e,"string");if("object"!=n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==n(t)?t:t+""}var u=o(1398),h=(o(6928),function(){return l((function e(t){c(this,e),this._onDidChangeTreeData=new u.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this._context=t}),[{key:"refresh",value:function(){this._onDidChangeTreeData.fire()}},{key:"getTreeItem",value:function(e){return e}},{key:"getChildren",value:(t=a(i().mark((function e(t){var o,n,r,a;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t){e.next=2;break}return e.abrupt("return",this._getSubItems(t));case 2:return u.workspace.getConfiguration("comitto").get("autoCommitEnabled"),o=[],(n=new u.TreeItem("Status and Quick Access",u.TreeItemCollapsibleState.Expanded)).contextValue="status-group",n.iconPath=new u.ThemeIcon("pulse"),n.collapsibleState=u.TreeItemCollapsibleState.Expanded,o.push(n),(r=new u.TreeItem("Configuration",u.TreeItemCollapsibleState.Expanded)).contextValue="config-group",r.iconPath=new u.ThemeIcon("settings"),r.collapsibleState=u.TreeItemCollapsibleState.Expanded,o.push(r),(a=new u.TreeItem("Actions",u.TreeItemCollapsibleState.Expanded)).contextValue="action-group",a.iconPath=new u.ThemeIcon("run-all"),a.collapsibleState=u.TreeItemCollapsibleState.Expanded,o.push(a),e.abrupt("return",o);case 21:case"end":return e.stop()}}),e,this)}))),function(e){return t.apply(this,arguments)})},{key:"_getSubItems",value:(e=a(i().mark((function e(t){var o,n,r,a,c,s,l,m,h,p,g,T,w,b,I,v,y,S,C,P;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:o=u.workspace.getConfiguration("comitto"),n=o.get("autoCommitEnabled"),r=[],e.t0=t.contextValue,e.next="status-group"===e.t0?6:"config-group"===e.t0?23:"action-group"===e.t0?51:67;break;case 6:return(a=new u.TreeItem("Status: ".concat(n?"Enabled":"Disabled"),u.TreeItemCollapsibleState.None)).contextValue=n?"comitto-status-enabled":"comitto-status-disabled",a.iconPath=new u.ThemeIcon(n?"check":"circle-slash"),a.tooltip=n?"Comitto monitors changes":"Comitto is currently disabled",a.command={command:n?"comitto.disableAutoCommit":"comitto.enableAutoCommit",title:n?"Disable":"Enable"},r.push(a),(c=new u.TreeItem("Simple User Interface",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("rocket"),c.tooltip="Opens a simple interface for easy settings",c.command={command:"comitto.showSimpleUI",title:"Open Simple User Interface"},r.push(c),(s=new u.TreeItem("Show Dashboard",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("dashboard"),s.tooltip="Shows the complete Comitto dashboard",s.command={command:"comitto.showDashboard",title:"Show Dashboard"},r.push(s),e.abrupt("break",67);case 23:return l=o.get("aiProvider"),(m=new u.TreeItem("KI-Provider: ".concat(d(l)),u.TreeItemCollapsibleState.None)).iconPath=f(l),m.tooltip="Current KI-Provider for commit messages: ".concat(d(l)),m.command={command:"comitto.configureAIProvider",title:"Configure KI-Provider"},r.push(m),h=o.get("gitSettings"),p="de"===h.commitMessageLanguage?"Deutsch":"Englisch",g=h.autoPush?"Mit Auto-Push":"Ohne Auto-Push",T="all"===h.stageMode?"Alle Dateien stagen":"specific"===h.stageMode?"Spezifische Dateien stagen":"Nachfragen",(w=new u.TreeItem("Git: ".concat(p,", ").concat(g),u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("git-merge"),w.tooltip="Branch: ".concat(h.branch||"Aktuell",", Sprache: ").concat(h.commitMessageLanguage,", Stil: ").concat(h.commitMessageStyle,", Stage-Modus: ").concat(T),w.command={command:"comitto.openSettings",title:"Edit Git Settings"},r.push(w),b=o.get("triggerRules"),I="".concat(b.fileCountThreshold," Dateien / ").concat(b.minChangeCount," Änderungen"),v=[],b.onSave&&v.push("Bei Speichern"),b.onInterval&&v.push("Alle ".concat(b.intervalMinutes,"min")),b.onBranchSwitch&&v.push("Bei Branch-Wechsel"),v.length>0&&(I+=" (".concat(v.join(", "),")")),(y=new u.TreeItem("Trigger: ".concat(I),u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("settings-gear"),y.tooltip="Commit bei ".concat(b.fileCountThreshold," Dateien, ").concat(b.minChangeCount," Änderungen oder nach ").concat(b.timeThresholdMinutes," Minuten\nAktive Trigger: ").concat(v.join(", ")),y.command={command:"comitto.configureTriggers",title:"Configure Triggers"},r.push(y),e.abrupt("break",67);case 51:return(S=new u.TreeItem("Perform Manual Commit",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("git-commit"),S.tooltip="Führt einen manuellen Commit mit KI-generierter Nachricht aus",S.command={command:"comitto.performManualCommit",title:"Perform Manual Commit"},r.push(S),(C=new u.TreeItem("Stage All Changes",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("add"),C.tooltip="Stagt alle geänderten Dateien für den nächsten Commit",C.command={command:"comitto.stageAll",title:"Stage All Changes"},r.push(C),(P=new u.TreeItem("Stage Selected Files",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("checklist"),P.tooltip="Erlaubt die Auswahl bestimmter Dateien zum Stagen",P.command={command:"comitto.stageSelected",title:"Stage Selected Files"},r.push(P),e.abrupt("break",67);case 67:return e.abrupt("return",r);case 68:case"end":return e.stop()}}),e)}))),function(t){return e.apply(this,arguments)})}]);var e,t}()),p=function(){return l((function e(t){c(this,e),this._onDidChangeTreeData=new u.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this._context=t}),[{key:"refresh",value:function(){this._onDidChangeTreeData.fire()}},{key:"getTreeItem",value:function(e){return e}},{key:"getChildren",value:(t=a(i().mark((function e(t){var o,n,r,a,c,s,l;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t){e.next=2;break}return e.abrupt("return",this._getSubSettings(t));case 2:return o=[],(n=new u.TreeItem("KI-Provider Settings",u.TreeItemCollapsibleState.Collapsed)).contextValue="ai-provider",n.iconPath=new u.ThemeIcon("symbol-enum"),n.tooltip="Configuration of KI-Providers for generating commit messages",o.push(n),(r=new u.TreeItem("Trigger Rules",u.TreeItemCollapsibleState.Collapsed)).contextValue="trigger-rules",r.iconPath=new u.ThemeIcon("settings-gear"),r.tooltip="Configuration of triggers for automatic commits",o.push(r),(a=new u.TreeItem("Git Settings",u.TreeItemCollapsibleState.Collapsed)).contextValue="git-settings",a.iconPath=new u.ThemeIcon("git-merge"),a.tooltip="Configuration of Git-related settings for commits",o.push(a),(c=new u.TreeItem("Prompt Template",u.TreeItemCollapsibleState.None)).contextValue="prompt-template",c.iconPath=new u.ThemeIcon("edit"),c.tooltip="Customization of the template for generating commit messages",c.command={command:"comitto.editPromptTemplate",title:"Edit Prompt Template"},o.push(c),(s=new u.TreeItem("User Interface",u.TreeItemCollapsibleState.Collapsed)).contextValue="ui-settings",s.iconPath=new u.ThemeIcon("layout"),s.tooltip="Settings for the user interface and notifications",o.push(s),(l=new u.TreeItem("Notifications",u.TreeItemCollapsibleState.Collapsed)).contextValue="notification-settings",l.iconPath=new u.ThemeIcon("bell"),l.tooltip="Configuration of notifications and messages",o.push(l),e.abrupt("return",o);case 35:case"end":return e.stop()}}),e,this)}))),function(e){return t.apply(this,arguments)})},{key:"_getSubSettings",value:(e=a(i().mark((function e(t){var o,n,r,a,c,s,l,m,h,p,g,w,b,I,v,y,S,C,P,x,k,E,A,D,O,N,M,L,G,_,V,j,F,K,B,U,W,z,q,R,Y,H,J,Q,X,Z;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:o=u.workspace.getConfiguration("comitto"),n=[],e.t0=t.contextValue,e.next="ai-provider"===e.t0?5:"trigger-rules"===e.t0?13:"git-settings"===e.t0?50:"ui-settings"===e.t0?85:"notification-settings"===e.t0?107:129;break;case 5:return r=o.get("aiProvider"),(a=new u.TreeItem("Active Provider: ".concat(d(r)))).iconPath=f(r),a.tooltip="Select the KI-Provider for generating commit messages",a.command={command:"comitto.selectAiProvider",title:"Select KI-Provider"},n.push(a),"ollama"===r?(c=o.get("ollama.endpoint"),(s=new u.TreeItem("Ollama Endpoint: ".concat(c))).iconPath=new u.ThemeIcon("link"),s.tooltip="Configure the API endpoint for the Ollama service",s.command={command:"comitto.configureOllamaSettings",title:"Configure Ollama Settings"},n.push(s),l=o.get("ollama.model"),(m=new u.TreeItem("Ollama Model: ".concat(l))).iconPath=new u.ThemeIcon("symbol-class"),m.tooltip="Select the Ollama model to use",m.command={command:"comitto.configureOllamaSettings",title:"Configure Ollama Settings"},n.push(m)):"openai"===r?(h=o.get("openai.model"),(p=new u.TreeItem("OpenAI Model: ".concat(h))).iconPath=new u.ThemeIcon("symbol-class"),p.tooltip="Select the OpenAI model to use",p.command={command:"comitto.selectOpenAIModel",title:"Select OpenAI Model"},n.push(p),g=""!==o.get("openai.apiKey"),(w=new u.TreeItem("API Key: ".concat(g?"Set":"Not set"))).iconPath=new u.ThemeIcon(g?"key":"warning"),w.tooltip="Configure the API key for OpenAI",w.command={command:"comitto.editOpenAIKey",title:"Edit OpenAI API Key"},n.push(w)):"anthropic"===r&&(b=o.get("anthropic.model"),(I=new u.TreeItem("Anthropic Model: ".concat(b))).iconPath=new u.ThemeIcon("symbol-class"),I.tooltip="Select the Anthropic model to use",I.command={command:"comitto.selectAnthropicModel",title:"Select Anthropic Model"},n.push(I),v=""!==o.get("anthropic.apiKey"),(y=new u.TreeItem("API Key: ".concat(v?"Set":"Not set"))).iconPath=new u.ThemeIcon(v?"key":"warning"),y.tooltip="Configure the API key for Anthropic",y.command={command:"comitto.editAnthropicKey",title:"Edit Anthropic API Key"},n.push(y)),e.abrupt("break",129);case 13:return S=o.get("triggerRules"),(C=new u.TreeItem("File Count Threshold: ".concat(S.fileCountThreshold))).iconPath=new u.ThemeIcon("files"),C.tooltip="The number of files that must be changed for an automatic commit",C.command={command:"comitto.editFileCountThreshold",title:"Edit File Count Threshold"},n.push(C),(P=new u.TreeItem("Change Count Threshold: ".concat(S.minChangeCount))).iconPath=new u.ThemeIcon("edit"),P.tooltip="The minimum number of changes for an automatic commit",P.command={command:"comitto.editMinChangeCount",title:"Edit Change Count Threshold"},n.push(P),(x=new u.TreeItem("Time Threshold: ".concat(S.timeThresholdMinutes," Minutes"))).iconPath=new u.ThemeIcon("watch"),x.tooltip="The time span in minutes before a commit is triggered",x.command={command:"comitto.editTimeThreshold",title:"Edit Time Threshold"},n.push(x),new u.TreeItem("Trigger Options").iconPath=new u.ThemeIcon("settings"),(k=new u.TreeItem("On Save: ".concat(S.onSave?"Enabled":"Disabled"))).iconPath=new u.ThemeIcon(S.onSave?"check":"x"),k.command={command:"comitto.toggleOnSave",title:"Toggle On Save Trigger"},n.push(k),(E=new u.TreeItem("On Interval: ".concat(S.onInterval?"Enabled (".concat(S.intervalMinutes,"min)"):"Disabled"))).iconPath=new u.ThemeIcon(S.onInterval?"check":"x"),E.command={command:"comitto.toggleOnInterval",title:"Toggle On Interval Trigger"},n.push(E),(A=new u.TreeItem("On Branch Switch: ".concat(S.onBranchSwitch?"Enabled":"Disabled"))).iconPath=new u.ThemeIcon(S.onBranchSwitch?"check":"x"),A.command={command:"comitto.toggleOnBranchSwitch",title:"Toggle On Branch Switch Trigger"},n.push(A),D=S.filePatterns.length>0?S.filePatterns.join(", "):"(None)",(O=new u.TreeItem("File Patterns: ".concat(D.length>30?D.substring(0,30)+"...":D))).iconPath=new u.ThemeIcon("filter"),O.tooltip="Currently monitored file patterns: ".concat(S.filePatterns.join(", ")),O.command={command:"comitto.editFilePatterns",title:"Edit File Patterns"},n.push(O),e.abrupt("break",129);case 50:return N=o.get("gitSettings"),(M=new u.TreeItem("Commit Language: ".concat("de"===N.commitMessageLanguage?"Deutsch":"Englisch"))).iconPath=new u.ThemeIcon("globe"),M.tooltip="The language in which commit messages are generated",M.command={command:"comitto.selectCommitLanguage",title:"Select Commit Language"},n.push(M),(L=new u.TreeItem("Auto Push: ".concat(N.autoPush?"Enabled":"Disabled"))).iconPath=new u.ThemeIcon(N.autoPush?"cloud-upload":"x"),L.tooltip="Whether to push after a commit",L.command={command:"comitto.toggleAutoPush",title:"Toggle Auto Push"},n.push(L),(G=new u.TreeItem("Branch: ".concat(N.branch||"Aktuell"))).iconPath=new u.ThemeIcon("git-branch"),G.tooltip="The branch to use for commits (empty for current branch)",G.command={command:"comitto.editBranch",title:"Edit Branch"},n.push(G),(_=new u.TreeItem("Commit Style: ".concat("conventional"===N.commitMessageStyle?"Conventional":"Gitmoji"))).iconPath=new u.ThemeIcon("symbol-string"),_.tooltip="The style of generated commit messages",_.command={command:"comitto.selectCommitStyle",title:"Select Commit Style"},n.push(_),V="all"===N.stageMode?"Alle Dateien":"specific"===N.stageMode?"Spezifische Dateien":"Nachfragen",(j=new u.TreeItem("Stage Mode: ".concat(V))).iconPath=new u.ThemeIcon("staged"),j.tooltip="How files should be staged for commits",j.command={command:"comitto.selectStageMode",title:"Select Stage Mode"},n.push(j),"specific"===N.stageMode&&(F=N.specificStagingPatterns.length>0?N.specificStagingPatterns.join(", "):"(None)",(K=new u.TreeItem("Staging Patterns: ".concat(F.length>30?F.substring(0,30)+"...":F))).iconPath=new u.ThemeIcon("filter"),K.tooltip="File patterns for specific staging: ".concat(N.specificStagingPatterns.join(", ")),K.command={command:"comitto.editStagingPatterns",title:"Edit Staging Patterns"},n.push(K)),B=void 0===N.useGitignore||N.useGitignore,(U=new u.TreeItem("Use Gitignore: ".concat(B?"Yes":"No"))).iconPath=new u.ThemeIcon(B?"check":"x"),U.tooltip="Whether to consider the .gitignore file when monitoring",U.command={command:"comitto.toggleUseGitignore",title:"Toggle Use Gitignore"},n.push(U),e.abrupt("break",129);case 85:return W=o.get("uiSettings"),(z=new u.TreeItem("Simple Mode: ".concat(W.simpleMode?"Enabled":"Disabled"))).iconPath=new u.ThemeIcon(W.simpleMode?"check":"x"),z.tooltip="Whether to use the simplified user interface",z.command={command:"comitto.toggleSimpleMode",title:"Toggle Simple Mode"},n.push(z),(q=new u.TreeItem("Confirm Before Commit: ".concat(W.confirmBeforeCommit?"Enabled":"Disabled"))).iconPath=new u.ThemeIcon(W.confirmBeforeCommit?"check":"x"),q.tooltip="Whether to prompt for confirmation before a commit",q.command={command:"comitto.toggleConfirmBeforeCommit",title:"Toggle Confirm Before Commit"},n.push(q),(R=new u.TreeItem("Show Notifications: ".concat(W.showNotifications?"Enabled":"Disabled"))).iconPath=new u.ThemeIcon(W.showNotifications?"check":"x"),R.tooltip="Whether to show notifications",R.command={command:"comitto.toggleShowNotifications",title:"Toggle Show Notifications"},n.push(R),(Y=new u.TreeItem("Theme: ".concat(T(W.theme)))).iconPath=new u.ThemeIcon("symbol-color"),Y.tooltip="The theme to use",Y.command={command:"comitto.selectTheme",title:"Select Theme"},n.push(Y),e.abrupt("break",129);case 107:return H=o.get("notifications"),(J=new u.TreeItem("On Commit: ".concat(H.onCommit?"Enabled":"Disabled"))).iconPath=new u.ThemeIcon(H.onCommit?"check":"x"),J.tooltip="Whether to show notifications for successful commits",J.command={command:"comitto.toggleNotificationOnCommit",title:"Toggle On Commit Notification"},n.push(J),(Q=new u.TreeItem("On Push: ".concat(H.onPush?"Enabled":"Disabled"))).iconPath=new u.ThemeIcon(H.onPush?"check":"x"),Q.tooltip="Whether to show notifications for successful pushes",Q.command={command:"comitto.toggleNotificationOnPush",title:"Toggle On Push Notification"},n.push(Q),(X=new u.TreeItem("On Error: ".concat(H.onError?"Enabled":"Disabled"))).iconPath=new u.ThemeIcon(H.onError?"check":"x"),X.tooltip="Whether to show notifications for errors",X.command={command:"comitto.toggleNotificationOnError",title:"Toggle On Error Notification"},n.push(X),(Z=new u.TreeItem("On Trigger Fired: ".concat(H.onTriggerFired?"Enabled":"Disabled"))).iconPath=new u.ThemeIcon(H.onTriggerFired?"check":"x"),Z.tooltip="Whether to show notifications for trigger firings",Z.command={command:"comitto.toggleNotificationOnTriggerFired",title:"Toggle On Trigger Notification"},n.push(Z),e.abrupt("break",129);case 129:return e.abrupt("return",n);case 130:case"end":return e.stop()}}),e)}))),function(t){return e.apply(this,arguments)})}]);var e,t}(),g=function(){return l((function e(t){c(this,e),this._onDidChangeTreeData=new u.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this._context=t}),[{key:"refresh",value:function(){this._onDidChangeTreeData.fire()}},{key:"getTreeItem",value:function(e){return e}},{key:"getChildren",value:(t=a(i().mark((function e(t){var o,n,r,a;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t){e.next=2;break}return e.abrupt("return",this._getSubActions(t));case 2:return o=[],(n=new u.TreeItem("Commit Actions",u.TreeItemCollapsibleState.Expanded)).contextValue="commit-actions",n.iconPath=new u.ThemeIcon("git-commit"),o.push(n),(r=new u.TreeItem("Git Actions",u.TreeItemCollapsibleState.Expanded)).contextValue="git-actions",r.iconPath=new u.ThemeIcon("source-control"),o.push(r),(a=new u.TreeItem("Configuration Actions",u.TreeItemCollapsibleState.Expanded)).contextValue="config-actions",a.iconPath=new u.ThemeIcon("gear"),o.push(a),e.abrupt("return",o);case 16:case"end":return e.stop()}}),e,this)}))),function(e){return t.apply(this,arguments)})},{key:"_getSubActions",value:(e=a(i().mark((function e(t){var o,n,r,a,c,s,l,m,h,p,g,d;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:o=u.workspace.getConfiguration("comitto"),n=o.get("autoCommitEnabled"),r=[],e.t0=t.contextValue,e.next="commit-actions"===e.t0?6:"git-actions"===e.t0?17:"config-actions"===e.t0?33:54;break;case 6:return(a=new u.TreeItem("Toggle Comitto ".concat(n?"Disabled":"Enabled"),u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon(n?"circle-slash":"check"),a.tooltip=n?"Deaktiviert die automatischen Commits":"Aktiviert die automatischen Commits",a.command={command:"comitto.toggleAutoCommit",title:"Toggle Comitto ".concat(n?"Disabled":"Enabled")},r.push(a),(c=new u.TreeItem("Perform Manual Commit",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("git-commit"),c.tooltip="Führt einen manuellen Commit mit KI-generierter Nachricht aus",c.command={command:"comitto.performManualCommit",title:"Perform Manual Commit"},r.push(c),e.abrupt("break",54);case 17:return(s=new u.TreeItem("Stage All Changes",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("add"),s.tooltip="Stagt alle geänderten Dateien für den nächsten Commit",s.command={command:"comitto.stageAll",title:"Stage All Changes"},r.push(s),(l=new u.TreeItem("Stage Selected Files",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("checklist"),l.tooltip="Erlaubt die Auswahl bestimmter Dateien zum Stagen",l.command={command:"comitto.stageSelected",title:"Stage Selected Files"},r.push(l),(m=new u.TreeItem("Edit Git Settings",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("gear"),m.tooltip="Öffnet die Git-Einstellungen zur Bearbeitung",m.command={command:"comitto.openSettings",title:"Edit Git Settings"},r.push(m),e.abrupt("break",54);case 33:return(h=new u.TreeItem("Configure KI-Provider",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("symbol-misc"),h.tooltip="Öffnet die KI-Provider-Konfiguration",h.command={command:"comitto.configureAIProvider",title:"Configure KI-Provider"},r.push(h),(p=new u.TreeItem("Configure Triggers",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("settings-gear"),p.tooltip="Öffnet die Trigger-Konfiguration",p.command={command:"comitto.configureTriggers",title:"Configure Triggers"},r.push(p),(g=new u.TreeItem("Open Simple User Interface",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("rocket"),g.tooltip="Öffnet die vereinfachte Benutzeroberfläche",g.command={command:"comitto.showSimpleUI",title:"Open Simple User Interface"},r.push(g),(d=new u.TreeItem("Show Dashboard",u.TreeItemCollapsibleState.None)).iconPath=new u.ThemeIcon("dashboard"),d.tooltip="Öffnet das Comitto-Dashboard",d.command={command:"comitto.showDashboard",title:"Show Dashboard"},r.push(d),e.abrupt("break",54);case 54:return e.abrupt("return",r);case 55:case"end":return e.stop()}}),e)}))),function(t){return e.apply(this,arguments)})}]);var e,t}();function d(e){switch(e){case"ollama":return"Ollama (local)";case"openai":return"OpenAI";case"anthropic":return"Anthropic Claude";default:return e}}function f(e){switch(e){case"ollama":return new u.ThemeIcon("server");case"openai":return new u.ThemeIcon("rocket");case"anthropic":return new u.ThemeIcon("beaker");default:return new u.ThemeIcon("symbol-misc")}}function T(e){switch(e){case"light":return"Light";case"dark":return"Dark";case"auto":return"Automatic";default:return e}}e.exports={registerUI:function(e){var t=new h(e),o=u.window.createTreeView("comitto-status",{treeDataProvider:t,showCollapseAll:!1});e.subscriptions.push(o);var n=new g(e),i=u.window.createTreeView("comitto-quick-actions",{treeDataProvider:n,showCollapseAll:!1});e.subscriptions.push(i);var r=new p(e),a=u.window.createTreeView("comitto-settings",{treeDataProvider:r,showCollapseAll:!0});return e.subscriptions.push(a),setTimeout((function(){t.refresh(),n.refresh(),r.refresh()}),500),e.subscriptions.push(u.extensions.onDidChange((function(){u.commands.executeCommand("setContext","workspaceHasGit",!0)}))),{statusProvider:t,quickActionsProvider:n,settingsProvider:r,statusTreeView:o,settingsTreeView:a,quickActionsTreeView:i}},StatusViewProvider:h,QuickActionsViewProvider:g,SettingsViewProvider:p,getProviderDisplayName:d,getProviderIcon:f,getOpenAIModelOptions:function(){return[{label:"GPT-4o",value:"gpt-4o"},{label:"GPT-4o Mini",value:"gpt-4o-mini"},{label:"GPT-4",value:"gpt-4"},{label:"GPT-4 Turbo",value:"gpt-4-turbo"},{label:"GPT-4 (January 2025)",value:"gpt-4-0125-preview"},{label:"GPT-4 (November 2023)",value:"gpt-4-1106-preview"},{label:"GPT-4 Vision Preview",value:"gpt-4-vision-preview"},{label:"GPT-3.5 Turbo",value:"gpt-3.5-turbo"},{label:"GPT-3.5 Turbo (January 2024)",value:"gpt-3.5-turbo-0125"},{label:"GPT-3.5 Turbo (November 2023)",value:"gpt-3.5-turbo-1106"}]},getStageModeLabel:function(e){switch(e){case"all":return"Stage all files";case"specific":return"Stage specific files";case"prompt":return"Ask each time";default:return e}},getThemeLabel:T,getStatusDescription:function(e){var t=e.charAt(0),o=e.charAt(1),n="";return"M"===t?n="Modified in index":"A"===t?n="Added to index":"D"===t?n="Deleted from index":"R"===t?n="Renamed in index":"C"===t?n="Copied in index":"U"===t&&(n="Unmerged in index"),"M"===o?n?n+=", modified in working directory":n="Modified in working directory":"D"===o&&(n?n+=", deleted in working directory":n="Deleted in working directory"),"??"===e&&(n="Untracked file"),n||e}}}},t={},o=function o(n){var i=t[n];if(void 0!==i)return i.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,o),r.exports}(9829);module.exports=o})();
//# sourceMappingURL=ui.js.map