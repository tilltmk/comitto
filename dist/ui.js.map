{"version":3,"file":"ui.js","mappings":"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","sources":["webpack://comitto/external commonjs \"vscode\"","webpack://comitto/external node-commonjs \"path\"","webpack://comitto/./ui.js","webpack://comitto/webpack/bootstrap","webpack://comitto/webpack/startup"],"sourcesContent":["module.exports = require(\"vscode\");","module.exports = require(\"path\");","const vscode = require('vscode');\r\nconst path = require('path');\r\n\r\n/**\r\n * Hauptklasse für die konsolidierte Ansicht in der Seitenleiste\r\n * Kombiniert Status, Schnellaktionen und Einstellungen in einer redundanzfreien Struktur\r\n */\r\nclass MainViewProvider {\r\n    constructor(context) {\r\n        this._onDidChangeTreeData = new vscode.EventEmitter();\r\n        this.onDidChangeTreeData = this._onDidChangeTreeData.event;\r\n        this._context = context;\r\n    }\r\n\r\n    refresh() {\r\n        this._onDidChangeTreeData.fire();\r\n    }\r\n\r\n    getTreeItem(element) {\r\n        return element;\r\n    }\r\n\r\n    async getChildren(element) {\r\n        if (element) {\r\n            return this._getSubItems(element);\r\n        }\r\n\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const enabled = config.get('autoCommitEnabled');\r\n        const items = [];\r\n\r\n        // Status und Schnellaktionen\r\n        const statusGroup = new vscode.TreeItem(\r\n            'Status und Schnellaktionen',\r\n            vscode.TreeItemCollapsibleState.Expanded\r\n        );\r\n        statusGroup.contextValue = 'status-group';\r\n        statusGroup.iconPath = new vscode.ThemeIcon('pulse');\r\n        items.push(statusGroup);\r\n\r\n        // Git Einstellungen\r\n        const gitGroup = new vscode.TreeItem(\r\n            'Git Konfiguration',\r\n            vscode.TreeItemCollapsibleState.Expanded\r\n        );\r\n        gitGroup.contextValue = 'git-group';\r\n        gitGroup.iconPath = new vscode.ThemeIcon('git-branch');\r\n        items.push(gitGroup);\r\n\r\n        // KI Provider Einstellungen\r\n        const aiGroup = new vscode.TreeItem(\r\n            'KI Provider',\r\n            vscode.TreeItemCollapsibleState.Expanded\r\n        );\r\n        aiGroup.contextValue = 'ai-group';\r\n        aiGroup.iconPath = new vscode.ThemeIcon('robot');\r\n        items.push(aiGroup);\r\n\r\n        // Trigger Einstellungen\r\n        const triggerGroup = new vscode.TreeItem(\r\n            'Trigger Regeln',\r\n            vscode.TreeItemCollapsibleState.Expanded\r\n        );\r\n        triggerGroup.contextValue = 'trigger-group';\r\n        triggerGroup.iconPath = new vscode.ThemeIcon('settings-gear');\r\n        items.push(triggerGroup);\r\n\r\n        // UI Einstellungen\r\n        const uiGroup = new vscode.TreeItem(\r\n            'Benutzeroberfläche',\r\n            vscode.TreeItemCollapsibleState.Expanded\r\n        );\r\n        uiGroup.contextValue = 'ui-group';\r\n        uiGroup.iconPath = new vscode.ThemeIcon('layout');\r\n        items.push(uiGroup);\r\n\r\n        return items;\r\n    }\r\n\r\n    async _getSubItems(element) {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const items = [];\r\n\r\n        switch (element.contextValue) {\r\n            case 'status-group':\r\n                return this._getStatusItems();\r\n            case 'git-group':\r\n                return this._getGitItems();\r\n            case 'ai-group':\r\n                return this._getAIItems();\r\n            case 'trigger-group':\r\n                return this._getTriggerItems();\r\n            case 'ui-group':\r\n                return this._getUIItems();\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    async _getStatusItems() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const enabled = config.get('autoCommitEnabled');\r\n        const items = [];\r\n\r\n        // Hauptstatus\r\n        const statusItem = new vscode.TreeItem(\r\n            `Comitto: ${enabled ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        statusItem.contextValue = enabled ? 'comitto-status-enabled' : 'comitto-status-disabled';\r\n        statusItem.iconPath = new vscode.ThemeIcon(enabled ? 'check-all' : 'circle-slash');\r\n        statusItem.tooltip = enabled ? 'Auto-Commits sind aktiviert' : 'Auto-Commits sind deaktiviert';\r\n        statusItem.command = {\r\n            command: 'comitto.toggleAutoCommit',\r\n            title: 'Toggle Auto-Commit'\r\n        };\r\n        items.push(statusItem);\r\n\r\n        // Manueller Commit\r\n        const manualCommitItem = new vscode.TreeItem(\r\n            'Manueller Commit',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        manualCommitItem.iconPath = new vscode.ThemeIcon('git-commit');\r\n        manualCommitItem.tooltip = 'Führt einen manuellen KI-Commit aus';\r\n        manualCommitItem.command = {\r\n            command: 'comitto.manualCommit',\r\n            title: 'Manual Commit'\r\n        };\r\n        items.push(manualCommitItem);\r\n\r\n        // Alle Dateien stagen\r\n        const stageAllItem = new vscode.TreeItem(\r\n            'Alle Dateien stagen',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        stageAllItem.iconPath = new vscode.ThemeIcon('add');\r\n        stageAllItem.tooltip = 'Staged alle geänderten Dateien';\r\n        stageAllItem.command = {\r\n            command: 'comitto.stageAll',\r\n            title: 'Stage All'\r\n        };\r\n        items.push(stageAllItem);\r\n\r\n        // Ausgewählte Dateien stagen\r\n        const stageSelectedItem = new vscode.TreeItem(\r\n            'Ausgewählte Dateien stagen',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        stageSelectedItem.iconPath = new vscode.ThemeIcon('checklist');\r\n        stageSelectedItem.tooltip = 'Ermöglicht Auswahl bestimmter Dateien zum Stagen';\r\n        stageSelectedItem.command = {\r\n            command: 'comitto.stageSelected',\r\n            title: 'Stage Selected Files'\r\n        };\r\n        items.push(stageSelectedItem);\r\n\r\n        // Dashboard öffnen\r\n        const dashboardItem = new vscode.TreeItem(\r\n            'Dashboard öffnen',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        dashboardItem.iconPath = new vscode.ThemeIcon('dashboard');\r\n        dashboardItem.tooltip = 'Öffnet das erweiterte Dashboard';\r\n        dashboardItem.command = {\r\n            command: 'comitto.showDashboard',\r\n            title: 'Show Dashboard'\r\n        };\r\n        items.push(dashboardItem);\r\n\r\n        // Einfache UI öffnen\r\n        const simpleUIItem = new vscode.TreeItem(\r\n            'Einfache Oberfläche',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        simpleUIItem.iconPath = new vscode.ThemeIcon('rocket');\r\n        simpleUIItem.tooltip = 'Öffnet die vereinfachte Benutzeroberfläche';\r\n        simpleUIItem.command = {\r\n            command: 'comitto.showSimpleUI',\r\n            title: 'Show Simple UI'\r\n        };\r\n        items.push(simpleUIItem);\r\n\r\n        return items;\r\n    }\r\n\r\n    async _getGitItems() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const gitSettings = config.get('gitSettings');\r\n        const items = [];\r\n\r\n        // Auto-Push\r\n        const autoPushItem = new vscode.TreeItem(\r\n            `Auto-Push: ${gitSettings.autoPush ? 'Aktiviert' : 'Deaktiviert'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        autoPushItem.iconPath = new vscode.ThemeIcon(gitSettings.autoPush ? 'cloud-upload' : 'x');\r\n        autoPushItem.tooltip = 'Automatisches Push nach Commit';\r\n        autoPushItem.command = {\r\n            command: 'comitto.toggleAutoPush',\r\n            title: 'Toggle Auto Push'\r\n        };\r\n        items.push(autoPushItem);\r\n\r\n        // Branch\r\n        const branchItem = new vscode.TreeItem(\r\n            `Branch: ${gitSettings.branch || 'Aktueller Branch'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        branchItem.iconPath = new vscode.ThemeIcon('git-branch');\r\n        branchItem.tooltip = 'Ziel-Branch für Commits';\r\n        branchItem.command = {\r\n            command: 'comitto.editBranch',\r\n            title: 'Edit Branch'\r\n        };\r\n        items.push(branchItem);\r\n\r\n        // Commit-Stil\r\n        const commitStyleMap = {\r\n            'conventional': 'Conventional Commits',\r\n            'gitmoji': 'Gitmoji',\r\n            'simple': 'Einfach',\r\n            'angular': 'Angular',\r\n            'atom': 'Atom'\r\n        };\r\n        const currentStyle = commitStyleMap[gitSettings.commitMessageStyle] || 'Conventional';\r\n        const commitStyleItem = new vscode.TreeItem(\r\n            `Commit-Stil: ${currentStyle}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        commitStyleItem.iconPath = new vscode.ThemeIcon('symbol-string');\r\n        commitStyleItem.tooltip = 'Stil der generierten Commit-Nachrichten';\r\n        commitStyleItem.command = {\r\n            command: 'comitto.selectCommitStyle',\r\n            title: 'Select Commit Style'\r\n        };\r\n        items.push(commitStyleItem);\r\n\r\n        // Commit-Sprache\r\n        const languageMap = {\r\n            'de': 'Deutsch',\r\n            'en': 'English',\r\n            'fr': 'Français',\r\n            'es': 'Español',\r\n            'it': 'Italiano',\r\n            'ja': '日本語',\r\n            'zh': '中文'\r\n        };\r\n        const currentLanguage = languageMap[gitSettings.commitMessageLanguage] || 'Deutsch';\r\n        const languageItem = new vscode.TreeItem(\r\n            `Sprache: ${currentLanguage}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        languageItem.iconPath = new vscode.ThemeIcon('symbol-misc');\r\n        languageItem.tooltip = 'Sprache für Commit-Nachrichten';\r\n        languageItem.command = {\r\n            command: 'comitto.selectCommitLanguage',\r\n            title: 'Select Commit Language'\r\n        };\r\n        items.push(languageItem);\r\n\r\n        // Stage-Modus\r\n        const stageModeMap = {\r\n            'all': 'Alle Dateien',\r\n            'specific': 'Spezifische Dateien',\r\n            'ask': 'Nachfragen'\r\n        };\r\n        const currentStageMode = stageModeMap[gitSettings.stageMode] || 'Alle Dateien';\r\n        const stageModeItem = new vscode.TreeItem(\r\n            `Stage-Modus: ${currentStageMode}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        stageModeItem.iconPath = new vscode.ThemeIcon('file-add');\r\n        stageModeItem.tooltip = 'Bestimmt, welche Dateien automatisch gestagt werden';\r\n        stageModeItem.command = {\r\n            command: 'comitto.selectStageMode',\r\n            title: 'Select Stage Mode'\r\n        };\r\n        items.push(stageModeItem);\r\n\r\n        // Gitignore verwenden\r\n        const gitignoreItem = new vscode.TreeItem(\r\n            `Gitignore: ${gitSettings.useGitignore ? 'Respektiert' : 'Ignoriert'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        gitignoreItem.iconPath = new vscode.ThemeIcon(gitSettings.useGitignore ? 'eye' : 'eye-closed');\r\n        gitignoreItem.tooltip = 'Ob .gitignore Regeln beachtet werden';\r\n        gitignoreItem.command = {\r\n            command: 'comitto.toggleUseGitignore',\r\n            title: 'Toggle Use Gitignore'\r\n        };\r\n        items.push(gitignoreItem);\r\n\r\n        return items;\r\n    }\r\n\r\n    async _getAIItems() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const currentProvider = config.get('aiProvider');\r\n        const items = [];\r\n\r\n        // KI-Provider\r\n        const providerMap = {\r\n            'openai': 'OpenAI',\r\n            'anthropic': 'Anthropic',\r\n            'ollama': 'Ollama'\r\n        };\r\n        const providerItem = new vscode.TreeItem(\r\n            `Provider: ${providerMap[currentProvider] || currentProvider}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        providerItem.iconPath = new vscode.ThemeIcon('robot');\r\n        providerItem.tooltip = 'Aktueller KI-Provider für Commit-Nachrichten';\r\n        providerItem.command = {\r\n            command: 'comitto.configureAIProvider',\r\n            title: 'Configure AI Provider'\r\n        };\r\n        items.push(providerItem);\r\n\r\n        // Provider-spezifische Einstellungen\r\n        switch (currentProvider) {\r\n            case 'openai':\r\n                const openaiSettings = config.get('openai');\r\n                const openaiModelItem = new vscode.TreeItem(\r\n                    `OpenAI Modell: ${openaiSettings.model}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                openaiModelItem.iconPath = new vscode.ThemeIcon('symbol-parameter');\r\n                openaiModelItem.command = {\r\n                    command: 'comitto.selectOpenAIModel',\r\n                    title: 'Select OpenAI Model'\r\n                };\r\n                items.push(openaiModelItem);\r\n\r\n                const openaiKeyItem = new vscode.TreeItem(\r\n                    `API-Schlüssel: ${openaiSettings.apiKey ? 'Konfiguriert' : 'Nicht gesetzt'}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                openaiKeyItem.iconPath = new vscode.ThemeIcon('key');\r\n                openaiKeyItem.command = {\r\n                    command: 'comitto.editOpenAIKey',\r\n                    title: 'Edit OpenAI API Key'\r\n                };\r\n                items.push(openaiKeyItem);\r\n                break;\r\n\r\n            case 'anthropic':\r\n                const anthropicSettings = config.get('anthropic');\r\n                const anthropicModelItem = new vscode.TreeItem(\r\n                    `Anthropic Modell: ${anthropicSettings.model}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                anthropicModelItem.iconPath = new vscode.ThemeIcon('symbol-parameter');\r\n                anthropicModelItem.command = {\r\n                    command: 'comitto.selectAnthropicModel',\r\n                    title: 'Select Anthropic Model'\r\n                };\r\n                items.push(anthropicModelItem);\r\n\r\n                const anthropicKeyItem = new vscode.TreeItem(\r\n                    `API-Schlüssel: ${anthropicSettings.apiKey ? 'Konfiguriert' : 'Nicht gesetzt'}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                anthropicKeyItem.iconPath = new vscode.ThemeIcon('key');\r\n                anthropicKeyItem.command = {\r\n                    command: 'comitto.editAnthropicKey',\r\n                    title: 'Edit Anthropic API Key'\r\n                };\r\n                items.push(anthropicKeyItem);\r\n                break;\r\n\r\n            case 'ollama':\r\n                const ollamaSettings = config.get('ollama');\r\n                const ollamaModelItem = new vscode.TreeItem(\r\n                    `Ollama Modell: ${ollamaSettings.model}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                ollamaModelItem.iconPath = new vscode.ThemeIcon('symbol-parameter');\r\n                items.push(ollamaModelItem);\r\n\r\n                const ollamaEndpointItem = new vscode.TreeItem(\r\n                    `Endpoint: ${ollamaSettings.endpoint}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                ollamaEndpointItem.iconPath = new vscode.ThemeIcon('globe');\r\n                items.push(ollamaEndpointItem);\r\n                break;\r\n        }\r\n\r\n        // Prompt-Template\r\n        const promptItem = new vscode.TreeItem(\r\n            'Prompt-Template bearbeiten',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        promptItem.iconPath = new vscode.ThemeIcon('edit');\r\n        promptItem.tooltip = 'Bearbeitet die Vorlage für KI-Prompts';\r\n        promptItem.command = {\r\n            command: 'comitto.editPromptTemplate',\r\n            title: 'Edit Prompt Template'\r\n        };\r\n        items.push(promptItem);\r\n\r\n        return items;\r\n    }\r\n\r\n    async _getTriggerItems() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const triggerRules = config.get('triggerRules');\r\n        const items = [];\r\n\r\n        // Trigger konfigurieren (Haupteintrag)\r\n        const configureItem = new vscode.TreeItem(\r\n            'Trigger konfigurieren',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        configureItem.iconPath = new vscode.ThemeIcon('settings-gear');\r\n        configureItem.tooltip = 'Öffnet die Trigger-Konfiguration';\r\n        configureItem.command = {\r\n            command: 'comitto.configureTriggers',\r\n            title: 'Configure Triggers'\r\n        };\r\n        items.push(configureItem);\r\n\r\n        // Bei Speichern\r\n        const onSaveItem = new vscode.TreeItem(\r\n            `Bei Speichern: ${triggerRules.onSave ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        onSaveItem.iconPath = new vscode.ThemeIcon(triggerRules.onSave ? 'check' : 'x');\r\n        onSaveItem.command = {\r\n            command: 'comitto.toggleOnSave',\r\n            title: 'Toggle On Save'\r\n        };\r\n        items.push(onSaveItem);\r\n\r\n        // Intervall-basiert\r\n        const onIntervalItem = new vscode.TreeItem(\r\n            `Intervall (${triggerRules.intervalMinutes}min): ${triggerRules.onInterval ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        onIntervalItem.iconPath = new vscode.ThemeIcon(triggerRules.onInterval ? 'clock' : 'circle-slash');\r\n        onIntervalItem.command = {\r\n            command: 'comitto.toggleOnInterval',\r\n            title: 'Toggle On Interval'\r\n        };\r\n        items.push(onIntervalItem);\r\n\r\n        // Bei Branch-Wechsel\r\n        const onBranchItem = new vscode.TreeItem(\r\n            `Bei Branch-Wechsel: ${triggerRules.onBranchSwitch ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        onBranchItem.iconPath = new vscode.ThemeIcon(triggerRules.onBranchSwitch ? 'git-branch' : 'x');\r\n        onBranchItem.command = {\r\n            command: 'comitto.toggleOnBranchSwitch',\r\n            title: 'Toggle On Branch Switch'\r\n        };\r\n        items.push(onBranchItem);\r\n\r\n        // Schwellwerte\r\n        const fileCountItem = new vscode.TreeItem(\r\n            `Datei-Anzahl-Schwelle: ${triggerRules.fileCountThreshold}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        fileCountItem.iconPath = new vscode.ThemeIcon('file-code');\r\n        fileCountItem.command = {\r\n            command: 'comitto.editFileCountThreshold',\r\n            title: 'Edit File Count Threshold'\r\n        };\r\n        items.push(fileCountItem);\r\n\r\n        const timeThresholdItem = new vscode.TreeItem(\r\n            `Zeit-Schwelle: ${triggerRules.timeThresholdMinutes} min`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        timeThresholdItem.iconPath = new vscode.ThemeIcon('clock');\r\n        timeThresholdItem.command = {\r\n            command: 'comitto.editTimeThreshold',\r\n            title: 'Edit Time Threshold'\r\n        };\r\n        items.push(timeThresholdItem);\r\n\r\n        const changeCountItem = new vscode.TreeItem(\r\n            `Mindest-Änderungen: ${triggerRules.minChangeCount}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        changeCountItem.iconPath = new vscode.ThemeIcon('diff');\r\n        changeCountItem.command = {\r\n            command: 'comitto.editMinChangeCount',\r\n            title: 'Edit Min Change Count'\r\n        };\r\n        items.push(changeCountItem);\r\n\r\n        return items;\r\n    }\r\n\r\n    async _getUIItems() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const uiSettings = config.get('uiSettings');\r\n        const items = [];\r\n\r\n        // Einfacher Modus\r\n        const simpleModeItem = new vscode.TreeItem(\r\n            `Einfacher Modus: ${uiSettings.simpleMode ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        simpleModeItem.iconPath = new vscode.ThemeIcon(uiSettings.simpleMode ? 'eye' : 'eye-closed');\r\n        simpleModeItem.command = {\r\n            command: 'comitto.toggleSimpleMode',\r\n            title: 'Toggle Simple Mode'\r\n        };\r\n        items.push(simpleModeItem);\r\n\r\n        // Theme\r\n        const themeItem = new vscode.TreeItem(\r\n            `Theme: ${uiSettings.theme || 'auto'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        themeItem.iconPath = new vscode.ThemeIcon('color-mode');\r\n        themeItem.command = {\r\n            command: 'comitto.selectTheme',\r\n            title: 'Select Theme'\r\n        };\r\n        items.push(themeItem);\r\n\r\n        // Benachrichtigungen\r\n        const notificationSettings = config.get('notifications');\r\n        const notificationItem = new vscode.TreeItem(\r\n            `Benachrichtigungen: ${uiSettings.showNotifications ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        notificationItem.iconPath = new vscode.ThemeIcon(uiSettings.showNotifications ? 'bell' : 'bell-slash');\r\n        items.push(notificationItem);\r\n\r\n        // Einstellungen öffnen\r\n        const settingsItem = new vscode.TreeItem(\r\n            'VS Code Einstellungen öffnen',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        settingsItem.iconPath = new vscode.ThemeIcon('gear');\r\n        settingsItem.command = {\r\n            command: 'comitto.openSettings',\r\n            title: 'Open Settings'\r\n        };\r\n        items.push(settingsItem);\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\n/**\r\n * Provider für die Debug-Logs Ansicht\r\n */\r\nclass LogsViewProvider {\r\n    constructor(context) {\r\n        this._onDidChangeTreeData = new vscode.EventEmitter();\r\n        this.onDidChangeTreeData = this._onDidChangeTreeData.event;\r\n        this._context = context;\r\n        this._logs = [];\r\n    }\r\n\r\n    refresh() {\r\n        this._onDidChangeTreeData.fire();\r\n    }\r\n\r\n    addLog(message, type = 'info') {\r\n        const timestamp = new Date().toLocaleTimeString();\r\n        const logEntry = {\r\n            message,\r\n            type,\r\n            timestamp,\r\n            id: Date.now()\r\n        };\r\n        this._logs.unshift(logEntry);\r\n        \r\n        // Maximal 50 Logs behalten\r\n        if (this._logs.length > 50) {\r\n            this._logs = this._logs.slice(0, 50);\r\n        }\r\n        \r\n        this.refresh();\r\n    }\r\n\r\n    clearLogs() {\r\n        this._logs = [];\r\n        this.refresh();\r\n    }\r\n\r\n    getTreeItem(element) {\r\n        return element;\r\n    }\r\n\r\n    async getChildren() {\r\n        const items = [];\r\n        \r\n        // Clear Button\r\n        const clearItem = new vscode.TreeItem(\r\n            'Logs löschen',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        clearItem.iconPath = new vscode.ThemeIcon('trash');\r\n        clearItem.tooltip = 'Löscht alle Debug-Logs';\r\n        clearItem.command = {\r\n            command: 'comitto.clearLogs',\r\n            title: 'Clear Logs'\r\n        };\r\n        items.push(clearItem);\r\n\r\n        // Log Entries\r\n        for (const log of this._logs) {\r\n            const logItem = new vscode.TreeItem(\r\n                `[${log.timestamp}] ${log.message}`,\r\n                vscode.TreeItemCollapsibleState.None\r\n            );\r\n            \r\n            switch (log.type) {\r\n                case 'error':\r\n                    logItem.iconPath = new vscode.ThemeIcon('error');\r\n                    break;\r\n                case 'warning':\r\n                    logItem.iconPath = new vscode.ThemeIcon('warning');\r\n                    break;\r\n                case 'success':\r\n                    logItem.iconPath = new vscode.ThemeIcon('check');\r\n                    break;\r\n                default:\r\n                    logItem.iconPath = new vscode.ThemeIcon('info');\r\n            }\r\n            \r\n            logItem.tooltip = `${log.type.toUpperCase()}: ${log.message}`;\r\n            items.push(logItem);\r\n        }\r\n\r\n        if (this._logs.length === 0) {\r\n            const emptyItem = new vscode.TreeItem(\r\n                'Keine Logs vorhanden',\r\n                vscode.TreeItemCollapsibleState.None\r\n            );\r\n            emptyItem.iconPath = new vscode.ThemeIcon('info');\r\n            items.push(emptyItem);\r\n        }\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\n/**\r\n * Verbesserter Dashboard Provider mit schönerer UI und weniger Störungen\r\n */\r\nclass DashboardProvider {\r\n    constructor(context) {\r\n        this._context = context;\r\n        this._panel = null;\r\n    }\r\n\r\n    show() {\r\n        if (this._panel) {\r\n            this._panel.reveal();\r\n        } else {\r\n            this._panel = vscode.window.createWebviewPanel(\r\n                'comittoDashboard',\r\n                'Comitto Dashboard',\r\n                vscode.ViewColumn.One,\r\n                {\r\n                    enableScripts: true,\r\n                    retainContextWhenHidden: true,\r\n                    localResourceRoots: [\r\n                        vscode.Uri.file(path.join(this._context.extensionPath, 'resources'))\r\n                    ]\r\n                }\r\n            );\r\n\r\n            this._panel.webview.html = this._getDashboardContent();\r\n            \r\n            this._panel.onDidDispose(() => {\r\n                this._panel = null;\r\n            });\r\n\r\n            this._panel.webview.onDidReceiveMessage(message => {\r\n                this._handleDashboardMessage(message);\r\n            });\r\n        }\r\n    }\r\n\r\n    _getDashboardContent() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const enabled = config.get('autoCommitEnabled');\r\n        const aiProvider = config.get('aiProvider');\r\n        const gitSettings = config.get('gitSettings');\r\n        \r\n        return `<!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Comitto Dashboard</title>\r\n    <style>\r\n        * {\r\n            margin: 0;\r\n            padding: 0;\r\n            box-sizing: border-box;\r\n        }\r\n        \r\n        body {\r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\r\n            background: linear-gradient(135deg,rgb(12, 22, 66) 0%,rgb(23, 8, 37) 100%);\r\n            color: white;\r\n            min-height: 100vh;\r\n            padding: 20px;\r\n        }\r\n        \r\n        .container {\r\n            max-width: 1200px;\r\n            margin: 0 auto;\r\n        }\r\n        \r\n        .header {\r\n            text-align: center;\r\n            margin-bottom: 40px;\r\n        }\r\n        \r\n        .header h1 {\r\n            font-size: 2.5rem;\r\n            margin-bottom: 10px;\r\n            background: linear-gradient(45deg, #fff, #f0f0f0);\r\n            -webkit-background-clip: text;\r\n            -webkit-text-fill-color: transparent;\r\n            background-clip: text;\r\n        }\r\n        \r\n        .grid {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n            gap: 20px;\r\n            margin-bottom: 30px;\r\n        }\r\n        \r\n        .card {\r\n            background: rgba(255, 255, 255, 0.1);\r\n            backdrop-filter: blur(10px);\r\n            border-radius: 15px;\r\n            padding: 25px;\r\n            border: 1px solid rgba(255, 255, 255, 0.2);\r\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n        }\r\n        \r\n        .card:hover {\r\n            transform: translateY(-5px);\r\n            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\r\n        }\r\n        \r\n        .card h3 {\r\n            font-size: 1.4rem;\r\n            margin-bottom: 15px;\r\n            display: flex;\r\n            align-items: center;\r\n            gap: 10px;\r\n        }\r\n        \r\n        .status-indicator {\r\n            width: 12px;\r\n            height: 12px;\r\n            border-radius: 50%;\r\n            display: inline-block;\r\n        }\r\n        \r\n        .status-active { background-color: #4ade80; }\r\n        .status-inactive { background-color: #f87171; }\r\n        \r\n        .btn {\r\n            background: linear-gradient(45deg, #4ade80, #22c55e);\r\n            border: none;\r\n            padding: 12px 24px;\r\n            border-radius: 8px;\r\n            color: white;\r\n            font-weight: 600;\r\n            cursor: pointer;\r\n            transition: all 0.3s ease;\r\n            margin: 5px;\r\n            display: inline-block;\r\n            text-decoration: none;\r\n        }\r\n        \r\n        .btn:hover {\r\n            transform: translateY(-2px);\r\n            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\r\n        }\r\n        \r\n        .btn-secondary {\r\n            background: linear-gradient(45deg, #6366f1, #8b5cf6);\r\n        }\r\n        \r\n        .btn-danger {\r\n            background: linear-gradient(45deg, #ef4444, #dc2626);\r\n        }\r\n        \r\n        .stats {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n            gap: 15px;\r\n            margin-top: 20px;\r\n        }\r\n        \r\n        .stat-card {\r\n            background: rgba(255, 255, 255, 0.05);\r\n            padding: 15px;\r\n            border-radius: 10px;\r\n            text-align: center;\r\n        }\r\n        \r\n        .stat-number {\r\n            font-size: 2rem;\r\n            font-weight: bold;\r\n            color: #4ade80;\r\n        }\r\n        \r\n        .logs-section {\r\n            background: rgba(0, 0, 0, 0.3);\r\n            border-radius: 15px;\r\n            padding: 20px;\r\n            margin-top: 20px;\r\n            max-height: 300px;\r\n            overflow-y: auto;\r\n        }\r\n        \r\n        .log-entry {\r\n            padding: 8px 0;\r\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n            font-family: 'Courier New', monospace;\r\n            font-size: 0.9rem;\r\n        }\r\n        \r\n        .log-entry:last-child {\r\n            border-bottom: none;\r\n        }\r\n        \r\n        .log-info { color: #60a5fa; }\r\n        .log-success { color: #4ade80; }\r\n        .log-warning { color: #fbbf24; }\r\n        .log-error { color: #f87171; }\r\n        \r\n        @media (max-width: 768px) {\r\n            .grid {\r\n                grid-template-columns: 1fr;\r\n            }\r\n            \r\n            .header h1 {\r\n                font-size: 2rem;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n            <h1>🚀 Comitto Dashboard</h1>\r\n            <p>Intelligent Git Commit Management</p>\r\n        </div>\r\n        \r\n        <div class=\"grid\">\r\n            <div class=\"card\">\r\n                <h3>\r\n                    <span class=\"status-indicator ${enabled ? 'status-active' : 'status-inactive'}\"></span>\r\n                    Status\r\n                </h3>\r\n                <p>Auto-Commits: <strong>${enabled ? 'Aktiv' : 'Inaktiv'}</strong></p>\r\n                <p>KI-Provider: <strong>${aiProvider.toUpperCase()}</strong></p>\r\n                <p>Commit-Stil: <strong>${gitSettings.commitMessageStyle || 'conventional'}</strong></p>\r\n                <div style=\"margin-top: 15px;\">\r\n                    <button class=\"btn\" onclick=\"toggleAutoCommit()\">\r\n                        ${enabled ? 'Deaktivieren' : 'Aktivieren'}\r\n                    </button>\r\n                    <button class=\"btn btn-secondary\" onclick=\"manualCommit()\">\r\n                        Manueller Commit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"card\">\r\n                <h3>🛠️ Schnellaktionen</h3>\r\n                <button class=\"btn\" onclick=\"executeCommand('comitto.stageAll')\">Alle Dateien stagen</button>\r\n                <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.stageSelected')\">Auswahl stagen</button>\r\n                <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.configureTriggers')\">Trigger konfigurieren</button>\r\n                <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.configureAIProvider')\">KI konfigurieren</button>\r\n            </div>\r\n            \r\n            <div class=\"card\">\r\n                <h3>📊 Statistiken</h3>\r\n                <div class=\"stats\">\r\n                    <div class=\"stat-card\">\r\n                        <div class=\"stat-number\" id=\"commitCount\">-</div>\r\n                        <div>Commits heute</div>\r\n                    </div>\r\n                    <div class=\"stat-card\">\r\n                        <div class=\"stat-number\" id=\"filesStaged\">-</div>\r\n                        <div>Dateien gestagt</div>\r\n                    </div>\r\n                </div>\r\n                <div style=\"margin-top: 15px;\">\r\n                    <button class=\"btn btn-secondary\" onclick=\"refreshStats()\">Aktualisieren</button>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"card\">\r\n                <h3>⚙️ Konfiguration</h3>\r\n                <p><strong>Branch:</strong> ${gitSettings.branch || 'Aktueller Branch'}</p>\r\n                <p><strong>Auto-Push:</strong> ${gitSettings.autoPush ? 'Ja' : 'Nein'}</p>\r\n                <p><strong>Sprache:</strong> ${gitSettings.commitMessageLanguage || 'de'}</p>\r\n                <div style=\"margin-top: 15px;\">\r\n                    <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.openSettings')\">Einstellungen öffnen</button>\r\n                    <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.showSimpleUI')\">Einfache UI</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"logs-section\">\r\n            <h3>📋 Aktuelle Logs</h3>\r\n            <div id=\"logs-container\">\r\n                <div class=\"log-entry log-info\">[${new Date().toLocaleTimeString()}] Dashboard geladen</div>\r\n            </div>\r\n            <div style=\"margin-top: 15px;\">\r\n                <button class=\"btn btn-danger\" onclick=\"clearLogs()\">Logs löschen</button>\r\n                <button class=\"btn btn-secondary\" onclick=\"refreshLogs()\">Aktualisieren</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <script>\r\n        const vscode = acquireVsCodeApi();\r\n        \r\n        function executeCommand(commandId) {\r\n            vscode.postMessage({\r\n                command: 'executeCommand',\r\n                commandId: commandId\r\n            });\r\n            addLog('Command ausgeführt: ' + commandId, 'info');\r\n        }\r\n        \r\n        function toggleAutoCommit() {\r\n            vscode.postMessage({\r\n                command: 'executeCommand',\r\n                commandId: 'comitto.toggleAutoCommit'\r\n            });\r\n            addLog('Auto-Commit umgeschaltet', 'info');\r\n        }\r\n        \r\n        function manualCommit() {\r\n            vscode.postMessage({\r\n                command: 'executeCommand',\r\n                commandId: 'comitto.manualCommit'\r\n            });\r\n            addLog('Manueller Commit gestartet', 'info');\r\n        }\r\n        \r\n        function refreshStats() {\r\n            // Statistiken aktualisieren (Dummy-Daten für Demo)\r\n            document.getElementById('commitCount').textContent = Math.floor(Math.random() * 20);\r\n            document.getElementById('filesStaged').textContent = Math.floor(Math.random() * 10);\r\n            addLog('Statistiken aktualisiert', 'success');\r\n        }\r\n        \r\n        function addLog(message, type = 'info') {\r\n            const logsContainer = document.getElementById('logs-container');\r\n            const timestamp = new Date().toLocaleTimeString();\r\n            const logEntry = document.createElement('div');\r\n            logEntry.className = 'log-entry log-' + type;\r\n            logEntry.textContent = '[' + timestamp + '] ' + message;\r\n            logsContainer.insertBefore(logEntry, logsContainer.firstChild);\r\n            \r\n            // Maximal 20 Logs anzeigen\r\n            const logs = logsContainer.children;\r\n            if (logs.length > 20) {\r\n                logsContainer.removeChild(logs[logs.length - 1]);\r\n            }\r\n        }\r\n        \r\n        function clearLogs() {\r\n            document.getElementById('logs-container').innerHTML = '';\r\n            addLog('Dashboard geladen', 'info');\r\n        }\r\n        \r\n        function refreshLogs() {\r\n            vscode.postMessage({\r\n                command: 'refreshLogs'\r\n            });\r\n        }\r\n        \r\n        // Initial stats laden\r\n        refreshStats();\r\n    </script>\r\n</body>\r\n</html>`;\r\n    }\r\n\r\n    async _handleDashboardMessage(message) {\r\n        switch (message.command) {\r\n            case 'executeCommand':\r\n                await vscode.commands.executeCommand(message.commandId);\r\n                break;\r\n            case 'refreshLogs':\r\n                // Logs aktualisieren\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Vereinfachte UI Provider\r\n */\r\nclass SimpleUIProvider {\r\n    constructor(context) {\r\n        this._context = context;\r\n        this._panel = null;\r\n    }\r\n\r\n    show() {\r\n        if (this._panel) {\r\n            this._panel.reveal();\r\n        } else {\r\n            this._panel = vscode.window.createWebviewPanel(\r\n                'comittoSimpleUI',\r\n                'Comitto - Einfache Oberfläche',\r\n                vscode.ViewColumn.One,\r\n                {\r\n                    enableScripts: true,\r\n                    retainContextWhenHidden: true\r\n                }\r\n            );\r\n\r\n            this._panel.webview.html = this._getSimpleUIContent();\r\n            \r\n            this._panel.onDidDispose(() => {\r\n                this._panel = null;\r\n            });\r\n\r\n            this._panel.webview.onDidReceiveMessage(message => {\r\n                this._handleSimpleUIMessage(message);\r\n            });\r\n        }\r\n    }\r\n\r\n    _getSimpleUIContent() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const enabled = config.get('autoCommitEnabled');\r\n        \r\n        return `<!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Comitto - Einfache Oberfläche</title>\r\n    <style>\r\n        body {\r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\r\n            max-width: 600px;\r\n            margin: 40px auto;\r\n            padding: 30px;\r\n            background: #f8fafc;\r\n            color: #334155;\r\n        }\r\n        \r\n        .header {\r\n            text-align: center;\r\n            margin-bottom: 40px;\r\n        }\r\n        \r\n        .status {\r\n            text-align: center;\r\n            padding: 20px;\r\n            border-radius: 12px;\r\n            margin-bottom: 30px;\r\n            font-size: 1.2rem;\r\n            font-weight: 600;\r\n        }\r\n        \r\n        .status.active {\r\n            background: #dcfce7;\r\n            color: #166534;\r\n            border: 2px solid #22c55e;\r\n        }\r\n        \r\n        .status.inactive {\r\n            background: #fef2f2;\r\n            color: #991b1b;\r\n            border: 2px solid #ef4444;\r\n        }\r\n        \r\n        .buttons {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n            gap: 15px;\r\n            margin-bottom: 30px;\r\n        }\r\n        \r\n        .btn {\r\n            padding: 15px 25px;\r\n            border: none;\r\n            border-radius: 8px;\r\n            font-size: 1rem;\r\n            font-weight: 600;\r\n            cursor: pointer;\r\n            transition: all 0.2s ease;\r\n        }\r\n        \r\n        .btn-primary {\r\n            background: #3b82f6;\r\n            color: white;\r\n        }\r\n        \r\n        .btn-primary:hover {\r\n            background: #2563eb;\r\n        }\r\n        \r\n        .btn-secondary {\r\n            background: #e2e8f0;\r\n            color: #475569;\r\n        }\r\n        \r\n        .btn-secondary:hover {\r\n            background: #cbd5e1;\r\n        }\r\n        \r\n        .btn-success {\r\n            background: #10b981;\r\n            color: white;\r\n        }\r\n        \r\n        .btn-success:hover {\r\n            background: #059669;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"header\">\r\n        <h1>🚀 Comitto</h1>\r\n        <p>Einfache Benutzeroberfläche</p>\r\n    </div>\r\n    \r\n    <div class=\"status ${enabled ? 'active' : 'inactive'}\">\r\n        ${enabled ? '✅ Auto-Commits sind aktiv' : '❌ Auto-Commits sind inaktiv'}\r\n    </div>\r\n    \r\n    <div class=\"buttons\">\r\n        <button class=\"btn btn-primary\" onclick=\"toggleAutoCommit()\">\r\n            ${enabled ? 'Deaktivieren' : 'Aktivieren'}\r\n        </button>\r\n        <button class=\"btn btn-success\" onclick=\"manualCommit()\">\r\n            Manueller Commit\r\n        </button>\r\n        <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.stageAll')\">\r\n            Alle Dateien stagen\r\n        </button>\r\n        <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.configureTriggers')\">\r\n            Trigger konfigurieren\r\n        </button>\r\n        <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.configureAIProvider')\">\r\n            KI konfigurieren\r\n        </button>\r\n        <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.showDashboard')\">\r\n            Dashboard öffnen\r\n        </button>\r\n    </div>\r\n    \r\n    <script>\r\n        const vscode = acquireVsCodeApi();\r\n        \r\n        function executeCommand(commandId) {\r\n            vscode.postMessage({\r\n                command: 'executeCommand',\r\n                commandId: commandId\r\n            });\r\n        }\r\n        \r\n        function toggleAutoCommit() {\r\n            executeCommand('comitto.toggleAutoCommit');\r\n        }\r\n        \r\n        function manualCommit() {\r\n            executeCommand('comitto.manualCommit');\r\n        }\r\n    </script>\r\n</body>\r\n</html>`;\r\n    }\r\n\r\n    async _handleSimpleUIMessage(message) {\r\n        if (message.command === 'executeCommand') {\r\n            await vscode.commands.executeCommand(message.commandId);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    MainViewProvider,\r\n    LogsViewProvider,\r\n    DashboardProvider,\r\n    SimpleUIProvider\r\n}; ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(9829);\n"],"names":["module","exports","require","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","toPrimitive","String","_toPrimitive","vscode","path","MainViewProvider","context","this","_onDidChangeTreeData","EventEmitter","onDidChangeTreeData","event","_context","fire","element","_getChildren","_callee","items","statusGroup","gitGroup","aiGroup","triggerGroup","uiGroup","_getSubItems","workspace","getConfiguration","get","TreeItem","TreeItemCollapsibleState","Expanded","contextValue","iconPath","ThemeIcon","_x","_getSubItems2","_callee2","_context2","t0","_getStatusItems","_getGitItems","_getAIItems","_getTriggerItems","_getUIItems","_x2","_getStatusItems2","_callee3","config","enabled","statusItem","manualCommitItem","stageAllItem","stageSelectedItem","dashboardItem","simpleUIItem","_context3","concat","None","tooltip","command","title","_getGitItems2","_callee4","gitSettings","autoPushItem","branchItem","currentStyle","commitStyleItem","currentLanguage","languageItem","currentStageMode","stageModeItem","gitignoreItem","_context4","autoPush","branch","commitMessageStyle","commitMessageLanguage","stageMode","useGitignore","_getAIItems2","_callee5","currentProvider","providerMap","providerItem","openaiSettings","openaiModelItem","openaiKeyItem","anthropicSettings","anthropicModelItem","anthropicKeyItem","ollamaSettings","ollamaModelItem","ollamaEndpointItem","promptItem","_context5","model","apiKey","endpoint","_getTriggerItems2","_callee6","triggerRules","configureItem","onSaveItem","onIntervalItem","onBranchItem","fileCountItem","timeThresholdItem","changeCountItem","_context6","onSave","intervalMinutes","onInterval","onBranchSwitch","fileCountThreshold","timeThresholdMinutes","minChangeCount","_getUIItems2","_callee7","uiSettings","simpleModeItem","themeItem","notificationItem","settingsItem","_context7","simpleMode","theme","showNotifications","LogsViewProvider","_logs","message","logEntry","undefined","timestamp","Date","toLocaleTimeString","id","now","unshift","refresh","_getChildren2","_callee8","clearItem","_iterator","_step","log","logItem","emptyItem","_context8","_createForOfIteratorHelper","toUpperCase","t1","DashboardProvider","_panel","_this","reveal","window","createWebviewPanel","ViewColumn","One","enableScripts","retainContextWhenHidden","localResourceRoots","Uri","file","join","extensionPath","webview","html","_getDashboardContent","onDidDispose","onDidReceiveMessage","_handleDashboardMessage","aiProvider","_handleDashboardMessage2","_callee9","_context9","commands","executeCommand","commandId","_x3","SimpleUIProvider","_this2","_getSimpleUIContent","_handleSimpleUIMessage","_handleSimpleUIMessage2","_callee10","_context10","_x4","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}