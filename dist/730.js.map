{"version":3,"file":"730.js","mappings":"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","sources":["webpack://comitto/./utils.js","webpack://comitto/./ui.js"],"sourcesContent":["const { exec } = require('child_process');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst os = require('os');\r\n\r\n/**\r\n * Fehlertypen für die Anwendung\r\n * @enum {string}\r\n */\r\nconst ErrorTypes = {\r\n    GIT: 'git',\r\n    CONFIG: 'config',\r\n    FILE_SYSTEM: 'filesystem',\r\n    NETWORK: 'network',\r\n    AI_SERVICE: 'ai_service',\r\n    INTERNAL: 'internal',\r\n    UNKNOWN: 'unknown'\r\n};\r\n\r\n/**\r\n * Fehlerklasse für bessere Diagnose\r\n */\r\nclass ComittoError extends Error {\r\n    /**\r\n     * Erzeugt einen neuen Comitto-Fehler\r\n     * @param {string} message - Fehlermeldung\r\n     * @param {string} type - Fehlertyp aus ErrorTypes\r\n     * @param {Error|null} originalError - Originaler Fehler, falls vorhanden\r\n     * @param {Object} context - Zusätzliche Kontextinformationen\r\n     */\r\n    constructor(message, type = ErrorTypes.UNKNOWN, originalError = null, context = {}) {\r\n        super(message);\r\n        this.name = 'ComittoError';\r\n        this.type = type;\r\n        this.originalError = originalError;\r\n        this.context = context;\r\n        this.timestamp = new Date();\r\n        \r\n        // Stack-Trace beibehalten\r\n        if (originalError && originalError.stack) {\r\n            this.stack = `${this.stack}\\nVerursacht durch: ${originalError.stack}`;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Gibt Fehlerinformationen als Objekt zurück\r\n     * @returns {Object} Fehlerinformationen\r\n     */\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            message: this.message,\r\n            type: this.type,\r\n            timestamp: this.timestamp.toISOString(),\r\n            context: this.context,\r\n            originalError: this.originalError ? {\r\n                name: this.originalError.name,\r\n                message: this.originalError.message,\r\n                stack: this.originalError.stack\r\n            } : null,\r\n            stack: this.stack\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Fehlerprotokolle speichern\r\n * @type {Array<Object>}\r\n */\r\nconst errorLogs = [];\r\nconst MAX_ERROR_LOGS = 100;\r\n\r\n/**\r\n * Speichert einen Fehler im Protokoll\r\n * @param {ComittoError|Error} error - Der zu protokollierende Fehler\r\n */\r\nfunction logError(error) {\r\n    const errorEntry = error instanceof ComittoError ? error.toJSON() : {\r\n        name: error.name,\r\n        message: error.message,\r\n        type: ErrorTypes.UNKNOWN,\r\n        timestamp: new Date().toISOString(),\r\n        stack: error.stack\r\n    };\r\n    \r\n    // Am Anfang einfügen für chronologische Sortierung (neueste zuerst)\r\n    errorLogs.unshift(errorEntry);\r\n    \r\n    // Maximale Größe einhalten\r\n    if (errorLogs.length > MAX_ERROR_LOGS) {\r\n        errorLogs.pop();\r\n    }\r\n    \r\n    // In Konsole schreiben\r\n    console.error(`[Comitto Fehler] ${error.message}`);\r\n    \r\n    // Optional: In Datei schreiben\r\n    try {\r\n        const logDir = path.join(os.homedir(), '.comitto', 'logs');\r\n        if (!fs.existsSync(logDir)) {\r\n            fs.mkdirSync(logDir, { recursive: true });\r\n        }\r\n        \r\n        const logFile = path.join(logDir, `error_${new Date().toISOString().split('T')[0]}.log`);\r\n        const logMessage = `[${new Date().toISOString()}] ${JSON.stringify(errorEntry)}\\n`;\r\n        \r\n        fs.appendFileSync(logFile, logMessage);\r\n    } catch (e) {\r\n        console.error('Fehler beim Schreiben des Fehlerprotokolls:', e);\r\n    }\r\n}\r\n\r\n/**\r\n * Fehlerprotokolle abrufen\r\n * @param {number} limit - Maximale Anzahl der zurückzugebenden Protokolle\r\n * @returns {Array<Object>} Fehlerprotokolle\r\n */\r\nfunction getErrorLogs(limit = MAX_ERROR_LOGS) {\r\n    return errorLogs.slice(0, limit);\r\n}\r\n\r\n/**\r\n * Fehlerprotokolle löschen\r\n */\r\nfunction clearErrorLogs() {\r\n    errorLogs.length = 0;\r\n}\r\n\r\n/**\r\n * Führt einen Git-Befehl aus\r\n * @param {string} command Der auszuführende Git-Befehl\r\n * @param {string} cwd Arbeitsverzeichnis für den Befehl\r\n * @returns {Promise<string>} Ausgabe des Befehls\r\n */\r\nfunction executeGitCommand(command, cwd) {\r\n    return new Promise((resolve, reject) => {\r\n        // Erhöhe maxBuffer auf 50 MB (50 * 1024 * 1024), um große Ausgaben zu unterstützen\r\n        exec(command, { cwd, maxBuffer: 50 * 1024 * 1024 }, (error, stdout, stderr) => {\r\n            if (error) {\r\n                // Detailliertere Fehlermeldung mit spezifischer Behandlung von Pufferüberlauf\r\n                const errorMessage = stderr || error.message || 'Unbekannter Git-Fehler';\r\n                \r\n                // Spezifische Behandlung für Pufferüberlauf\r\n                if (errorMessage.includes('maxBuffer length exceeded') || \r\n                    error.code === 'ERR_CHILD_PROCESS_STDOUT_MAXBUFFER') {\r\n                    console.error(`Git-Befehl mit Pufferüberlauf: ${command}`);\r\n                    const bufferError = new ComittoError(\r\n                        'Die Git-Ausgabe ist zu groß. Bitte reduzieren Sie die Anzahl der Änderungen oder verwenden Sie einen manuellen Commit.',\r\n                        ErrorTypes.GIT,\r\n                        error,\r\n                        { command, cwd }\r\n                    );\r\n                    logError(bufferError);\r\n                    reject(bufferError);\r\n                    return;\r\n                }\r\n                \r\n                console.error(`Git-Befehl fehlgeschlagen: ${command}`, errorMessage);\r\n                const gitError = new ComittoError(\r\n                    errorMessage,\r\n                    ErrorTypes.GIT,\r\n                    error,\r\n                    { command, cwd, stderr }\r\n                );\r\n                logError(gitError);\r\n                reject(gitError);\r\n                return;\r\n            }\r\n            resolve(stdout);\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Gibt einen lesbaren Text für den Git-Status-Code zurück\r\n * @param {string} statusCode Der Git-Status-Code\r\n * @returns {string} Lesbarer Status\r\n */\r\nfunction getStatusText(statusCode) {\r\n    switch(statusCode) {\r\n        case 'M': return 'Geändert:';\r\n        case 'A': return 'Hinzugefügt:';\r\n        case 'D': return 'Gelöscht:';\r\n        case 'R': return 'Umbenannt:';\r\n        case 'C': return 'Kopiert:';\r\n        case 'U': return 'Unmerged:';\r\n        case '??': return 'Unverfolgt:';\r\n        default: return statusCode;\r\n    }\r\n}\r\n\r\n/**\r\n * Führt einen asynchronen Prozess mit Wiederholungsversuchen aus\r\n * @param {Function} asyncFn - Die auszuführende asynchrone Funktion\r\n * @param {Object} options - Optionen für die Wiederholungsversuche\r\n * @param {number} options.maxRetries - Maximale Anzahl der Wiederholungsversuche\r\n * @param {number} options.retryDelay - Verzögerung zwischen Versuchen in ms\r\n * @param {Function} options.shouldRetry - Funktion, die bestimmt, ob erneut versucht werden soll\r\n * @returns {Promise<any>} Das Ergebnis der asynchronen Funktion\r\n */\r\nasync function withRetry(asyncFn, options = {}) {\r\n    const { \r\n        maxRetries = 3, \r\n        retryDelay = 1000, \r\n        shouldRetry = (error) => true \r\n    } = options;\r\n    \r\n    let lastError;\r\n    \r\n    for (let attempt = 0; attempt <= maxRetries; attempt++) {\r\n        try {\r\n            return await asyncFn(attempt);\r\n        } catch (error) {\r\n            lastError = error;\r\n            \r\n            // Prüfen, ob ein erneuter Versuch unternommen werden soll\r\n            if (attempt < maxRetries && shouldRetry(error)) {\r\n                // Exponentielles Backoff\r\n                const delay = retryDelay * Math.pow(2, attempt);\r\n                await new Promise(resolve => setTimeout(resolve, delay));\r\n                continue;\r\n            }\r\n            \r\n            // Alle Versuche erschöpft oder kein Wiederholungsversuch gewünscht\r\n            if (!(error instanceof ComittoError)) {\r\n                // Fehler in ComittoError umwandeln, falls nötig\r\n                error = new ComittoError(\r\n                    error.message || 'Unbekannter Fehler',\r\n                    ErrorTypes.UNKNOWN,\r\n                    error,\r\n                    { attempts: attempt + 1, maxRetries }\r\n                );\r\n                logError(error);\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Sammelt diagnostische Informationen über die Umgebung\r\n * @returns {Object} Diagnostische Informationen\r\n */\r\nfunction getDiagnosticInfo() {\r\n    return {\r\n        platform: process.platform,\r\n        nodeVersion: process.version,\r\n        arch: process.arch,\r\n        cpus: os.cpus().length,\r\n        totalmem: os.totalmem(),\r\n        freemem: os.freemem(),\r\n        uptime: os.uptime(),\r\n        errorLogs: getErrorLogs(10) // Letzte 10 Fehler\r\n    };\r\n}\r\n\r\n/**\r\n * Aktualisiert die Statusleiste mit einem Fortschrittsbalken\r\n * @param {object} statusBarItem Das StatusBarItem-Objekt\r\n * @param {string} action Die aktuelle Aktion\r\n * @param {number} progress Fortschritt (0-100, -1 für Fehler)\r\n * @param {string} details Zusätzliche Details (optional)\r\n */\r\nfunction updateStatusBarProgress(statusBarItem, action, progress, details = '') {\r\n    if (!statusBarItem) return;\r\n    \r\n    // Fortschrittsbalken erstellen\r\n    let progressBar = '';\r\n    let progressIcon = '$(sync~spin)';\r\n    \r\n    if (progress >= 0 && progress <= 100) {\r\n        // Visuellen Fortschrittsbalken erstellen\r\n        const barLength = 10;\r\n        const filledCount = Math.floor(progress / 100 * barLength);\r\n        const remainingCount = barLength - filledCount;\r\n        \r\n        // Unicode-Zeichen für Balken\r\n        const filledChar = '█';\r\n        const emptyChar = '░';\r\n        \r\n        progressBar = filledChar.repeat(filledCount) + emptyChar.repeat(remainingCount);\r\n        \r\n        // Icon basierend auf Fortschritt\r\n        if (progress === 100) {\r\n            progressIcon = '$(check)';\r\n        }\r\n    } else if (progress === -1) {\r\n        // Fehler anzeigen\r\n        progressIcon = '$(error)';\r\n    }\r\n    \r\n    // Formatierte Statusnachricht\r\n    let statusText = `${progressIcon} Comitto: ${action}`;\r\n    \r\n    // Fortschrittsbalken hinzufügen, wenn relevant\r\n    if (progress >= 0 && progress < 100) {\r\n        statusText += ` [${progressBar}]`;\r\n    }\r\n    \r\n    // Details hinzufügen, wenn vorhanden\r\n    if (details) {\r\n        statusText += ` (${details})`;\r\n    }\r\n    \r\n    statusBarItem.text = statusText;\r\n    \r\n    // Nach erfolgreicher Beendigung den Status zurücksetzen\r\n    if (progress === 100) {\r\n        setTimeout(() => {\r\n            if (statusBarItem && statusBarItem.text === statusText) {\r\n                statusBarItem.text = \"$(sync) Comitto: Aktiv\";\r\n            }\r\n        }, 3000);\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    executeGitCommand,\r\n    getStatusText,\r\n    ComittoError,\r\n    ErrorTypes,\r\n    logError,\r\n    getErrorLogs,\r\n    clearErrorLogs,\r\n    withRetry,\r\n    getDiagnosticInfo,\r\n    updateStatusBarProgress\r\n}; ","const vscode = require('vscode');\r\nconst path = require('path');\r\n\r\n/**\r\n * Hauptklasse für die konsolidierte Ansicht in der Seitenleiste\r\n * Kombiniert Status, Schnellaktionen und Einstellungen in einer redundanzfreien Struktur\r\n */\r\nclass MainViewProvider {\r\n    constructor(context) {\r\n        this._onDidChangeTreeData = new vscode.EventEmitter();\r\n        this.onDidChangeTreeData = this._onDidChangeTreeData.event;\r\n        this._context = context;\r\n    }\r\n\r\n    refresh() {\r\n        this._onDidChangeTreeData.fire();\r\n    }\r\n\r\n    getTreeItem(element) {\r\n        return element;\r\n    }\r\n\r\n    async getChildren(element) {\r\n        if (element) {\r\n            return this._getSubItems(element);\r\n        }\r\n\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const enabled = config.get('autoCommitEnabled');\r\n        const items = [];\r\n\r\n        // Status und Schnellaktionen\r\n        const statusGroup = new vscode.TreeItem(\r\n            'Status und Schnellaktionen',\r\n            vscode.TreeItemCollapsibleState.Expanded\r\n        );\r\n        statusGroup.contextValue = 'status-group';\r\n        statusGroup.iconPath = new vscode.ThemeIcon('pulse');\r\n        items.push(statusGroup);\r\n\r\n        // Git Einstellungen\r\n        const gitGroup = new vscode.TreeItem(\r\n            'Git Konfiguration',\r\n            vscode.TreeItemCollapsibleState.Expanded\r\n        );\r\n        gitGroup.contextValue = 'git-group';\r\n        gitGroup.iconPath = new vscode.ThemeIcon('git-branch');\r\n        items.push(gitGroup);\r\n\r\n        // KI Provider Einstellungen\r\n        const aiGroup = new vscode.TreeItem(\r\n            'KI Provider',\r\n            vscode.TreeItemCollapsibleState.Expanded\r\n        );\r\n        aiGroup.contextValue = 'ai-group';\r\n        aiGroup.iconPath = new vscode.ThemeIcon('robot');\r\n        items.push(aiGroup);\r\n\r\n        // Trigger Einstellungen\r\n        const triggerGroup = new vscode.TreeItem(\r\n            'Trigger Regeln',\r\n            vscode.TreeItemCollapsibleState.Expanded\r\n        );\r\n        triggerGroup.contextValue = 'trigger-group';\r\n        triggerGroup.iconPath = new vscode.ThemeIcon('settings-gear');\r\n        items.push(triggerGroup);\r\n\r\n        // UI Einstellungen\r\n        const uiGroup = new vscode.TreeItem(\r\n            'Benutzeroberfläche',\r\n            vscode.TreeItemCollapsibleState.Expanded\r\n        );\r\n        uiGroup.contextValue = 'ui-group';\r\n        uiGroup.iconPath = new vscode.ThemeIcon('layout');\r\n        items.push(uiGroup);\r\n\r\n        return items;\r\n    }\r\n\r\n    async _getSubItems(element) {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const items = [];\r\n\r\n        switch (element.contextValue) {\r\n            case 'status-group':\r\n                return this._getStatusItems();\r\n            case 'git-group':\r\n                return this._getGitItems();\r\n            case 'ai-group':\r\n                return this._getAIItems();\r\n            case 'trigger-group':\r\n                return this._getTriggerItems();\r\n            case 'ui-group':\r\n                return this._getUIItems();\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    async _getStatusItems() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const enabled = config.get('autoCommitEnabled');\r\n        const items = [];\r\n\r\n        // Hauptstatus\r\n        const statusItem = new vscode.TreeItem(\r\n            `Comitto: ${enabled ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        statusItem.contextValue = enabled ? 'comitto-status-enabled' : 'comitto-status-disabled';\r\n        statusItem.iconPath = new vscode.ThemeIcon(enabled ? 'check-all' : 'circle-slash');\r\n        statusItem.tooltip = enabled ? 'Auto-Commits sind aktiviert' : 'Auto-Commits sind deaktiviert';\r\n        statusItem.command = {\r\n            command: 'comitto.toggleAutoCommit',\r\n            title: 'Toggle Auto-Commit'\r\n        };\r\n        items.push(statusItem);\r\n\r\n        // Manueller Commit\r\n        const manualCommitItem = new vscode.TreeItem(\r\n            'Manueller Commit',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        manualCommitItem.iconPath = new vscode.ThemeIcon('git-commit');\r\n        manualCommitItem.tooltip = 'Führt einen manuellen KI-Commit aus';\r\n        manualCommitItem.command = {\r\n            command: 'comitto.manualCommit',\r\n            title: 'Manual Commit'\r\n        };\r\n        items.push(manualCommitItem);\r\n\r\n        // Alle Dateien stagen\r\n        const stageAllItem = new vscode.TreeItem(\r\n            'Alle Dateien stagen',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        stageAllItem.iconPath = new vscode.ThemeIcon('add');\r\n        stageAllItem.tooltip = 'Staged alle geänderten Dateien';\r\n        stageAllItem.command = {\r\n            command: 'comitto.stageAll',\r\n            title: 'Stage All'\r\n        };\r\n        items.push(stageAllItem);\r\n\r\n        // Ausgewählte Dateien stagen\r\n        const stageSelectedItem = new vscode.TreeItem(\r\n            'Ausgewählte Dateien stagen',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        stageSelectedItem.iconPath = new vscode.ThemeIcon('checklist');\r\n        stageSelectedItem.tooltip = 'Ermöglicht Auswahl bestimmter Dateien zum Stagen';\r\n        stageSelectedItem.command = {\r\n            command: 'comitto.stageSelected',\r\n            title: 'Stage Selected Files'\r\n        };\r\n        items.push(stageSelectedItem);\r\n\r\n        // Dashboard öffnen\r\n        const dashboardItem = new vscode.TreeItem(\r\n            'Dashboard öffnen',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        dashboardItem.iconPath = new vscode.ThemeIcon('dashboard');\r\n        dashboardItem.tooltip = 'Öffnet das erweiterte Dashboard';\r\n        dashboardItem.command = {\r\n            command: 'comitto.showDashboard',\r\n            title: 'Show Dashboard'\r\n        };\r\n        items.push(dashboardItem);\r\n\r\n        // Einfache UI öffnen\r\n        const simpleUIItem = new vscode.TreeItem(\r\n            'Einfache Oberfläche',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        simpleUIItem.iconPath = new vscode.ThemeIcon('rocket');\r\n        simpleUIItem.tooltip = 'Öffnet die vereinfachte Benutzeroberfläche';\r\n        simpleUIItem.command = {\r\n            command: 'comitto.showSimpleUI',\r\n            title: 'Show Simple UI'\r\n        };\r\n        items.push(simpleUIItem);\r\n\r\n        return items;\r\n    }\r\n\r\n    async _getGitItems() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const gitSettings = config.get('gitSettings');\r\n        const items = [];\r\n\r\n        // Auto-Push\r\n        const autoPushItem = new vscode.TreeItem(\r\n            `Auto-Push: ${gitSettings.autoPush ? 'Aktiviert' : 'Deaktiviert'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        autoPushItem.iconPath = new vscode.ThemeIcon(gitSettings.autoPush ? 'cloud-upload' : 'x');\r\n        autoPushItem.tooltip = 'Automatisches Push nach Commit';\r\n        autoPushItem.command = {\r\n            command: 'comitto.toggleAutoPush',\r\n            title: 'Toggle Auto Push'\r\n        };\r\n        items.push(autoPushItem);\r\n\r\n        // Branch\r\n        const branchItem = new vscode.TreeItem(\r\n            `Branch: ${gitSettings.branch || 'Aktueller Branch'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        branchItem.iconPath = new vscode.ThemeIcon('git-branch');\r\n        branchItem.tooltip = 'Ziel-Branch für Commits';\r\n        branchItem.command = {\r\n            command: 'comitto.editBranch',\r\n            title: 'Edit Branch'\r\n        };\r\n        items.push(branchItem);\r\n\r\n        // Commit-Stil\r\n        const commitStyleMap = {\r\n            'conventional': 'Conventional Commits',\r\n            'gitmoji': 'Gitmoji',\r\n            'simple': 'Einfach',\r\n            'angular': 'Angular',\r\n            'atom': 'Atom'\r\n        };\r\n        const currentStyle = commitStyleMap[gitSettings.commitMessageStyle] || 'Conventional';\r\n        const commitStyleItem = new vscode.TreeItem(\r\n            `Commit-Stil: ${currentStyle}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        commitStyleItem.iconPath = new vscode.ThemeIcon('symbol-string');\r\n        commitStyleItem.tooltip = 'Stil der generierten Commit-Nachrichten';\r\n        commitStyleItem.command = {\r\n            command: 'comitto.selectCommitStyle',\r\n            title: 'Select Commit Style'\r\n        };\r\n        items.push(commitStyleItem);\r\n\r\n        // Commit-Sprache\r\n        const languageMap = {\r\n            'de': 'Deutsch',\r\n            'en': 'English',\r\n            'fr': 'Français',\r\n            'es': 'Español',\r\n            'it': 'Italiano',\r\n            'ja': '日本語',\r\n            'zh': '中文'\r\n        };\r\n        const currentLanguage = languageMap[gitSettings.commitMessageLanguage] || 'Deutsch';\r\n        const languageItem = new vscode.TreeItem(\r\n            `Sprache: ${currentLanguage}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        languageItem.iconPath = new vscode.ThemeIcon('symbol-misc');\r\n        languageItem.tooltip = 'Sprache für Commit-Nachrichten';\r\n        languageItem.command = {\r\n            command: 'comitto.selectCommitLanguage',\r\n            title: 'Select Commit Language'\r\n        };\r\n        items.push(languageItem);\r\n\r\n        // Stage-Modus\r\n        const stageModeMap = {\r\n            'all': 'Alle Dateien',\r\n            'specific': 'Spezifische Dateien',\r\n            'ask': 'Nachfragen'\r\n        };\r\n        const currentStageMode = stageModeMap[gitSettings.stageMode] || 'Alle Dateien';\r\n        const stageModeItem = new vscode.TreeItem(\r\n            `Stage-Modus: ${currentStageMode}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        stageModeItem.iconPath = new vscode.ThemeIcon('file-add');\r\n        stageModeItem.tooltip = 'Bestimmt, welche Dateien automatisch gestagt werden';\r\n        stageModeItem.command = {\r\n            command: 'comitto.selectStageMode',\r\n            title: 'Select Stage Mode'\r\n        };\r\n        items.push(stageModeItem);\r\n\r\n        // Gitignore verwenden\r\n        const gitignoreItem = new vscode.TreeItem(\r\n            `Gitignore: ${gitSettings.useGitignore ? 'Respektiert' : 'Ignoriert'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        gitignoreItem.iconPath = new vscode.ThemeIcon(gitSettings.useGitignore ? 'eye' : 'eye-closed');\r\n        gitignoreItem.tooltip = 'Ob .gitignore Regeln beachtet werden';\r\n        gitignoreItem.command = {\r\n            command: 'comitto.toggleUseGitignore',\r\n            title: 'Toggle Use Gitignore'\r\n        };\r\n        items.push(gitignoreItem);\r\n\r\n        return items;\r\n    }\r\n\r\n    async _getAIItems() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const currentProvider = config.get('aiProvider');\r\n        const items = [];\r\n\r\n        // KI-Provider\r\n        const providerMap = {\r\n            'openai': 'OpenAI',\r\n            'anthropic': 'Anthropic',\r\n            'ollama': 'Ollama'\r\n        };\r\n        const providerItem = new vscode.TreeItem(\r\n            `Provider: ${providerMap[currentProvider] || currentProvider}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        providerItem.iconPath = new vscode.ThemeIcon('robot');\r\n        providerItem.tooltip = 'Aktueller KI-Provider für Commit-Nachrichten';\r\n        providerItem.command = {\r\n            command: 'comitto.configureAIProvider',\r\n            title: 'Configure AI Provider'\r\n        };\r\n        items.push(providerItem);\r\n\r\n        // Provider-spezifische Einstellungen\r\n        switch (currentProvider) {\r\n            case 'openai':\r\n                const openaiSettings = config.get('openai');\r\n                const openaiModelItem = new vscode.TreeItem(\r\n                    `OpenAI Modell: ${openaiSettings.model}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                openaiModelItem.iconPath = new vscode.ThemeIcon('symbol-parameter');\r\n                openaiModelItem.command = {\r\n                    command: 'comitto.selectOpenAIModel',\r\n                    title: 'Select OpenAI Model'\r\n                };\r\n                items.push(openaiModelItem);\r\n\r\n                const openaiKeyItem = new vscode.TreeItem(\r\n                    `API-Schlüssel: ${openaiSettings.apiKey ? 'Konfiguriert' : 'Nicht gesetzt'}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                openaiKeyItem.iconPath = new vscode.ThemeIcon('key');\r\n                openaiKeyItem.command = {\r\n                    command: 'comitto.editOpenAIKey',\r\n                    title: 'Edit OpenAI API Key'\r\n                };\r\n                items.push(openaiKeyItem);\r\n                break;\r\n\r\n            case 'anthropic':\r\n                const anthropicSettings = config.get('anthropic');\r\n                const anthropicModelItem = new vscode.TreeItem(\r\n                    `Anthropic Modell: ${anthropicSettings.model}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                anthropicModelItem.iconPath = new vscode.ThemeIcon('symbol-parameter');\r\n                anthropicModelItem.command = {\r\n                    command: 'comitto.selectAnthropicModel',\r\n                    title: 'Select Anthropic Model'\r\n                };\r\n                items.push(anthropicModelItem);\r\n\r\n                const anthropicKeyItem = new vscode.TreeItem(\r\n                    `API-Schlüssel: ${anthropicSettings.apiKey ? 'Konfiguriert' : 'Nicht gesetzt'}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                anthropicKeyItem.iconPath = new vscode.ThemeIcon('key');\r\n                anthropicKeyItem.command = {\r\n                    command: 'comitto.editAnthropicKey',\r\n                    title: 'Edit Anthropic API Key'\r\n                };\r\n                items.push(anthropicKeyItem);\r\n                break;\r\n\r\n            case 'ollama':\r\n                const ollamaSettings = config.get('ollama');\r\n                const ollamaModelItem = new vscode.TreeItem(\r\n                    `Ollama Modell: ${ollamaSettings.model}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                ollamaModelItem.iconPath = new vscode.ThemeIcon('symbol-parameter');\r\n                items.push(ollamaModelItem);\r\n\r\n                const ollamaEndpointItem = new vscode.TreeItem(\r\n                    `Endpoint: ${ollamaSettings.endpoint}`,\r\n                    vscode.TreeItemCollapsibleState.None\r\n                );\r\n                ollamaEndpointItem.iconPath = new vscode.ThemeIcon('globe');\r\n                items.push(ollamaEndpointItem);\r\n                break;\r\n        }\r\n\r\n        // Prompt-Template\r\n        const promptItem = new vscode.TreeItem(\r\n            'Prompt-Template bearbeiten',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        promptItem.iconPath = new vscode.ThemeIcon('edit');\r\n        promptItem.tooltip = 'Bearbeitet die Vorlage für KI-Prompts';\r\n        promptItem.command = {\r\n            command: 'comitto.editPromptTemplate',\r\n            title: 'Edit Prompt Template'\r\n        };\r\n        items.push(promptItem);\r\n\r\n        return items;\r\n    }\r\n\r\n    async _getTriggerItems() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const triggerRules = config.get('triggerRules');\r\n        const items = [];\r\n\r\n        // Trigger konfigurieren (Haupteintrag)\r\n        const configureItem = new vscode.TreeItem(\r\n            'Trigger konfigurieren',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        configureItem.iconPath = new vscode.ThemeIcon('settings-gear');\r\n        configureItem.tooltip = 'Öffnet die Trigger-Konfiguration';\r\n        configureItem.command = {\r\n            command: 'comitto.configureTriggers',\r\n            title: 'Configure Triggers'\r\n        };\r\n        items.push(configureItem);\r\n\r\n        // Bei Speichern\r\n        const onSaveItem = new vscode.TreeItem(\r\n            `Bei Speichern: ${triggerRules.onSave ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        onSaveItem.iconPath = new vscode.ThemeIcon(triggerRules.onSave ? 'check' : 'x');\r\n        onSaveItem.command = {\r\n            command: 'comitto.toggleOnSave',\r\n            title: 'Toggle On Save'\r\n        };\r\n        items.push(onSaveItem);\r\n\r\n        // Intervall-basiert\r\n        const onIntervalItem = new vscode.TreeItem(\r\n            `Intervall (${triggerRules.intervalMinutes}min): ${triggerRules.onInterval ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        onIntervalItem.iconPath = new vscode.ThemeIcon(triggerRules.onInterval ? 'clock' : 'circle-slash');\r\n        onIntervalItem.command = {\r\n            command: 'comitto.toggleOnInterval',\r\n            title: 'Toggle On Interval'\r\n        };\r\n        items.push(onIntervalItem);\r\n\r\n        // Bei Branch-Wechsel\r\n        const onBranchItem = new vscode.TreeItem(\r\n            `Bei Branch-Wechsel: ${triggerRules.onBranchSwitch ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        onBranchItem.iconPath = new vscode.ThemeIcon(triggerRules.onBranchSwitch ? 'git-branch' : 'x');\r\n        onBranchItem.command = {\r\n            command: 'comitto.toggleOnBranchSwitch',\r\n            title: 'Toggle On Branch Switch'\r\n        };\r\n        items.push(onBranchItem);\r\n\r\n        // Schwellwerte\r\n        const fileCountItem = new vscode.TreeItem(\r\n            `Datei-Anzahl-Schwelle: ${triggerRules.fileCountThreshold}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        fileCountItem.iconPath = new vscode.ThemeIcon('file-code');\r\n        fileCountItem.command = {\r\n            command: 'comitto.editFileCountThreshold',\r\n            title: 'Edit File Count Threshold'\r\n        };\r\n        items.push(fileCountItem);\r\n\r\n        const timeThresholdItem = new vscode.TreeItem(\r\n            `Zeit-Schwelle: ${triggerRules.timeThresholdMinutes} min`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        timeThresholdItem.iconPath = new vscode.ThemeIcon('clock');\r\n        timeThresholdItem.command = {\r\n            command: 'comitto.editTimeThreshold',\r\n            title: 'Edit Time Threshold'\r\n        };\r\n        items.push(timeThresholdItem);\r\n\r\n        const changeCountItem = new vscode.TreeItem(\r\n            `Mindest-Änderungen: ${triggerRules.minChangeCount}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        changeCountItem.iconPath = new vscode.ThemeIcon('diff');\r\n        changeCountItem.command = {\r\n            command: 'comitto.editMinChangeCount',\r\n            title: 'Edit Min Change Count'\r\n        };\r\n        items.push(changeCountItem);\r\n\r\n        return items;\r\n    }\r\n\r\n    async _getUIItems() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const uiSettings = config.get('uiSettings');\r\n        const items = [];\r\n\r\n        // Einfacher Modus\r\n        const simpleModeItem = new vscode.TreeItem(\r\n            `Einfacher Modus: ${uiSettings.simpleMode ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        simpleModeItem.iconPath = new vscode.ThemeIcon(uiSettings.simpleMode ? 'eye' : 'eye-closed');\r\n        simpleModeItem.command = {\r\n            command: 'comitto.toggleSimpleMode',\r\n            title: 'Toggle Simple Mode'\r\n        };\r\n        items.push(simpleModeItem);\r\n\r\n        // Theme\r\n        const themeItem = new vscode.TreeItem(\r\n            `Theme: ${uiSettings.theme || 'auto'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        themeItem.iconPath = new vscode.ThemeIcon('color-mode');\r\n        themeItem.command = {\r\n            command: 'comitto.selectTheme',\r\n            title: 'Select Theme'\r\n        };\r\n        items.push(themeItem);\r\n\r\n        // Benachrichtigungen\r\n        const notificationSettings = config.get('notifications');\r\n        const notificationItem = new vscode.TreeItem(\r\n            `Benachrichtigungen: ${uiSettings.showNotifications ? 'Aktiv' : 'Inaktiv'}`,\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        notificationItem.iconPath = new vscode.ThemeIcon(uiSettings.showNotifications ? 'bell' : 'bell-slash');\r\n        items.push(notificationItem);\r\n\r\n        // Einstellungen öffnen\r\n        const settingsItem = new vscode.TreeItem(\r\n            'VS Code Einstellungen öffnen',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        settingsItem.iconPath = new vscode.ThemeIcon('gear');\r\n        settingsItem.command = {\r\n            command: 'comitto.openSettings',\r\n            title: 'Open Settings'\r\n        };\r\n        items.push(settingsItem);\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\n/**\r\n * Provider für die Debug-Logs Ansicht\r\n */\r\nclass LogsViewProvider {\r\n    constructor(context) {\r\n        this._onDidChangeTreeData = new vscode.EventEmitter();\r\n        this.onDidChangeTreeData = this._onDidChangeTreeData.event;\r\n        this._context = context;\r\n        this._logs = [];\r\n    }\r\n\r\n    refresh() {\r\n        this._onDidChangeTreeData.fire();\r\n    }\r\n\r\n    addLog(message, type = 'info') {\r\n        const timestamp = new Date().toLocaleTimeString();\r\n        const logEntry = {\r\n            message,\r\n            type,\r\n            timestamp,\r\n            id: Date.now()\r\n        };\r\n        this._logs.unshift(logEntry);\r\n        \r\n        // Maximal 50 Logs behalten\r\n        if (this._logs.length > 50) {\r\n            this._logs = this._logs.slice(0, 50);\r\n        }\r\n        \r\n        this.refresh();\r\n    }\r\n\r\n    clearLogs() {\r\n        this._logs = [];\r\n        this.refresh();\r\n    }\r\n\r\n    getTreeItem(element) {\r\n        return element;\r\n    }\r\n\r\n    async getChildren() {\r\n        const items = [];\r\n        \r\n        // Clear Button\r\n        const clearItem = new vscode.TreeItem(\r\n            'Logs löschen',\r\n            vscode.TreeItemCollapsibleState.None\r\n        );\r\n        clearItem.iconPath = new vscode.ThemeIcon('trash');\r\n        clearItem.tooltip = 'Löscht alle Debug-Logs';\r\n        clearItem.command = {\r\n            command: 'comitto.clearLogs',\r\n            title: 'Clear Logs'\r\n        };\r\n        items.push(clearItem);\r\n\r\n        // Log Entries\r\n        for (const log of this._logs) {\r\n            const logItem = new vscode.TreeItem(\r\n                `[${log.timestamp}] ${log.message}`,\r\n                vscode.TreeItemCollapsibleState.None\r\n            );\r\n            \r\n            switch (log.type) {\r\n                case 'error':\r\n                    logItem.iconPath = new vscode.ThemeIcon('error');\r\n                    break;\r\n                case 'warning':\r\n                    logItem.iconPath = new vscode.ThemeIcon('warning');\r\n                    break;\r\n                case 'success':\r\n                    logItem.iconPath = new vscode.ThemeIcon('check');\r\n                    break;\r\n                default:\r\n                    logItem.iconPath = new vscode.ThemeIcon('info');\r\n            }\r\n            \r\n            logItem.tooltip = `${log.type.toUpperCase()}: ${log.message}`;\r\n            items.push(logItem);\r\n        }\r\n\r\n        if (this._logs.length === 0) {\r\n            const emptyItem = new vscode.TreeItem(\r\n                'Keine Logs vorhanden',\r\n                vscode.TreeItemCollapsibleState.None\r\n            );\r\n            emptyItem.iconPath = new vscode.ThemeIcon('info');\r\n            items.push(emptyItem);\r\n        }\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\n/**\r\n * Verbesserter Dashboard Provider mit schönerer UI und weniger Störungen\r\n */\r\nclass DashboardProvider {\r\n    constructor(context) {\r\n        this._context = context;\r\n        this._panel = null;\r\n    }\r\n\r\n    show() {\r\n        if (this._panel) {\r\n            this._panel.reveal();\r\n        } else {\r\n            this._panel = vscode.window.createWebviewPanel(\r\n                'comittoDashboard',\r\n                'Comitto Dashboard',\r\n                vscode.ViewColumn.One,\r\n                {\r\n                    enableScripts: true,\r\n                    retainContextWhenHidden: true,\r\n                    localResourceRoots: [\r\n                        vscode.Uri.file(path.join(this._context.extensionPath, 'resources'))\r\n                    ]\r\n                }\r\n            );\r\n\r\n            this._panel.webview.html = this._getDashboardContent();\r\n            \r\n            this._panel.onDidDispose(() => {\r\n                this._panel = null;\r\n            });\r\n\r\n            this._panel.webview.onDidReceiveMessage(message => {\r\n                this._handleDashboardMessage(message);\r\n            });\r\n        }\r\n    }\r\n\r\n    _getDashboardContent() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const enabled = config.get('autoCommitEnabled');\r\n        const aiProvider = config.get('aiProvider');\r\n        const gitSettings = config.get('gitSettings');\r\n        \r\n        return `<!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Comitto Dashboard</title>\r\n    <style>\r\n        * {\r\n            margin: 0;\r\n            padding: 0;\r\n            box-sizing: border-box;\r\n        }\r\n        \r\n        body {\r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;\r\n            background: linear-gradient(135deg,rgb(12, 22, 66) 0%,rgb(23, 8, 37) 100%);\r\n            color: white;\r\n            min-height: 100vh;\r\n            padding: 20px;\r\n        }\r\n        \r\n        .container {\r\n            max-width: 1200px;\r\n            margin: 0 auto;\r\n        }\r\n        \r\n        .header {\r\n            text-align: center;\r\n            margin-bottom: 40px;\r\n        }\r\n        \r\n        .header h1 {\r\n            font-size: 2.5rem;\r\n            margin-bottom: 10px;\r\n            background: linear-gradient(45deg, #fff, #f0f0f0);\r\n            -webkit-background-clip: text;\r\n            -webkit-text-fill-color: transparent;\r\n            background-clip: text;\r\n        }\r\n        \r\n        .grid {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n            gap: 20px;\r\n            margin-bottom: 30px;\r\n        }\r\n        \r\n        .card {\r\n            background: rgba(255, 255, 255, 0.1);\r\n            backdrop-filter: blur(10px);\r\n            border-radius: 15px;\r\n            padding: 25px;\r\n            border: 1px solid rgba(255, 255, 255, 0.2);\r\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n        }\r\n        \r\n        .card:hover {\r\n            transform: translateY(-5px);\r\n            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\r\n        }\r\n        \r\n        .card h3 {\r\n            font-size: 1.4rem;\r\n            margin-bottom: 15px;\r\n            display: flex;\r\n            align-items: center;\r\n            gap: 10px;\r\n        }\r\n        \r\n        .status-indicator {\r\n            width: 12px;\r\n            height: 12px;\r\n            border-radius: 50%;\r\n            display: inline-block;\r\n        }\r\n        \r\n        .status-active { background-color: #4ade80; }\r\n        .status-inactive { background-color: #f87171; }\r\n        \r\n        .btn {\r\n            background: linear-gradient(45deg, #4ade80, #22c55e);\r\n            border: none;\r\n            padding: 12px 24px;\r\n            border-radius: 8px;\r\n            color: white;\r\n            font-weight: 600;\r\n            cursor: pointer;\r\n            transition: all 0.3s ease;\r\n            margin: 5px;\r\n            display: inline-block;\r\n            text-decoration: none;\r\n        }\r\n        \r\n        .btn:hover {\r\n            transform: translateY(-2px);\r\n            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\r\n        }\r\n        \r\n        .btn-secondary {\r\n            background: linear-gradient(45deg, #6366f1, #8b5cf6);\r\n        }\r\n        \r\n        .btn-danger {\r\n            background: linear-gradient(45deg, #ef4444, #dc2626);\r\n        }\r\n        \r\n        .stats {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n            gap: 15px;\r\n            margin-top: 20px;\r\n        }\r\n        \r\n        .stat-card {\r\n            background: rgba(255, 255, 255, 0.05);\r\n            padding: 15px;\r\n            border-radius: 10px;\r\n            text-align: center;\r\n        }\r\n        \r\n        .stat-number {\r\n            font-size: 2rem;\r\n            font-weight: bold;\r\n            color: #4ade80;\r\n        }\r\n        \r\n        .logs-section {\r\n            background: rgba(0, 0, 0, 0.3);\r\n            border-radius: 15px;\r\n            padding: 20px;\r\n            margin-top: 20px;\r\n            max-height: 300px;\r\n            overflow-y: auto;\r\n        }\r\n        \r\n        .log-entry {\r\n            padding: 8px 0;\r\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n            font-family: 'Courier New', monospace;\r\n            font-size: 0.9rem;\r\n        }\r\n        \r\n        .log-entry:last-child {\r\n            border-bottom: none;\r\n        }\r\n        \r\n        .log-info { color: #60a5fa; }\r\n        .log-success { color: #4ade80; }\r\n        .log-warning { color: #fbbf24; }\r\n        .log-error { color: #f87171; }\r\n        \r\n        @media (max-width: 768px) {\r\n            .grid {\r\n                grid-template-columns: 1fr;\r\n            }\r\n            \r\n            .header h1 {\r\n                font-size: 2rem;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"header\">\r\n            <h1>🚀 Comitto Dashboard</h1>\r\n            <p>Intelligent Git Commit Management</p>\r\n        </div>\r\n        \r\n        <div class=\"grid\">\r\n            <div class=\"card\">\r\n                <h3>\r\n                    <span class=\"status-indicator ${enabled ? 'status-active' : 'status-inactive'}\"></span>\r\n                    Status\r\n                </h3>\r\n                <p>Auto-Commits: <strong>${enabled ? 'Aktiv' : 'Inaktiv'}</strong></p>\r\n                <p>KI-Provider: <strong>${aiProvider.toUpperCase()}</strong></p>\r\n                <p>Commit-Stil: <strong>${gitSettings.commitMessageStyle || 'conventional'}</strong></p>\r\n                <div style=\"margin-top: 15px;\">\r\n                    <button class=\"btn\" onclick=\"toggleAutoCommit()\">\r\n                        ${enabled ? 'Deaktivieren' : 'Aktivieren'}\r\n                    </button>\r\n                    <button class=\"btn btn-secondary\" onclick=\"manualCommit()\">\r\n                        Manueller Commit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"card\">\r\n                <h3>🛠️ Schnellaktionen</h3>\r\n                <button class=\"btn\" onclick=\"executeCommand('comitto.stageAll')\">Alle Dateien stagen</button>\r\n                <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.stageSelected')\">Auswahl stagen</button>\r\n                <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.configureTriggers')\">Trigger konfigurieren</button>\r\n                <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.configureAIProvider')\">KI konfigurieren</button>\r\n            </div>\r\n            \r\n            <div class=\"card\">\r\n                <h3>📊 Statistiken</h3>\r\n                <div class=\"stats\">\r\n                    <div class=\"stat-card\">\r\n                        <div class=\"stat-number\" id=\"commitCount\">-</div>\r\n                        <div>Commits heute</div>\r\n                    </div>\r\n                    <div class=\"stat-card\">\r\n                        <div class=\"stat-number\" id=\"filesStaged\">-</div>\r\n                        <div>Dateien gestagt</div>\r\n                    </div>\r\n                </div>\r\n                <div style=\"margin-top: 15px;\">\r\n                    <button class=\"btn btn-secondary\" onclick=\"refreshStats()\">Aktualisieren</button>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"card\">\r\n                <h3>⚙️ Konfiguration</h3>\r\n                <p><strong>Branch:</strong> ${gitSettings.branch || 'Aktueller Branch'}</p>\r\n                <p><strong>Auto-Push:</strong> ${gitSettings.autoPush ? 'Ja' : 'Nein'}</p>\r\n                <p><strong>Sprache:</strong> ${gitSettings.commitMessageLanguage || 'de'}</p>\r\n                <div style=\"margin-top: 15px;\">\r\n                    <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.openSettings')\">Einstellungen öffnen</button>\r\n                    <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.showSimpleUI')\">Einfache UI</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"logs-section\">\r\n            <h3>📋 Aktuelle Logs</h3>\r\n            <div id=\"logs-container\">\r\n                <div class=\"log-entry log-info\">[${new Date().toLocaleTimeString()}] Dashboard geladen</div>\r\n            </div>\r\n            <div style=\"margin-top: 15px;\">\r\n                <button class=\"btn btn-danger\" onclick=\"clearLogs()\">Logs löschen</button>\r\n                <button class=\"btn btn-secondary\" onclick=\"refreshLogs()\">Aktualisieren</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <script>\r\n        const vscode = acquireVsCodeApi();\r\n        \r\n        function executeCommand(commandId) {\r\n            vscode.postMessage({\r\n                command: 'executeCommand',\r\n                commandId: commandId\r\n            });\r\n            addLog('Command ausgeführt: ' + commandId, 'info');\r\n        }\r\n        \r\n        function toggleAutoCommit() {\r\n            vscode.postMessage({\r\n                command: 'executeCommand',\r\n                commandId: 'comitto.toggleAutoCommit'\r\n            });\r\n            addLog('Auto-Commit umgeschaltet', 'info');\r\n        }\r\n        \r\n        function manualCommit() {\r\n            vscode.postMessage({\r\n                command: 'executeCommand',\r\n                commandId: 'comitto.manualCommit'\r\n            });\r\n            addLog('Manueller Commit gestartet', 'info');\r\n        }\r\n        \r\n        function refreshStats() {\r\n            // Statistiken aktualisieren (Dummy-Daten für Demo)\r\n            document.getElementById('commitCount').textContent = Math.floor(Math.random() * 20);\r\n            document.getElementById('filesStaged').textContent = Math.floor(Math.random() * 10);\r\n            addLog('Statistiken aktualisiert', 'success');\r\n        }\r\n        \r\n        function addLog(message, type = 'info') {\r\n            const logsContainer = document.getElementById('logs-container');\r\n            const timestamp = new Date().toLocaleTimeString();\r\n            const logEntry = document.createElement('div');\r\n            logEntry.className = 'log-entry log-' + type;\r\n            logEntry.textContent = '[' + timestamp + '] ' + message;\r\n            logsContainer.insertBefore(logEntry, logsContainer.firstChild);\r\n            \r\n            // Maximal 20 Logs anzeigen\r\n            const logs = logsContainer.children;\r\n            if (logs.length > 20) {\r\n                logsContainer.removeChild(logs[logs.length - 1]);\r\n            }\r\n        }\r\n        \r\n        function clearLogs() {\r\n            document.getElementById('logs-container').innerHTML = '';\r\n            addLog('Dashboard geladen', 'info');\r\n        }\r\n        \r\n        function refreshLogs() {\r\n            vscode.postMessage({\r\n                command: 'refreshLogs'\r\n            });\r\n        }\r\n        \r\n        // Initial stats laden\r\n        refreshStats();\r\n    </script>\r\n</body>\r\n</html>`;\r\n    }\r\n\r\n    async _handleDashboardMessage(message) {\r\n        switch (message.command) {\r\n            case 'executeCommand':\r\n                await vscode.commands.executeCommand(message.commandId);\r\n                break;\r\n            case 'refreshLogs':\r\n                // Logs aktualisieren\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Vereinfachte UI Provider\r\n */\r\nclass SimpleUIProvider {\r\n    constructor(context) {\r\n        this._context = context;\r\n        this._panel = null;\r\n    }\r\n\r\n    show() {\r\n        if (this._panel) {\r\n            this._panel.reveal();\r\n        } else {\r\n            this._panel = vscode.window.createWebviewPanel(\r\n                'comittoSimpleUI',\r\n                'Comitto - Einfache Oberfläche',\r\n                vscode.ViewColumn.One,\r\n                {\r\n                    enableScripts: true,\r\n                    retainContextWhenHidden: true\r\n                }\r\n            );\r\n\r\n            this._panel.webview.html = this._getSimpleUIContent();\r\n            \r\n            this._panel.onDidDispose(() => {\r\n                this._panel = null;\r\n            });\r\n\r\n            this._panel.webview.onDidReceiveMessage(message => {\r\n                this._handleSimpleUIMessage(message);\r\n            });\r\n        }\r\n    }\r\n\r\n    _getSimpleUIContent() {\r\n        const config = vscode.workspace.getConfiguration('comitto');\r\n        const enabled = config.get('autoCommitEnabled');\r\n        \r\n        return `<!DOCTYPE html>\r\n<html lang=\"de\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Comitto - Einfache Oberfläche</title>\r\n    <style>\r\n        body {\r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\r\n            max-width: 600px;\r\n            margin: 40px auto;\r\n            padding: 30px;\r\n            background: #f8fafc;\r\n            color: #334155;\r\n        }\r\n        \r\n        .header {\r\n            text-align: center;\r\n            margin-bottom: 40px;\r\n        }\r\n        \r\n        .status {\r\n            text-align: center;\r\n            padding: 20px;\r\n            border-radius: 12px;\r\n            margin-bottom: 30px;\r\n            font-size: 1.2rem;\r\n            font-weight: 600;\r\n        }\r\n        \r\n        .status.active {\r\n            background: #dcfce7;\r\n            color: #166534;\r\n            border: 2px solid #22c55e;\r\n        }\r\n        \r\n        .status.inactive {\r\n            background: #fef2f2;\r\n            color: #991b1b;\r\n            border: 2px solid #ef4444;\r\n        }\r\n        \r\n        .buttons {\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n            gap: 15px;\r\n            margin-bottom: 30px;\r\n        }\r\n        \r\n        .btn {\r\n            padding: 15px 25px;\r\n            border: none;\r\n            border-radius: 8px;\r\n            font-size: 1rem;\r\n            font-weight: 600;\r\n            cursor: pointer;\r\n            transition: all 0.2s ease;\r\n        }\r\n        \r\n        .btn-primary {\r\n            background: #3b82f6;\r\n            color: white;\r\n        }\r\n        \r\n        .btn-primary:hover {\r\n            background: #2563eb;\r\n        }\r\n        \r\n        .btn-secondary {\r\n            background: #e2e8f0;\r\n            color: #475569;\r\n        }\r\n        \r\n        .btn-secondary:hover {\r\n            background: #cbd5e1;\r\n        }\r\n        \r\n        .btn-success {\r\n            background: #10b981;\r\n            color: white;\r\n        }\r\n        \r\n        .btn-success:hover {\r\n            background: #059669;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class=\"header\">\r\n        <h1>🚀 Comitto</h1>\r\n        <p>Einfache Benutzeroberfläche</p>\r\n    </div>\r\n    \r\n    <div class=\"status ${enabled ? 'active' : 'inactive'}\">\r\n        ${enabled ? '✅ Auto-Commits sind aktiv' : '❌ Auto-Commits sind inaktiv'}\r\n    </div>\r\n    \r\n    <div class=\"buttons\">\r\n        <button class=\"btn btn-primary\" onclick=\"toggleAutoCommit()\">\r\n            ${enabled ? 'Deaktivieren' : 'Aktivieren'}\r\n        </button>\r\n        <button class=\"btn btn-success\" onclick=\"manualCommit()\">\r\n            Manueller Commit\r\n        </button>\r\n        <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.stageAll')\">\r\n            Alle Dateien stagen\r\n        </button>\r\n        <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.configureTriggers')\">\r\n            Trigger konfigurieren\r\n        </button>\r\n        <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.configureAIProvider')\">\r\n            KI konfigurieren\r\n        </button>\r\n        <button class=\"btn btn-secondary\" onclick=\"executeCommand('comitto.showDashboard')\">\r\n            Dashboard öffnen\r\n        </button>\r\n    </div>\r\n    \r\n    <script>\r\n        const vscode = acquireVsCodeApi();\r\n        \r\n        function executeCommand(commandId) {\r\n            vscode.postMessage({\r\n                command: 'executeCommand',\r\n                commandId: commandId\r\n            });\r\n        }\r\n        \r\n        function toggleAutoCommit() {\r\n            executeCommand('comitto.toggleAutoCommit');\r\n        }\r\n        \r\n        function manualCommit() {\r\n            executeCommand('comitto.manualCommit');\r\n        }\r\n    </script>\r\n</body>\r\n</html>`;\r\n    }\r\n\r\n    async _handleSimpleUIMessage(message) {\r\n        if (message.command === 'executeCommand') {\r\n            await vscode.commands.executeCommand(message.commandId);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    MainViewProvider,\r\n    LogsViewProvider,\r\n    DashboardProvider,\r\n    SimpleUIProvider\r\n}; "],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_defineProperties","_toPropertyKey","key","toPrimitive","String","_toPrimitive","_wrapNativeSuper","Map","Function","toString","indexOf","_isNativeFunction","has","get","set","Wrapper","_isNativeReflectConstruct","Reflect","construct","apply","arguments","bind","_setPrototypeOf","_construct","_getPrototypeOf","Boolean","valueOf","exec","require","fs","path","os","ErrorTypes","GIT","CONFIG","FILE_SYSTEM","NETWORK","AI_SERVICE","INTERNAL","UNKNOWN","ComittoError","_Error","message","_this","undefined","originalError","context","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","timestamp","Date","stack","concat","_inherits","this","toISOString","errorLogs","logError","error","errorEntry","toJSON","unshift","console","logDir","join","homedir","existsSync","mkdirSync","recursive","logFile","split","logMessage","JSON","stringify","appendFileSync","getErrorLogs","limit","_withRetry","_callee","asyncFn","options","_options$maxRetries","maxRetries","_options$retryDelay","retryDelay","_options$shouldRetry","shouldRetry","_loop","_ret","attempt","_args2","_context2","delay","_context","t0","t1","Math","pow","setTimeout","attempts","_next","_throw","module","exports","executeGitCommand","command","cwd","reject","maxBuffer","stdout","stderr","errorMessage","includes","code","bufferError","gitError","getStatusText","statusCode","clearErrorLogs","withRetry","_x","getDiagnosticInfo","platform","process","nodeVersion","version","arch","cpus","totalmem","freemem","uptime","updateStatusBarProgress","statusBarItem","action","progress","details","progressBar","progressIcon","filledCount","floor","remainingCount","repeat","statusText","text","_asyncToGenerator","_createClass","vscode","MainViewProvider","_onDidChangeTreeData","EventEmitter","onDidChangeTreeData","event","fire","element","_getChildren","items","statusGroup","gitGroup","aiGroup","triggerGroup","uiGroup","_getSubItems","workspace","getConfiguration","TreeItem","TreeItemCollapsibleState","Expanded","contextValue","iconPath","ThemeIcon","_getSubItems2","_callee2","_getStatusItems","_getGitItems","_getAIItems","_getTriggerItems","_getUIItems","_x2","_getStatusItems2","_callee3","config","enabled","statusItem","manualCommitItem","stageAllItem","stageSelectedItem","dashboardItem","simpleUIItem","_context3","None","tooltip","title","_getGitItems2","_callee4","gitSettings","autoPushItem","branchItem","currentStyle","commitStyleItem","currentLanguage","languageItem","currentStageMode","stageModeItem","gitignoreItem","_context4","autoPush","branch","commitMessageStyle","commitMessageLanguage","stageMode","useGitignore","_getAIItems2","_callee5","currentProvider","providerMap","providerItem","openaiSettings","openaiModelItem","openaiKeyItem","anthropicSettings","anthropicModelItem","anthropicKeyItem","ollamaSettings","ollamaModelItem","ollamaEndpointItem","promptItem","_context5","model","apiKey","endpoint","_getTriggerItems2","_callee6","triggerRules","configureItem","onSaveItem","onIntervalItem","onBranchItem","fileCountItem","timeThresholdItem","changeCountItem","_context6","onSave","intervalMinutes","onInterval","onBranchSwitch","fileCountThreshold","timeThresholdMinutes","minChangeCount","_getUIItems2","_callee7","uiSettings","simpleModeItem","themeItem","notificationItem","settingsItem","_context7","simpleMode","theme","showNotifications","LogsViewProvider","_logs","logEntry","toLocaleTimeString","id","now","refresh","_getChildren2","_callee8","clearItem","_iterator","_step","log","logItem","emptyItem","_context8","_createForOfIteratorHelper","toUpperCase","DashboardProvider","_panel","reveal","window","createWebviewPanel","ViewColumn","One","enableScripts","retainContextWhenHidden","localResourceRoots","Uri","file","extensionPath","webview","html","_getDashboardContent","onDidDispose","onDidReceiveMessage","_handleDashboardMessage","aiProvider","_handleDashboardMessage2","_callee9","_context9","commands","executeCommand","commandId","_x3","SimpleUIProvider","_this2","_getSimpleUIContent","_handleSimpleUIMessage","_handleSimpleUIMessage2","_callee10","_context10","_x4"],"sourceRoot":""}