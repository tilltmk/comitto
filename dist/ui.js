/*! For license information please see ui.js.LICENSE.txt */
(()=>{var e={1398:e=>{"use strict";e.exports=require("vscode")},6928:e=>{"use strict";e.exports=require("path")},9829:(e,t,n)=>{function o(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return r(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var o=0,a=function(){};return{s:a,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,c=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return c=e.done,e},e:function(e){s=!0,i=e},f:function(){try{c||null==n.return||n.return()}finally{if(s)throw i}}}}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=Array(t);n<t;n++)o[n]=e[n];return o}function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function i(){"use strict";i=function(){return t};var e,t={},n=Object.prototype,o=n.hasOwnProperty,r=Object.defineProperty||function(e,t,n){e[t]=n.value},c="function"==typeof Symbol?Symbol:{},s=c.iterator||"@@iterator",l=c.asyncIterator||"@@asyncIterator",m=c.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function d(e,t,n,o){var a=t&&t.prototype instanceof w?t:w,i=Object.create(a.prototype),c=new L(o||[]);return r(i,"_invoke",{value:A(e,n,c)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=d;var p="suspendedStart",g="suspendedYield",f="executing",b="completed",v={};function w(){}function y(){}function I(){}var x={};u(x,s,(function(){return this}));var T=Object.getPrototypeOf,C=T&&T(T(N([])));C&&C!==n&&o.call(C,s)&&(x=C);var k=I.prototype=w.prototype=Object.create(x);function S(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function n(r,i,c,s){var l=h(e[r],e,i);if("throw"!==l.type){var m=l.arg,u=m.value;return u&&"object"==a(u)&&o.call(u,"__await")?t.resolve(u.__await).then((function(e){n("next",e,c,s)}),(function(e){n("throw",e,c,s)})):t.resolve(u).then((function(e){m.value=e,c(m)}),(function(e){return n("throw",e,c,s)}))}s(l.arg)}var i;r(this,"_invoke",{value:function(e,o){function r(){return new t((function(t,r){n(e,o,t,r)}))}return i=i?i.then(r,r):r()}})}function A(t,n,o){var r=p;return function(a,i){if(r===f)throw Error("Generator is already running");if(r===b){if("throw"===a)throw i;return{value:e,done:!0}}for(o.method=a,o.arg=i;;){var c=o.delegate;if(c){var s=E(c,o);if(s){if(s===v)continue;return s}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if(r===p)throw r=b,o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);r=f;var l=h(t,n,o);if("normal"===l.type){if(r=o.done?b:g,l.arg===v)continue;return{value:l.arg,done:o.done}}"throw"===l.type&&(r=b,o.method="throw",o.arg=l.arg)}}}function E(t,n){var o=n.method,r=t.iterator[o];if(r===e)return n.delegate=null,"throw"===o&&t.iterator.return&&(n.method="return",n.arg=e,E(t,n),"throw"===n.method)||"return"!==o&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+o+"' method")),v;var a=h(r,t.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,v;var i=a.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,v):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,v)}function _(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function D(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function L(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(_,this),this.reset(!0)}function N(t){if(t||""===t){var n=t[s];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,i=function n(){for(;++r<t.length;)if(o.call(t,r))return n.value=t[r],n.done=!1,n;return n.value=e,n.done=!0,n};return i.next=i}}throw new TypeError(a(t)+" is not iterable")}return y.prototype=I,r(k,"constructor",{value:I,configurable:!0}),r(I,"constructor",{value:y,configurable:!0}),y.displayName=u(I,m,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,I):(e.__proto__=I,u(e,m,"GeneratorFunction")),e.prototype=Object.create(k),e},t.awrap=function(e){return{__await:e}},S(P.prototype),u(P.prototype,l,(function(){return this})),t.AsyncIterator=P,t.async=function(e,n,o,r,a){void 0===a&&(a=Promise);var i=new P(d(e,n,o,r),a);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},S(k),u(k,m,"Generator"),u(k,s,(function(){return this})),u(k,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var o in t)n.push(o);return n.reverse(),function e(){for(;n.length;){var o=n.pop();if(o in t)return e.value=o,e.done=!1,e}return e.done=!0,e}},t.values=N,L.prototype={constructor:L,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(D),!t)for(var n in this)"t"===n.charAt(0)&&o.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function r(o,r){return c.type="throw",c.arg=t,n.next=o,r&&(n.method="next",n.arg=e),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],c=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var s=o.call(i,"catchLoc"),l=o.call(i,"finallyLoc");if(s&&l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!l)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&o.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,v):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),v},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),D(n),v}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var o=n.completion;if("throw"===o.type){var r=o.arg;D(n)}return r}}throw Error("illegal catch attempt")},delegateYield:function(t,n,o){return this.delegate={iterator:N(t),resultName:n,nextLoc:o},"next"===this.method&&(this.arg=e),v}},t}function c(e,t,n,o,r,a,i){try{var c=e[a](i),s=c.value}catch(e){return void n(e)}c.done?t(s):Promise.resolve(s).then(o,r)}function s(e){return function(){var t=this,n=arguments;return new Promise((function(o,r){var a=e.apply(t,n);function i(e){c(a,o,r,i,s,"next",e)}function s(e){c(a,o,r,i,s,"throw",e)}i(void 0)}))}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function m(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,d(o.key),o)}}function u(e,t,n){return t&&m(e.prototype,t),n&&m(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function d(e){var t=function(e){if("object"!=a(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==a(t)?t:t+""}var h=n(1398),p=n(6928),g=function(){return u((function e(t){l(this,e),this._onDidChangeTreeData=new h.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this._context=t}),[{key:"refresh",value:function(){this._onDidChangeTreeData.fire()}},{key:"getTreeItem",value:function(e){return e}},{key:"getChildren",value:(c=s(i().mark((function e(t){var n,o,r,a,c,s;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t){e.next=2;break}return e.abrupt("return",this._getSubItems(t));case 2:return h.workspace.getConfiguration("comitto").get("autoCommitEnabled"),n=[],(o=new h.TreeItem("Status und Schnellaktionen",h.TreeItemCollapsibleState.Expanded)).contextValue="status-group",o.iconPath=new h.ThemeIcon("pulse"),n.push(o),(r=new h.TreeItem("Git Konfiguration",h.TreeItemCollapsibleState.Expanded)).contextValue="git-group",r.iconPath=new h.ThemeIcon("git-branch"),n.push(r),(a=new h.TreeItem("KI Provider",h.TreeItemCollapsibleState.Expanded)).contextValue="ai-group",a.iconPath=new h.ThemeIcon("robot"),n.push(a),(c=new h.TreeItem("Trigger Regeln",h.TreeItemCollapsibleState.Expanded)).contextValue="trigger-group",c.iconPath=new h.ThemeIcon("settings-gear"),n.push(c),(s=new h.TreeItem("Benutzeroberfläche",h.TreeItemCollapsibleState.Expanded)).contextValue="ui-group",s.iconPath=new h.ThemeIcon("layout"),n.push(s),e.abrupt("return",n);case 26:case"end":return e.stop()}}),e,this)}))),function(e){return c.apply(this,arguments)})},{key:"_getSubItems",value:(a=s(i().mark((function e(t){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:h.workspace.getConfiguration("comitto"),e.t0=t.contextValue,e.next="status-group"===e.t0?5:"git-group"===e.t0?6:"ai-group"===e.t0?7:"trigger-group"===e.t0?8:"ui-group"===e.t0?9:10;break;case 5:return e.abrupt("return",this._getStatusItems());case 6:return e.abrupt("return",this._getGitItems());case 7:return e.abrupt("return",this._getAIItems());case 8:return e.abrupt("return",this._getTriggerItems());case 9:return e.abrupt("return",this._getUIItems());case 10:return e.abrupt("return",[]);case 11:case"end":return e.stop()}}),e,this)}))),function(e){return a.apply(this,arguments)})},{key:"_getStatusItems",value:(r=s(i().mark((function e(){var t,n,o,r,a,c,s,l,m;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=h.workspace.getConfiguration("comitto"),n=t.get("autoCommitEnabled"),o=[],(r=new h.TreeItem("Comitto: ".concat(n?"Aktiv":"Inaktiv"),h.TreeItemCollapsibleState.None)).contextValue=n?"comitto-status-enabled":"comitto-status-disabled",r.iconPath=new h.ThemeIcon(n?"check-all":"circle-slash"),r.tooltip=n?"Auto-Commits sind aktiviert":"Auto-Commits sind deaktiviert",r.command={command:"comitto.toggleAutoCommit",title:"Toggle Auto-Commit"},o.push(r),(a=new h.TreeItem("Manueller Commit",h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("git-commit"),a.tooltip="Führt einen manuellen KI-Commit aus",a.command={command:"comitto.manualCommit",title:"Manual Commit"},o.push(a),(c=new h.TreeItem("Alle Dateien stagen",h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("add"),c.tooltip="Staged alle geänderten Dateien",c.command={command:"comitto.stageAll",title:"Stage All"},o.push(c),(s=new h.TreeItem("Ausgewählte Dateien stagen",h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("checklist"),s.tooltip="Ermöglicht Auswahl bestimmter Dateien zum Stagen",s.command={command:"comitto.stageSelected",title:"Stage Selected Files"},o.push(s),(l=new h.TreeItem("Dashboard öffnen",h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("dashboard"),l.tooltip="Öffnet das erweiterte Dashboard",l.command={command:"comitto.showDashboard",title:"Show Dashboard"},o.push(l),(m=new h.TreeItem("Einfache Oberfläche",h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("rocket"),m.tooltip="Öffnet die vereinfachte Benutzeroberfläche",m.command={command:"comitto.showSimpleUI",title:"Show Simple UI"},o.push(m),e.abrupt("return",o);case 35:case"end":return e.stop()}}),e)}))),function(){return r.apply(this,arguments)})},{key:"_getGitItems",value:(o=s(i().mark((function e(){var t,n,o,r,a,c,s,l,m,u,d,p;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=h.workspace.getConfiguration("comitto"),n=t.get("gitSettings"),o=[],(r=new h.TreeItem("Auto-Push: ".concat(n.autoPush?"Aktiviert":"Deaktiviert"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon(n.autoPush?"cloud-upload":"x"),r.tooltip="Automatisches Push nach Commit",r.command={command:"comitto.toggleAutoPush",title:"Toggle Auto Push"},o.push(r),(a=new h.TreeItem("Branch: ".concat(n.branch||"Aktueller Branch"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("git-branch"),a.tooltip="Ziel-Branch für Commits",a.command={command:"comitto.editBranch",title:"Edit Branch"},o.push(a),c={conventional:"Conventional Commits",gitmoji:"Gitmoji",simple:"Einfach",angular:"Angular",atom:"Atom"}[n.commitMessageStyle]||"Conventional",(s=new h.TreeItem("Commit-Stil: ".concat(c),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("symbol-string"),s.tooltip="Stil der generierten Commit-Nachrichten",s.command={command:"comitto.selectCommitStyle",title:"Select Commit Style"},o.push(s),l={de:"Deutsch",en:"English",fr:"Français",es:"Español",it:"Italiano",ja:"日本語",zh:"中文"}[n.commitMessageLanguage]||"Deutsch",(m=new h.TreeItem("Sprache: ".concat(l),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("symbol-misc"),m.tooltip="Sprache für Commit-Nachrichten",m.command={command:"comitto.selectCommitLanguage",title:"Select Commit Language"},o.push(m),u={all:"Alle Dateien",specific:"Spezifische Dateien",ask:"Nachfragen"}[n.stageMode]||"Alle Dateien",(d=new h.TreeItem("Stage-Modus: ".concat(u),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("file-add"),d.tooltip="Bestimmt, welche Dateien automatisch gestagt werden",d.command={command:"comitto.selectStageMode",title:"Select Stage Mode"},o.push(d),(p=new h.TreeItem("Gitignore: ".concat(n.useGitignore?"Respektiert":"Ignoriert"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon(n.useGitignore?"eye":"eye-closed"),p.tooltip="Ob .gitignore Regeln beachtet werden",p.command={command:"comitto.toggleUseGitignore",title:"Toggle Use Gitignore"},o.push(p),e.abrupt("return",o);case 40:case"end":return e.stop()}}),e)}))),function(){return o.apply(this,arguments)})},{key:"_getAIItems",value:(n=s(i().mark((function e(){var t,n,o,r,a,c,s,l,m,u,d,p,g,f,b;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=h.workspace.getConfiguration("comitto"),n=t.get("aiProvider"),o=[],r={openai:"OpenAI",anthropic:"Anthropic",ollama:"Ollama"},(a=new h.TreeItem("Provider: ".concat(r[n]||n),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("robot"),a.tooltip="Aktueller KI-Provider für Commit-Nachrichten",a.command={command:"comitto.configureAIProvider",title:"Configure AI Provider"},o.push(a),e.t0=n,e.next="openai"===e.t0?12:"anthropic"===e.t0?22:"ollama"===e.t0?32:40;break;case 12:return c=t.get("openai"),(s=new h.TreeItem("OpenAI Modell: ".concat(c.model),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("symbol-parameter"),s.command={command:"comitto.selectOpenAIModel",title:"Select OpenAI Model"},o.push(s),(l=new h.TreeItem("API-Schlüssel: ".concat(c.apiKey?"Konfiguriert":"Nicht gesetzt"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("key"),l.command={command:"comitto.editOpenAIKey",title:"Edit OpenAI API Key"},o.push(l),e.abrupt("break",40);case 22:return m=t.get("anthropic"),(u=new h.TreeItem("Anthropic Modell: ".concat(m.model),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("symbol-parameter"),u.command={command:"comitto.selectAnthropicModel",title:"Select Anthropic Model"},o.push(u),(d=new h.TreeItem("API-Schlüssel: ".concat(m.apiKey?"Konfiguriert":"Nicht gesetzt"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("key"),d.command={command:"comitto.editAnthropicKey",title:"Edit Anthropic API Key"},o.push(d),e.abrupt("break",40);case 32:return p=t.get("ollama"),(g=new h.TreeItem("Ollama Modell: ".concat(p.model),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("symbol-parameter"),o.push(g),(f=new h.TreeItem("Endpoint: ".concat(p.endpoint),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("globe"),o.push(f),e.abrupt("break",40);case 40:return(b=new h.TreeItem("Prompt-Template bearbeiten",h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("edit"),b.tooltip="Bearbeitet die Vorlage für KI-Prompts",b.command={command:"comitto.editPromptTemplate",title:"Edit Prompt Template"},o.push(b),e.abrupt("return",o);case 46:case"end":return e.stop()}}),e)}))),function(){return n.apply(this,arguments)})},{key:"_getTriggerItems",value:(t=s(i().mark((function e(){var t,n,o,r,a,c,s,l,m,u;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=h.workspace.getConfiguration("comitto"),n=t.get("triggerRules"),o=[],(r=new h.TreeItem("Trigger konfigurieren",h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("settings-gear"),r.tooltip="Öffnet die Trigger-Konfiguration",r.command={command:"comitto.configureTriggers",title:"Configure Triggers"},o.push(r),(a=new h.TreeItem("Bei Speichern: ".concat(n.onSave?"Aktiv":"Inaktiv"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon(n.onSave?"check":"x"),a.command={command:"comitto.toggleOnSave",title:"Toggle On Save"},o.push(a),(c=new h.TreeItem("Intervall (".concat(n.intervalMinutes,"min): ").concat(n.onInterval?"Aktiv":"Inaktiv"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon(n.onInterval?"clock":"circle-slash"),c.command={command:"comitto.toggleOnInterval",title:"Toggle On Interval"},o.push(c),(s=new h.TreeItem("Bei Branch-Wechsel: ".concat(n.onBranchSwitch?"Aktiv":"Inaktiv"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon(n.onBranchSwitch?"git-branch":"x"),s.command={command:"comitto.toggleOnBranchSwitch",title:"Toggle On Branch Switch"},o.push(s),(l=new h.TreeItem("Datei-Anzahl-Schwelle: ".concat(n.fileCountThreshold),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("file-code"),l.command={command:"comitto.editFileCountThreshold",title:"Edit File Count Threshold"},o.push(l),(m=new h.TreeItem("Zeit-Schwelle: ".concat(n.timeThresholdMinutes," min"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("clock"),m.command={command:"comitto.editTimeThreshold",title:"Edit Time Threshold"},o.push(m),(u=new h.TreeItem("Mindest-Änderungen: ".concat(n.minChangeCount),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("diff"),u.command={command:"comitto.editMinChangeCount",title:"Edit Min Change Count"},o.push(u),e.abrupt("return",o);case 33:case"end":return e.stop()}}),e)}))),function(){return t.apply(this,arguments)})},{key:"_getUIItems",value:(e=s(i().mark((function e(){var t,n,o,r,a,c,s;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=h.workspace.getConfiguration("comitto"),n=t.get("uiSettings"),o=[],(r=new h.TreeItem("Einfacher Modus: ".concat(n.simpleMode?"Aktiv":"Inaktiv"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon(n.simpleMode?"eye":"eye-closed"),r.command={command:"comitto.toggleSimpleMode",title:"Toggle Simple Mode"},o.push(r),(a=new h.TreeItem("Theme: ".concat(n.theme||"auto"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("color-mode"),a.command={command:"comitto.selectTheme",title:"Select Theme"},o.push(a),t.get("notifications"),(c=new h.TreeItem("Benachrichtigungen: ".concat(n.showNotifications?"Aktiv":"Inaktiv"),h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon(n.showNotifications?"bell":"bell-slash"),o.push(c),(s=new h.TreeItem("VS Code Einstellungen öffnen",h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("gear"),s.command={command:"comitto.openSettings",title:"Open Settings"},o.push(s),e.abrupt("return",o);case 20:case"end":return e.stop()}}),e)}))),function(){return e.apply(this,arguments)})}]);var e,t,n,o,r,a,c}(),f=function(){return u((function e(t){l(this,e),this._onDidChangeTreeData=new h.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this._context=t,this._logs=[]}),[{key:"refresh",value:function(){this._onDidChangeTreeData.fire()}},{key:"addLog",value:function(e){var t={message:e,type:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",timestamp:(new Date).toLocaleTimeString(),id:Date.now()};this._logs.unshift(t),this._logs.length>50&&(this._logs=this._logs.slice(0,50)),this.refresh()}},{key:"clearLogs",value:function(){this._logs=[],this.refresh()}},{key:"getTreeItem",value:function(e){return e}},{key:"getChildren",value:(e=s(i().mark((function e(){var t,n,r,a,c,s,l;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=[],(n=new h.TreeItem("Logs löschen",h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("trash"),n.tooltip="Löscht alle Debug-Logs",n.command={command:"comitto.clearLogs",title:"Clear Logs"},t.push(n),r=o(this._logs),e.prev=7,r.s();case 9:if((a=r.n()).done){e.next=26;break}c=a.value,s=new h.TreeItem("[".concat(c.timestamp,"] ").concat(c.message),h.TreeItemCollapsibleState.None),e.t0=c.type,e.next="error"===e.t0?15:"warning"===e.t0?17:"success"===e.t0?19:21;break;case 15:return s.iconPath=new h.ThemeIcon("error"),e.abrupt("break",22);case 17:return s.iconPath=new h.ThemeIcon("warning"),e.abrupt("break",22);case 19:return s.iconPath=new h.ThemeIcon("check"),e.abrupt("break",22);case 21:s.iconPath=new h.ThemeIcon("info");case 22:s.tooltip="".concat(c.type.toUpperCase(),": ").concat(c.message),t.push(s);case 24:e.next=9;break;case 26:e.next=31;break;case 28:e.prev=28,e.t1=e.catch(7),r.e(e.t1);case 31:return e.prev=31,r.f(),e.finish(31);case 34:return 0===this._logs.length&&((l=new h.TreeItem("Keine Logs vorhanden",h.TreeItemCollapsibleState.None)).iconPath=new h.ThemeIcon("info"),t.push(l)),e.abrupt("return",t);case 36:case"end":return e.stop()}}),e,this,[[7,28,31,34]])}))),function(){return e.apply(this,arguments)})}]);var e}(),b=function(){return u((function e(t){l(this,e),this._context=t,this._panel=null}),[{key:"show",value:function(){var e=this;this._panel?this._panel.reveal():(this._panel=h.window.createWebviewPanel("comittoDashboard","Comitto Dashboard",h.ViewColumn.One,{enableScripts:!0,retainContextWhenHidden:!0,localResourceRoots:[h.Uri.file(p.join(this._context.extensionPath,"resources"))]}),this._panel.webview.html=this._getDashboardContent(),this._panel.onDidDispose((function(){e._panel=null})),this._panel.webview.onDidReceiveMessage((function(t){e._handleDashboardMessage(t)})))}},{key:"_getDashboardContent",value:function(){var e=h.workspace.getConfiguration("comitto"),t=e.get("autoCommitEnabled"),n=e.get("aiProvider"),o=e.get("gitSettings");return'<!DOCTYPE html>\n<html lang="de">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Comitto Dashboard</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', \'Roboto\', sans-serif;\n            background: linear-gradient(135deg,rgb(12, 22, 66) 0%,rgb(23, 8, 37) 100%);\n            color: white;\n            min-height: 100vh;\n            padding: 20px;\n        }\n        \n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n        }\n        \n        .header {\n            text-align: center;\n            margin-bottom: 40px;\n        }\n        \n        .header h1 {\n            font-size: 2.5rem;\n            margin-bottom: 10px;\n            background: linear-gradient(45deg, #fff, #f0f0f0);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n        }\n        \n        .grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        \n        .card {\n            background: rgba(255, 255, 255, 0.1);\n            backdrop-filter: blur(10px);\n            border-radius: 15px;\n            padding: 25px;\n            border: 1px solid rgba(255, 255, 255, 0.2);\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n        }\n        \n        .card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\n        }\n        \n        .card h3 {\n            font-size: 1.4rem;\n            margin-bottom: 15px;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n        }\n        \n        .status-indicator {\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            display: inline-block;\n        }\n        \n        .status-active { background-color: #4ade80; }\n        .status-inactive { background-color: #f87171; }\n        \n        .btn {\n            background: linear-gradient(45deg, #4ade80, #22c55e);\n            border: none;\n            padding: 12px 24px;\n            border-radius: 8px;\n            color: white;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            margin: 5px;\n            display: inline-block;\n            text-decoration: none;\n        }\n        \n        .btn:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n        }\n        \n        .btn-secondary {\n            background: linear-gradient(45deg, #6366f1, #8b5cf6);\n        }\n        \n        .btn-danger {\n            background: linear-gradient(45deg, #ef4444, #dc2626);\n        }\n        \n        .stats {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n            gap: 15px;\n            margin-top: 20px;\n        }\n        \n        .stat-card {\n            background: rgba(255, 255, 255, 0.05);\n            padding: 15px;\n            border-radius: 10px;\n            text-align: center;\n        }\n        \n        .stat-number {\n            font-size: 2rem;\n            font-weight: bold;\n            color: #4ade80;\n        }\n        \n        .logs-section {\n            background: rgba(0, 0, 0, 0.3);\n            border-radius: 15px;\n            padding: 20px;\n            margin-top: 20px;\n            max-height: 300px;\n            overflow-y: auto;\n        }\n        \n        .log-entry {\n            padding: 8px 0;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n            font-family: \'Courier New\', monospace;\n            font-size: 0.9rem;\n        }\n        \n        .log-entry:last-child {\n            border-bottom: none;\n        }\n        \n        .log-info { color: #60a5fa; }\n        .log-success { color: #4ade80; }\n        .log-warning { color: #fbbf24; }\n        .log-error { color: #f87171; }\n        \n        @media (max-width: 768px) {\n            .grid {\n                grid-template-columns: 1fr;\n            }\n            \n            .header h1 {\n                font-size: 2rem;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class="container">\n        <div class="header">\n            <h1>🚀 Comitto Dashboard</h1>\n            <p>Intelligent Git Commit Management</p>\n        </div>\n        \n        <div class="grid">\n            <div class="card">\n                <h3>\n                    <span class="status-indicator '.concat(t?"status-active":"status-inactive",'"></span>\n                    Status\n                </h3>\n                <p>Auto-Commits: <strong>').concat(t?"Aktiv":"Inaktiv","</strong></p>\n                <p>KI-Provider: <strong>").concat(n.toUpperCase(),"</strong></p>\n                <p>Commit-Stil: <strong>").concat(o.commitMessageStyle||"conventional",'</strong></p>\n                <div style="margin-top: 15px;">\n                    <button class="btn" onclick="toggleAutoCommit()">\n                        ').concat(t?"Deaktivieren":"Aktivieren",'\n                    </button>\n                    <button class="btn btn-secondary" onclick="manualCommit()">\n                        Manueller Commit\n                    </button>\n                </div>\n            </div>\n            \n            <div class="card">\n                <h3>🛠️ Schnellaktionen</h3>\n                <button class="btn" onclick="executeCommand(\'comitto.stageAll\')">Alle Dateien stagen</button>\n                <button class="btn btn-secondary" onclick="executeCommand(\'comitto.stageSelected\')">Auswahl stagen</button>\n                <button class="btn btn-secondary" onclick="executeCommand(\'comitto.configureTriggers\')">Trigger konfigurieren</button>\n                <button class="btn btn-secondary" onclick="executeCommand(\'comitto.configureAIProvider\')">KI konfigurieren</button>\n            </div>\n            \n            <div class="card">\n                <h3>📊 Statistiken</h3>\n                <div class="stats">\n                    <div class="stat-card">\n                        <div class="stat-number" id="commitCount">-</div>\n                        <div>Commits heute</div>\n                    </div>\n                    <div class="stat-card">\n                        <div class="stat-number" id="filesStaged">-</div>\n                        <div>Dateien gestagt</div>\n                    </div>\n                </div>\n                <div style="margin-top: 15px;">\n                    <button class="btn btn-secondary" onclick="refreshStats()">Aktualisieren</button>\n                </div>\n            </div>\n            \n            <div class="card">\n                <h3>⚙️ Konfiguration</h3>\n                <p><strong>Branch:</strong> ').concat(o.branch||"Aktueller Branch","</p>\n                <p><strong>Auto-Push:</strong> ").concat(o.autoPush?"Ja":"Nein","</p>\n                <p><strong>Sprache:</strong> ").concat(o.commitMessageLanguage||"de",'</p>\n                <div style="margin-top: 15px;">\n                    <button class="btn btn-secondary" onclick="executeCommand(\'comitto.openSettings\')">Einstellungen öffnen</button>\n                    <button class="btn btn-secondary" onclick="executeCommand(\'comitto.showSimpleUI\')">Einfache UI</button>\n                </div>\n            </div>\n        </div>\n        \n        <div class="logs-section">\n            <h3>📋 Aktuelle Logs</h3>\n            <div id="logs-container">\n                <div class="log-entry log-info">[').concat((new Date).toLocaleTimeString(),"] Dashboard geladen</div>\n            </div>\n            <div style=\"margin-top: 15px;\">\n                <button class=\"btn btn-danger\" onclick=\"clearLogs()\">Logs löschen</button>\n                <button class=\"btn btn-secondary\" onclick=\"refreshLogs()\">Aktualisieren</button>\n            </div>\n        </div>\n    </div>\n    \n    <script>\n        const vscode = acquireVsCodeApi();\n        \n        function executeCommand(commandId) {\n            vscode.postMessage({\n                command: 'executeCommand',\n                commandId: commandId\n            });\n            addLog('Command ausgeführt: ' + commandId, 'info');\n        }\n        \n        function toggleAutoCommit() {\n            vscode.postMessage({\n                command: 'executeCommand',\n                commandId: 'comitto.toggleAutoCommit'\n            });\n            addLog('Auto-Commit umgeschaltet', 'info');\n        }\n        \n        function manualCommit() {\n            vscode.postMessage({\n                command: 'executeCommand',\n                commandId: 'comitto.manualCommit'\n            });\n            addLog('Manueller Commit gestartet', 'info');\n        }\n        \n        function refreshStats() {\n            // Statistiken aktualisieren (Dummy-Daten für Demo)\n            document.getElementById('commitCount').textContent = Math.floor(Math.random() * 20);\n            document.getElementById('filesStaged').textContent = Math.floor(Math.random() * 10);\n            addLog('Statistiken aktualisiert', 'success');\n        }\n        \n        function addLog(message, type = 'info') {\n            const logsContainer = document.getElementById('logs-container');\n            const timestamp = new Date().toLocaleTimeString();\n            const logEntry = document.createElement('div');\n            logEntry.className = 'log-entry log-' + type;\n            logEntry.textContent = '[' + timestamp + '] ' + message;\n            logsContainer.insertBefore(logEntry, logsContainer.firstChild);\n            \n            // Maximal 20 Logs anzeigen\n            const logs = logsContainer.children;\n            if (logs.length > 20) {\n                logsContainer.removeChild(logs[logs.length - 1]);\n            }\n        }\n        \n        function clearLogs() {\n            document.getElementById('logs-container').innerHTML = '';\n            addLog('Dashboard geladen', 'info');\n        }\n        \n        function refreshLogs() {\n            vscode.postMessage({\n                command: 'refreshLogs'\n            });\n        }\n        \n        // Initial stats laden\n        refreshStats();\n    <\/script>\n</body>\n</html>")}},{key:"_handleDashboardMessage",value:(e=s(i().mark((function e(t){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.t0=t.command,e.next="executeCommand"===e.t0?3:"refreshLogs"===e.t0?6:7;break;case 3:return e.next=5,h.commands.executeCommand(t.commandId);case 5:case 6:return e.abrupt("break",7);case 7:case"end":return e.stop()}}),e)}))),function(t){return e.apply(this,arguments)})}]);var e}(),v=function(){return u((function e(t){l(this,e),this._context=t,this._panel=null}),[{key:"show",value:function(){var e=this;this._panel?this._panel.reveal():(this._panel=h.window.createWebviewPanel("comittoSimpleUI","Comitto - Einfache Oberfläche",h.ViewColumn.One,{enableScripts:!0,retainContextWhenHidden:!0}),this._panel.webview.html=this._getSimpleUIContent(),this._panel.onDidDispose((function(){e._panel=null})),this._panel.webview.onDidReceiveMessage((function(t){e._handleSimpleUIMessage(t)})))}},{key:"_getSimpleUIContent",value:function(){var e=h.workspace.getConfiguration("comitto").get("autoCommitEnabled");return'<!DOCTYPE html>\n<html lang="de">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Comitto - Einfache Oberfläche</title>\n    <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', sans-serif;\n            max-width: 600px;\n            margin: 40px auto;\n            padding: 30px;\n            background: #f8fafc;\n            color: #334155;\n        }\n        \n        .header {\n            text-align: center;\n            margin-bottom: 40px;\n        }\n        \n        .status {\n            text-align: center;\n            padding: 20px;\n            border-radius: 12px;\n            margin-bottom: 30px;\n            font-size: 1.2rem;\n            font-weight: 600;\n        }\n        \n        .status.active {\n            background: #dcfce7;\n            color: #166534;\n            border: 2px solid #22c55e;\n        }\n        \n        .status.inactive {\n            background: #fef2f2;\n            color: #991b1b;\n            border: 2px solid #ef4444;\n        }\n        \n        .buttons {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 15px;\n            margin-bottom: 30px;\n        }\n        \n        .btn {\n            padding: 15px 25px;\n            border: none;\n            border-radius: 8px;\n            font-size: 1rem;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.2s ease;\n        }\n        \n        .btn-primary {\n            background: #3b82f6;\n            color: white;\n        }\n        \n        .btn-primary:hover {\n            background: #2563eb;\n        }\n        \n        .btn-secondary {\n            background: #e2e8f0;\n            color: #475569;\n        }\n        \n        .btn-secondary:hover {\n            background: #cbd5e1;\n        }\n        \n        .btn-success {\n            background: #10b981;\n            color: white;\n        }\n        \n        .btn-success:hover {\n            background: #059669;\n        }\n    </style>\n</head>\n<body>\n    <div class="header">\n        <h1>🚀 Comitto</h1>\n        <p>Einfache Benutzeroberfläche</p>\n    </div>\n    \n    <div class="status '.concat(e?"active":"inactive",'">\n        ').concat(e?"✅ Auto-Commits sind aktiv":"❌ Auto-Commits sind inaktiv",'\n    </div>\n    \n    <div class="buttons">\n        <button class="btn btn-primary" onclick="toggleAutoCommit()">\n            ').concat(e?"Deaktivieren":"Aktivieren",'\n        </button>\n        <button class="btn btn-success" onclick="manualCommit()">\n            Manueller Commit\n        </button>\n        <button class="btn btn-secondary" onclick="executeCommand(\'comitto.stageAll\')">\n            Alle Dateien stagen\n        </button>\n        <button class="btn btn-secondary" onclick="executeCommand(\'comitto.configureTriggers\')">\n            Trigger konfigurieren\n        </button>\n        <button class="btn btn-secondary" onclick="executeCommand(\'comitto.configureAIProvider\')">\n            KI konfigurieren\n        </button>\n        <button class="btn btn-secondary" onclick="executeCommand(\'comitto.showDashboard\')">\n            Dashboard öffnen\n        </button>\n    </div>\n    \n    <script>\n        const vscode = acquireVsCodeApi();\n        \n        function executeCommand(commandId) {\n            vscode.postMessage({\n                command: \'executeCommand\',\n                commandId: commandId\n            });\n        }\n        \n        function toggleAutoCommit() {\n            executeCommand(\'comitto.toggleAutoCommit\');\n        }\n        \n        function manualCommit() {\n            executeCommand(\'comitto.manualCommit\');\n        }\n    <\/script>\n</body>\n</html>')}},{key:"_handleSimpleUIMessage",value:(e=s(i().mark((function e(t){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("executeCommand"!==t.command){e.next=3;break}return e.next=3,h.commands.executeCommand(t.commandId);case 3:case"end":return e.stop()}}),e)}))),function(t){return e.apply(this,arguments)})}]);var e}();e.exports={MainViewProvider:g,LogsViewProvider:f,DashboardProvider:b,SimpleUIProvider:v}}},t={},n=function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,n),a.exports}(9829);module.exports=n})();
//# sourceMappingURL=ui.js.map