/*! For license information please see extension.js.LICENSE.txt */
(()=>{var e,t,n,r={286:(e,t,n)=>{function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function o(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=a(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,s=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){c=!0,i=e},f:function(){try{s||null==n.return||n.return()}finally{if(c)throw i}}}}function i(){"use strict";i=function(){return t};var e,t={},n=Object.prototype,o=n.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},s="function"==typeof Symbol?Symbol:{},c=s.iterator||"@@iterator",u=s.asyncIterator||"@@asyncIterator",l=s.toStringTag||"@@toStringTag";function h(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{h({},"")}catch(e){h=function(e,t,n){return e[t]=n}}function d(e,t,n,r){var o=t&&t.prototype instanceof w?t:w,i=Object.create(o.prototype),s=new D(r||[]);return a(i,"_invoke",{value:F(e,n,s)}),i}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=d;var g="suspendedStart",m="suspendedYield",f="executing",v="completed",b={};function w(){}function k(){}function x(){}var y={};h(y,c,(function(){return this}));var C=Object.getPrototypeOf,S=C&&C(C(M([])));S&&S!==n&&o.call(S,c)&&(y=S);var P=x.prototype=w.prototype=Object.create(y);function A(e){["next","throw","return"].forEach((function(t){h(e,t,(function(e){return this._invoke(t,e)}))}))}function E(e,t){function n(i,a,s,c){var u=p(e[i],e,a);if("throw"!==u.type){var l=u.arg,h=l.value;return h&&"object"==r(h)&&o.call(h,"__await")?t.resolve(h.__await).then((function(e){n("next",e,s,c)}),(function(e){n("throw",e,s,c)})):t.resolve(h).then((function(e){l.value=e,s(l)}),(function(e){return n("throw",e,s,c)}))}c(u.arg)}var i;a(this,"_invoke",{value:function(e,r){function o(){return new t((function(t,o){n(e,r,t,o)}))}return i=i?i.then(o,o):o()}})}function F(t,n,r){var o=g;return function(i,a){if(o===f)throw Error("Generator is already running");if(o===v){if("throw"===i)throw a;return{value:e,done:!0}}for(r.method=i,r.arg=a;;){var s=r.delegate;if(s){var c=O(s,r);if(c){if(c===b)continue;return c}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(o===g)throw o=v,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);o=f;var u=p(t,n,r);if("normal"===u.type){if(o=r.done?v:m,u.arg===b)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(o=v,r.method="throw",r.arg=u.arg)}}}function O(t,n){var r=n.method,o=t.iterator[r];if(o===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,O(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),b;var i=p(o,t.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,b;var a=i.arg;return a?a.done?(n[t.resultName]=a.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,b):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,b)}function I(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function D(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(I,this),this.reset(!0)}function M(t){if(t||""===t){var n=t[c];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var i=-1,a=function n(){for(;++i<t.length;)if(o.call(t,i))return n.value=t[i],n.done=!1,n;return n.value=e,n.done=!0,n};return a.next=a}}throw new TypeError(r(t)+" is not iterable")}return k.prototype=x,a(P,"constructor",{value:x,configurable:!0}),a(x,"constructor",{value:k,configurable:!0}),k.displayName=h(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===k||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,h(e,l,"GeneratorFunction")),e.prototype=Object.create(P),e},t.awrap=function(e){return{__await:e}},A(E.prototype),h(E.prototype,u,(function(){return this})),t.AsyncIterator=E,t.async=function(e,n,r,o,i){void 0===i&&(i=Promise);var a=new E(d(e,n,r,o),i);return t.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},A(P),h(P,l,"Generator"),h(P,c,(function(){return this})),h(P,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=M,D.prototype={constructor:D,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(T),!t)for(var n in this)"t"===n.charAt(0)&&o.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function r(r,o){return s.type="throw",s.arg=t,n.next=r,o&&(n.method="next",n.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var c=o.call(a,"catchLoc"),u=o.call(a,"finallyLoc");if(c&&u){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(c){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&o.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,b):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),b},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),b}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;T(n)}return o}}throw Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:M(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),b}},t}function a(e,t){if(e){if("string"==typeof e)return s(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,t):void 0}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function c(e,t,n,r,o,i,a){try{var s=e[i](a),c=s.value}catch(e){return void n(e)}s.done?t(c):Promise.resolve(c).then(r,o)}function u(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var i=e.apply(t,n);function a(e){c(i,r,o,a,s,"next",e)}function s(e){c(i,r,o,a,s,"throw",e)}a(void 0)}))}}var l,h,d,p=n(1398),g=n(9329),m=(n(5317).exec,n(6928)),f=n(9896),v=n(2535),b=n(9829),w=n(1449),k=n(4518),x=k.executeGitCommand,y=(k.getStatusText,k.ComittoError),C=k.ErrorTypes,S=k.logError,P=k.getErrorLogs,A=(k.withRetry,k.getDiagnosticInfo),E=k.updateStatusBarProgress,F=n(857),O=(n(1398).WebviewPanel,new Set),I=!1,T=null,D=null,M=null,G=null,N=[];function L(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",n={timestamp:(new Date).toISOString(),message:e,type:t};N.unshift(n),N.length>100&&(N=N.slice(0,100)),("error"===t?console.error:"warning"===t?console.warn:console.log)("[Comitto Debug] ".concat(e)),M&&M.logsProvider&&M.logsProvider.addLog(e,t)}function B(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"allgemein",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"info";if(p.workspace.getConfiguration("comitto").get("debug")){var r=(new Date).toISOString(),o="[".concat(r,"] [").concat(t,"] [").concat(n,"] ").concat(e);console.log(o),l||(l=p.window.createOutputChannel("Comitto Debug")),l.appendLine(o),"error"===n&&l.show(!0);try{var i=m.join(process.env.HOME||process.env.USERPROFILE,".comitto","logs");f.existsSync(i)||f.mkdirSync(i,{recursive:!0});var a=m.join(i,"debug_".concat((new Date).toISOString().split("T")[0],".log"));f.appendFileSync(a,o+"\n")}catch(e){console.error("Fehler beim Schreiben des Debug-Protokolls:",e)}}}function j(e){return z.apply(this,arguments)}function z(){return z=u(i().mark((function e(t){var n,r,o,a,s,c,u,l,h=arguments;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=h.length>1&&void 0!==h[1]?h[1]:"",r=!(h.length>2&&void 0!==h[2])||h[2],o=t instanceof y?t:new y(t.message||"Unbekannter Fehler",C.UNKNOWN,t,{context:n}),S(o),B("Fehler: ".concat(o.message).concat(n?" - "+n:""),"fehler","error"),console.error("Detaillierter Fehler:",o.toJSON()),!r){e.next=14;break}return a="Details anzeigen",s="Problem melden",c=n?"".concat(n,": "):"",e.next=12,p.window.showErrorMessage("".concat(c).concat(o.message),a,s);case 12:(u=e.sent)===a?K(o):u===s&&(l=encodeURIComponent("## Fehlerbeschreibung\n".concat(o.message,"\n\n")+"## Kontext\n".concat(n||"Nicht angegeben","\n\n")+"## Fehlerdetails\n```json\n".concat(JSON.stringify(o.toJSON(),null,2),"\n```\n\n")+"## Diagnostische Informationen\n```json\n".concat(JSON.stringify(A(),null,2),"\n```\n\n")+"## Schritte zur Reproduktion\n\n## Erwartetes Verhalten\n\n"+"## VSCode-Version\n".concat(p.version,"\n\n")+"## Comitto-Version\n".concat(p.extensions.getExtension("publisher.comitto").packageJSON.version||"Unbekannt")),p.env.openExternal(p.Uri.parse("https://github.com/publisher/comitto/issues/new?body=".concat(l,"&title=Fehler: ").concat(encodeURIComponent(o.message)))));case 14:case"end":return e.stop()}}),e)}))),z.apply(this,arguments)}function K(e){var t=p.window.createWebviewPanel("comittoErrorDetails","Comitto Fehlerdetails",p.ViewColumn.One,{enableScripts:!0}),n=A();t.webview.html='\n        <!DOCTYPE html>\n        <html lang="de">\n        <head>\n            <meta charset="UTF-8">\n            <meta name="viewport" content="width=device-width, initial-scale=1.0">\n            <title>Comitto Fehlerdetails</title>\n            <style>\n                body {\n                    font-family: var(--vscode-font-family);\n                    padding: 20px;\n                    color: var(--vscode-foreground);\n                }\n                h2 {\n                    margin-top: 20px;\n                    margin-bottom: 10px;\n                    border-bottom: 1px solid var(--vscode-editor-lineHighlightBorder);\n                    padding-bottom: 5px;\n                }\n                pre {\n                    background-color: var(--vscode-editor-background);\n                    padding: 15px;\n                    border-radius: 4px;\n                    overflow: auto;\n                }\n                .error-section {\n                    margin-bottom: 20px;\n                }\n                .label {\n                    font-weight: bold;\n                    margin-right: 10px;\n                }\n                .actions {\n                    margin-top: 20px;\n                }\n                button {\n                    background-color: var(--vscode-button-background);\n                    color: var(--vscode-button-foreground);\n                    border: none;\n                    padding: 8px 16px;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    margin-right: 10px;\n                }\n                button:hover {\n                    background-color: var(--vscode-button-hoverBackground);\n                }\n            </style>\n        </head>\n        <body>\n            <h1>Fehlerdetails</h1>\n            \n            <div class="error-section">\n                <h2>Fehlerinformationen</h2>\n                <div><span class="label">Typ:</span> '.concat(e.type,'</div>\n                <div><span class="label">Nachricht:</span> ').concat(e.message,'</div>\n                <div><span class="label">Zeitstempel:</span> ').concat(e.timestamp.toISOString(),'</div>\n            </div>\n            \n            <div class="error-section">\n                <h2>Fehlerkontext</h2>\n                <pre>').concat(JSON.stringify(e.context,null,2),"</pre>\n            </div>\n            \n            ").concat(e.originalError?'\n                <div class="error-section">\n                    <h2>Ursprünglicher Fehler</h2>\n                    <div><span class="label">Typ:</span> '.concat(e.originalError.name,'</div>\n                    <div><span class="label">Nachricht:</span> ').concat(e.originalError.message,"</div>\n                </div>\n            "):"",'\n            \n            <div class="error-section">\n                <h2>Stack-Trace</h2>\n                <pre>').concat(e.stack,'</pre>\n            </div>\n            \n            <div class="error-section">\n                <h2>Diagnostische Informationen</h2>\n                <pre>').concat(JSON.stringify(n,null,2),'</pre>\n            </div>\n            \n            <div class="actions">\n                <button id="copyDetails">Details kopieren</button>\n                <button id="reportIssue">Problem melden</button>\n            </div>\n            \n            <script>\n                const vscode = acquireVsCodeApi();\n                \n                document.getElementById(\'copyDetails\').addEventListener(\'click\', () => {\n                    const errorDetails = ').concat(JSON.stringify(JSON.stringify({error:e.toJSON(),diagnosticInfo:n},null,2)),";\n                    vscode.postMessage({\n                        command: 'copyToClipboard',\n                        text: errorDetails\n                    });\n                });\n                \n                document.getElementById('reportIssue').addEventListener('click', () => {\n                    vscode.postMessage({\n                        command: 'reportIssue',\n                        error: ").concat(JSON.stringify(e.toJSON()),"\n                    });\n                });\n            <\/script>\n        </body>\n        </html>\n    "),t.webview.onDidReceiveMessage((function(t){switch(t.command){case"copyToClipboard":p.env.clipboard.writeText(t.text),p.window.showInformationMessage("Fehlerdetails wurden in die Zwischenablage kopiert");break;case"reportIssue":var r=encodeURIComponent("## Fehlerbeschreibung\n".concat(e.message,"\n\n")+"## Fehlerdetails\n```json\n".concat(JSON.stringify(e.toJSON(),null,2),"\n```\n\n")+"## Diagnostische Informationen\n```json\n".concat(JSON.stringify(n,null,2),"\n```\n\n")+"## Schritte zur Reproduktion\n\n## Erwartetes Verhalten\n\n"+"## VSCode-Version\n".concat(p.version,"\n\n")+"## Comitto-Version\n".concat(p.extensions.getExtension("publisher.comitto").packageJSON.version||"Unbekannt"));p.env.openExternal(p.Uri.parse("https://github.com/publisher/comitto/issues/new?body=".concat(r,"&title=Fehler: ").concat(encodeURIComponent(e.message))))}}),void 0,void 0)}function R(){var e=P(),t=p.window.createWebviewPanel("comittoErrorLogs","Comitto Fehlerprotokolle",p.ViewColumn.One,{enableScripts:!0});t.webview.html='\n        <!DOCTYPE html>\n        <html lang="de">\n        <head>\n            <meta charset="UTF-8">\n            <meta name="viewport" content="width=device-width, initial-scale=1.0">\n            <title>Comitto Fehlerprotokolle</title>\n            <style>\n                body {\n                    font-family: var(--vscode-font-family);\n                    padding: 20px;\n                    color: var(--vscode-foreground);\n                }\n                h1 {\n                    margin-bottom: 20px;\n                }\n                .log-entry {\n                    margin-bottom: 20px;\n                    padding: 15px;\n                    background-color: var(--vscode-editor-background);\n                    border-radius: 4px;\n                    border-left: 4px solid #e74c3c;\n                }\n                .log-entry-header {\n                    display: flex;\n                    justify-content: space-between;\n                    margin-bottom: 10px;\n                }\n                .log-type {\n                    font-weight: bold;\n                    color: #e74c3c;\n                }\n                .log-timestamp {\n                    color: var(--vscode-descriptionForeground);\n                }\n                .log-message {\n                    margin-bottom: 10px;\n                }\n                .log-details-button {\n                    background: none;\n                    border: 1px solid var(--vscode-button-background);\n                    color: var(--vscode-button-background);\n                    padding: 4px 8px;\n                    border-radius: 4px;\n                    cursor: pointer;\n                }\n                .log-details {\n                    display: none;\n                    margin-top: 10px;\n                    padding: 10px;\n                    background-color: var(--vscode-editor-inactiveSelectionBackground);\n                    border-radius: 4px;\n                }\n                .log-details pre {\n                    white-space: pre-wrap;\n                    word-break: break-all;\n                }\n                .actions {\n                    margin-top: 20px;\n                }\n                button {\n                    background-color: var(--vscode-button-background);\n                    color: var(--vscode-button-foreground);\n                    border: none;\n                    padding: 8px 16px;\n                    border-radius: 4px;\n                    cursor: pointer;\n                    margin-right: 10px;\n                }\n                button:hover {\n                    background-color: var(--vscode-button-hoverBackground);\n                }\n                .no-logs {\n                    margin: 30px 0;\n                    text-align: center;\n                    font-style: italic;\n                    color: var(--vscode-descriptionForeground);\n                }\n            </style>\n        </head>\n        <body>\n            <h1>Fehlerprotokolle</h1>\n            \n            '.concat(0===e.length?'<div class="no-logs">Keine Fehlerprotokolle vorhanden</div>':e.map((function(e,t){return'\n                    <div class="log-entry">\n                        <div class="log-entry-header">\n                            <span class="log-type">'.concat(e.type,'</span>\n                            <span class="log-timestamp">').concat(e.timestamp,'</span>\n                        </div>\n                        <div class="log-message">').concat(e.message,'</div>\n                        <button class="log-details-button" onclick="toggleDetails(').concat(t,')">Details anzeigen</button>\n                        <div id="details-').concat(t,'" class="log-details">\n                            <pre>').concat(JSON.stringify(e,null,2),"</pre>\n                        </div>\n                    </div>\n                ")})).join(""),"\n            \n            <div class=\"actions\">\n                <button id=\"clearLogs\">Protokolle löschen</button>\n                <button id=\"exportLogs\">Protokolle exportieren</button>\n            </div>\n            \n            <script>\n                const vscode = acquireVsCodeApi();\n                \n                function toggleDetails(index) {\n                    const details = document.getElementById('details-' + index);\n                    const button = details.previousElementSibling;\n                    \n                    if (details.style.display === 'block') {\n                        details.style.display = 'none';\n                        button.textContent = 'Details anzeigen';\n                    } else {\n                        details.style.display = 'block';\n                        button.textContent = 'Details ausblenden';\n                    }\n                }\n                \n                document.getElementById('clearLogs').addEventListener('click', () => {\n                    vscode.postMessage({\n                        command: 'clearLogs'\n                    });\n                });\n                \n                document.getElementById('exportLogs').addEventListener('click', () => {\n                    vscode.postMessage({\n                        command: 'exportLogs',\n                        logs: ").concat(JSON.stringify(e),"\n                    });\n                });\n            <\/script>\n        </body>\n        </html>\n    "),t.webview.onDidReceiveMessage((function(e){switch(e.command){case"clearLogs":clearErrorLogs(),p.window.showInformationMessage("Fehlerprotokolle wurden gelöscht"),t.dispose();break;case"exportLogs":p.window.showSaveDialog({defaultUri:p.Uri.file(m.join(F.homedir(),"comitto_error_logs.json")),filters:{"JSON-Dateien":["json"]}}).then((function(t){t&&(f.writeFileSync(t.fsPath,JSON.stringify(e.logs,null,2)),p.window.showInformationMessage("Fehlerprotokolle wurden nach ".concat(t.fsPath," exportiert")))}))}}),void 0,void 0)}function V(){return(V=u(i().mark((function e(t){var n,r,o,a,s,c,d;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,B("Comitto-Erweiterung wird aktiviert","aktivierung","info"),L('Die Erweiterung "comitto" wird aktiviert.',"info"),W(t),n=new b.MainViewProvider(t),r=new b.LogsViewProvider(t),o=new b.DashboardProvider(t),a=new b.SimpleUIProvider(t),s=p.window.createTreeView("comitto-main",{treeDataProvider:n,showCollapseAll:!0}),c=p.window.createTreeView("comitto-logs",{treeDataProvider:r,showCollapseAll:!1}),t.subscriptions.push(s,c),M={mainProvider:n,logsProvider:r,dashboardProvider:o,simpleUIProvider:a,statusProvider:n,settingsProvider:n,quickActionsProvider:n},(h=p.window.createStatusBarItem(p.StatusBarAlignment.Left,100)).text="$(git-commit) Comitto: Initialisiere...",h.tooltip="Comitto: Klicke zum Aktivieren/Deaktivieren oder manuellen Commit",h.command="comitto.toggleAutoCommit",t.subscriptions.push(h),h.show(),e.next=20,U(t);case 20:d=e.sent,p.commands.executeCommand("setContext","workspaceHasGit",d),d?L("Git-Repository gefunden.","info"):L("Kein Git-Repository gefunden. Einige Funktionen sind deaktiviert.","warning"),w.registerCommands(t,M,h,J,Q,X,ie),t.subscriptions.push(p.commands.registerCommand("comitto.clearLogs",(function(){M.logsProvider.clearLogs(),ie("Debug-Logs gelöscht","info")}))),H(),p.workspace.getConfiguration("comitto").get("autoCommitEnabled")&&d?(J(t),h.text="$(sync~spin) Comitto: Aktiv",L("Comitto wurde automatisch aktiviert.","info")):d?h.text="$(git-commit) Comitto: Inaktiv":(h.text="$(warning) Comitto: Kein Git-Repo",h.tooltip="Kein Git-Repository im aktuellen Workspace gefunden",h.command=void 0),t.subscriptions.push(p.commands.registerCommand("comitto.showErrorLogs",R),p.commands.registerCommand("comitto.openDebugConsole",(function(){l||(l=p.window.createOutputChannel("Comitto Debug")),l.show()})),p.commands.registerCommand("comitto.diagnosticInfo",u(i().mark((function e(){var t,n;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=A(),(n=p.window.createWebviewPanel("comittoDiagnostics","Comitto Diagnose",p.ViewColumn.One,{enableScripts:!0})).webview.html='\n                    <!DOCTYPE html>\n                    <html lang="de">\n                    <head>\n                        <meta charset="UTF-8">\n                        <title>Comitto Diagnose</title>\n                        <style>\n                            body { padding: 20px; font-family: var(--vscode-font-family); }\n                            pre { background-color: var(--vscode-editor-background); padding: 15px; }\n                            button {\n                                background-color: var(--vscode-button-background);\n                                color: var(--vscode-button-foreground);\n                                border: none;\n                                padding: 8px 16px;\n                                border-radius: 4px;\n                                cursor: pointer;\n                                margin-right: 10px;\n                            }\n                        </style>\n                    </head>\n                    <body>\n                        <h1>Comitto Diagnose</h1>\n                        <pre>'.concat(JSON.stringify(t,null,2),"</pre>\n                        <button id=\"copyBtn\">In Zwischenablage kopieren</button>\n                        \n                        <script>\n                            const vscode = acquireVsCodeApi();\n                            document.getElementById('copyBtn').addEventListener('click', () => {\n                                vscode.postMessage({ command: 'copy', data: ").concat(JSON.stringify(JSON.stringify(t,null,2))," });\n                            });\n                        <\/script>\n                    </body>\n                    </html>\n                "),n.webview.onDidReceiveMessage((function(e){"copy"===e.command&&(p.env.clipboard.writeText(e.data),p.window.showInformationMessage("Diagnostische Informationen in die Zwischenablage kopiert"))}));case 4:case"end":return e.stop()}}),e)}))))),ae(t),setTimeout((function(){M&&(M.statusProvider.refresh(),M.settingsProvider.refresh(),M.quickActionsProvider.refresh())}),1500),q(t),B("Comitto-Erweiterung erfolgreich aktiviert","aktivierung","info"),e.next=38;break;case 35:e.prev=35,e.t0=e.catch(0),j(e.t0,"Fehler beim Aktivieren der Erweiterung",!0);case 38:case"end":return e.stop()}}),e,null,[[0,35]])})))).apply(this,arguments)}function U(e){return _.apply(this,arguments)}function _(){return(_=u(i().mark((function e(t){var n,r;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if((n=p.workspace.workspaceFolders)&&0!==n.length){e.next=3;break}return e.abrupt("return",!1);case 3:return r=n[0].uri.fsPath,e.prev=4,e.next=7,x("git rev-parse --is-inside-work-tree",r);case 7:return console.log("Git-Repository gefunden."),e.abrupt("return",!0);case 11:return e.prev=11,e.t0=e.catch(4),console.log("Kein Git-Repository gefunden oder Git nicht verfügbar."),e.abrupt("return",!1);case 15:case"end":return e.stop()}}),e,null,[[4,11]])})))).apply(this,arguments)}function W(e){["resources","resources/ui"].forEach((function(t){var n=p.Uri.joinPath(e.extensionUri,t).fsPath;if(!f.existsSync(n))try{f.mkdirSync(n,{recursive:!0}),console.log("Verzeichnis erstellt: ".concat(n))}catch(e){console.error("Fehler beim Erstellen des Verzeichnisses ".concat(n,":"),e)}}))}function q(e){var t=e.extension.packageJSON.version;e.globalState.get("comitto.version")!==t&&(p.window.showInformationMessage("Comitto v".concat(t," wurde aktiviert! Konfigurieren Sie es über die Seitenleiste."),"Seitenleiste öffnen","Changelog anzeigen").then((function(t){"Seitenleiste öffnen"===t?p.commands.executeCommand("workbench.view.extension.comitto-sidebar"):"Changelog anzeigen"===t&&(e.globalState.get("comitto.hasShownWelcome",!1)||p.window.showInformationMessage("Comitto wurde aktiviert! Öffnen Sie die Comitto-Seitenleiste über das Icon in der Activity Bar.","Öffnen","Nicht mehr anzeigen").then((function(t){"Öffnen"===t?p.commands.executeCommand("comitto-sidebar.focus"):"Nicht mehr anzeigen"===t&&e.globalState.update("comitto.hasShownWelcome",!0)})))})),e.globalState.update("comitto.version",t)),p.workspace.getConfiguration("comitto").get("uiSettings").showNotifications&&setTimeout((function(){p.window.activeTextEditor&&p.window.showInformationMessage("Comitto ist bereit! Verwenden Sie die Seitenleiste oder das $(git-commit) Symbol in der Statusleiste.","Einstellungen öffnen","Dashboard anzeigen").then((function(e){"Einstellungen öffnen"===e?p.commands.executeCommand("comitto.openSettings"):"Dashboard anzeigen"===e&&p.commands.executeCommand("comitto.showDashboard")}))}),2e3)}function H(){var e=p.workspace.workspaceFolders;if(e){var t=p.workspace.getConfiguration("comitto").get("gitSettings");if(t.useGitignore){var n=t.repositoryPath||e[0].uri.fsPath,r=m.join(n,".gitignore");try{if(f.existsSync(r)){var o=f.readFileSync(r,"utf8");D=v().add(o)}else D=null}catch(e){console.error("Fehler beim Laden der .gitignore-Datei:",e),D=null}}else D=null}}function J(e){if(Q(),p.workspace.workspaceFolders){var t=p.workspace.getConfiguration("comitto").get("triggerRules"),n=t.filePatterns||["**/*"];(d=p.workspace.createFileSystemWatcher(1===n.length?n[0]:"{"+n.join(",")+"}")).onDidChange((function(e){$(e.fsPath)||(O.add(e.fsPath),Y())})),d.onDidCreate((function(e){$(e.fsPath)||(O.add(e.fsPath),Y())})),d.onDidDelete((function(e){$(e.fsPath)||(O.add(e.fsPath),Y())})),e.subscriptions.push(d),t.onInterval&&Z(t.intervalMinutes)}else p.window.showErrorMessage("Comitto: Kein Workspace gefunden.")}function Z(e){G&&(clearInterval(G),G=null),e>0&&(G=setInterval((function(){p.workspace.getConfiguration("comitto").get("autoCommitEnabled")&&O.size>0&&(p.workspace.getConfiguration("comitto").get("notifications").onTriggerFired&&ie("Intervall-Trigger aktiviert. Prüfe auf ausstehende Commits...","info"),Y())}),60*e*1e3))}function Q(){d&&(d.dispose(),d=null),G&&(clearInterval(G),G=null),O.clear()}function $(e){if(e.includes("node_modules")||e.includes(".git"))return!0;if(D){var t=p.workspace.workspaceFolders;if(t){var n=m.relative(t[0].uri.fsPath,e).replace(/\\/g,"/");return D.ignores(n)}}return!1}function Y(){if(!I){var e=p.workspace.getConfiguration("comitto").get("triggerRules"),t=e.specificFiles||[],n=t.length>0&&t.some((function(e){return(t=O,function(e){if(Array.isArray(e))return s(e)}(t)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||a(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).some((function(t){return t.includes(e)}));var t})),r=O.size>=(e.minChangeCount||10),o=O.size>=(e.fileCountThreshold||3),i=60*(e.timeThresholdMinutes||30)*1e3;(!T||Date.now()-T.getTime()>=i)&&(n||r||o)&&X()}}function X(){return ee.apply(this,arguments)}function ee(){return ee=u(i().mark((function e(){var t,n,r,o,a,s,c,u,l,d,g,m,f,v,b,k,y,C,S,P,A=arguments;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=A.length>0&&void 0!==A[0]&&A[0],n=A.length>1&&void 0!==A[1]?A[1]:0,r=3,e.prev=3,I=!0,E(h,"Commit vorbereiten",5,"Starte Prozess"),o=p.workspace.workspaceFolders){e.next=9;break}throw new Error("Kein Workspace gefunden.");case 9:return a=p.workspace.getConfiguration("comitto"),s=a.get("gitSettings"),c=s.repositoryPath||o[0].uri.fsPath,e.prev=12,e.prev=13,e.next=16,x("git rev-parse --is-inside-work-tree",c);case 16:E(h,"Commit vorbereiten",10,"Git-Repo geprüft"),e.next=22;break;case 19:throw e.prev=19,e.t0=e.catch(13),new Error("Kein Git-Repository gefunden. Bitte initialisieren Sie zuerst ein Git-Repository.");case 22:return e.prev=22,E(h,"Änderungen stagen",20,s.stageMode),e.next=26,re(s.stageMode);case 26:E(h,"Staging abgeschlossen",30),e.next=36;break;case 29:return e.prev=29,e.t1=e.catch(22),console.error("Fehler beim Stagen der Änderungen:",e.t1),ie("Fehler beim Stagen: ".concat(e.t1.message,". Versuche Fallback-Methode..."),"warning"),e.next=35,x("git add .",c);case 35:E(h,"Staging (Fallback)",30);case 36:return u="",e.prev=37,E(h,"Status abrufen",35),e.next=41,x("git status --porcelain",c);case 41:u=e.sent,e.next=48;break;case 44:e.prev=44,e.t2=e.catch(37),console.warn("Fehler bei git status, versuche trotzdem fortzufahren:",e.t2),u="Fehler beim Abrufen des Status. Commit wird trotzdem versucht.";case 48:if(u.trim()||t){e.next=55;break}return I=!1,E(h,"Keine Änderungen",100),O.clear(),e.abrupt("return");case 55:if(u.trim()||!t){e.next=57;break}throw new Error("Keine Änderungen zum Committen gefunden.");case 57:return l="",e.prev=58,E(h,"Diff berechnen",40),e.next=62,x("git diff --cached",c);case 62:l=e.sent,E(h,"Diff berechnet",50),e.next=82;break;case 66:return e.prev=66,e.t3=e.catch(58),console.warn("Fehler beim Abrufen des Diffs, versuche alternative Methode:",e.t3),e.prev=69,E(h,"Diff (Alternative)",45),e.next=73,x("git diff --cached --name-status",c);case 73:d=e.sent,l="Diff konnte nicht vollständig abgerufen werden.\nGeänderte Dateien:\n"+d,E(h,"Diff (Alternativ) berechnet",50),e.next=82;break;case 78:e.prev=78,e.t4=e.catch(69),console.error("Auch die Dateiliste konnte nicht abgerufen werden:",e.t4),l="Diff-Inhalt konnte nicht abgerufen werden. Commit wird trotzdem versucht.";case 82:return g="",E(h,"Generiere Commit-Nachricht",50),e.prev=84,e.next=87,w.generateCommitMessage(u,l,se,ue,he);case 87:g=e.sent,E(h,"Commit-Nachricht generiert",75),e.next=102;break;case 91:e.prev=91,e.t5=e.catch(84),console.error("Fehler bei der Commit-Nachricht-Generierung:",e.t5),E(h,"Fallback-Nachricht",70),m=new Date,f="".concat(m.getFullYear(),"-").concat(String(m.getMonth()+1).padStart(2,"0"),"-").concat(String(m.getDate()).padStart(2,"0")),v="".concat(String(m.getHours()).padStart(2,"0"),":").concat(String(m.getMinutes()).padStart(2,"0")),b=a.get("gitSettings"),k=b.commitMessageLanguage||"en",y=b.commitMessageStyle||"conventional",g="de"===k?"conventional"===y?"chore: Automatischer Commit vom ".concat(f," ").concat(v):"💾 Automatischer Commit vom ".concat(f," ").concat(v):"conventional"===y?"chore: automatic commit ".concat(f," ").concat(v):"💾 Automatic commit ".concat(f," ").concat(v);case 102:if(g&&0!==g.trim().length||(g="chore: auto commit"),e.prev=103,!s.branch){e.next=139;break}return E(h,"Branch prüfen",80),e.next=108,x("git rev-parse --abbrev-ref HEAD",c);case 108:if(e.sent.trim()===s.branch){e.next=139;break}return e.next=112,x("git branch",c);case 112:if(!e.sent.includes(s.branch)){e.next=128;break}return e.prev=115,E(h,"Wechsle zu ".concat(s.branch),82),e.next=119,x("git checkout ".concat(s.branch),c);case 119:ie("Zu Branch '".concat(s.branch,"' gewechselt."),"info"),e.next=126;break;case 122:e.prev=122,e.t6=e.catch(115),E(h,"Branch-Wechsel fehlgeschlagen",-1),ie("Fehler beim Wechseln zu Branch '".concat(s.branch,"': ").concat(e.t6.message,". Fortfahren mit aktuellem Branch."),"warning");case 126:e.next=139;break;case 128:return e.prev=128,E(h,"Erstelle Branch ".concat(s.branch),82),e.next=132,x("git checkout -b ".concat(s.branch),c);case 132:ie("Branch '".concat(s.branch,"' erstellt und ausgecheckt."),"info"),e.next=139;break;case 135:e.prev=135,e.t7=e.catch(128),E(h,"Branch-Erstellung fehlgeschlagen",-1),ie("Fehler beim Erstellen des Branches '".concat(s.branch,"': ").concat(e.t7.message,". Fortfahren mit aktuellem Branch."),"warning");case 139:e.next=145;break;case 141:e.prev=141,e.t8=e.catch(103),console.error("Fehler beim Branch-Handling:",e.t8),ie("Fehler bei der Branch-Verwaltung: ".concat(e.t8.message,". Fortfahren mit aktuellem Branch."),"warning");case 145:return E(h,"Führe Commit aus",90),e.prev=146,C=g.replace(/"/g,'\\"').replace(/`/g,"'"),e.next=150,x('git commit -m "'.concat(C,'"'),c);case 150:E(h,"Commit abgeschlossen",95),S=a.get("notifications"),!t&&S.onCommit?ie("Automatischer Commit durchgeführt: ".concat(g),"info"):t&&ie("Manueller Commit durchgeführt: ".concat(g),"info"),T=new Date,O.clear(),e.next=175;break;case 157:if(e.prev=157,e.t9=e.catch(146),console.error("Commit fehlgeschlagen:",e.t9),!e.t9.message.includes("nothing to commit")){e.next=166;break}return E(h,"Keine Änderungen",100),ie("Keine Änderungen zum Committen gefunden.","info"),I=!1,O.clear(),e.abrupt("return");case 166:if(!(n<r)){e.next=173;break}return E(h,"Commit fehlgeschlagen, neuer Versuch",85),ie("Commit fehlgeschlagen: ".concat(e.t9.message,". Versuche es erneut..."),"warning"),setTimeout((function(){X(t,n+1)}),2e3),e.abrupt("return");case 173:throw E(h,"Commit endgültig fehlgeschlagen",-1),new Error("Commit fehlgeschlagen nach ".concat(r," Versuchen: ").concat(e.t9.message));case 175:if(!s.autoPush){e.next=190;break}return e.prev=176,E(h,"Push ausführen",97),e.next=180,te(c);case 180:E(h,"Push abgeschlossen",100),e.next=188;break;case 183:e.prev=183,e.t10=e.catch(176),console.error("Push fehlgeschlagen:",e.t10),E(h,"Push fehlgeschlagen",-1),ie("Push fehlgeschlagen: ".concat(e.t10.message),"error");case 188:e.next=191;break;case 190:E(h,"Vorgang abgeschlossen",100);case 191:e.next=202;break;case 193:throw e.prev=193,e.t11=e.catch(12),console.error("Git-Befehl fehlgeschlagen:",e.t11),E(h,"Git-Fehler",-1),(P=e.t11.message).includes("fatal: not a git repository")?P="Dieses Verzeichnis ist kein Git-Repository. Bitte initialisieren Sie zuerst ein Git-Repository.":P.includes("fatal: unable to access")?P="Fehler beim Zugriff auf das Remote-Repository. Bitte prüfen Sie Ihre Netzwerkverbindung und Zugangsrechte.":(P.includes("maxBuffer")||P.includes("zu groß"))&&(P="Zu viele oder zu große Änderungen für die automatische Verarbeitung. Bitte führen Sie einen manuellen Commit durch oder reduzieren Sie die Anzahl der Änderungen."),a.get("notifications").onError&&ie("Git-Befehl fehlgeschlagen: ".concat(P),"error"),e.t11;case 202:e.next=210;break;case 204:e.prev=204,e.t12=e.catch(3),console.error("Comitto Fehler:",e.t12),E(h,"Fehler",-1),p.workspace.getConfiguration("comitto").get("notifications").onError&&ie("Comitto Fehler: ".concat(e.t12.message),"error");case 210:return e.prev=210,I=!1,e.finish(210);case 213:case"end":return e.stop()}}),e,null,[[3,204,210,213],[12,193],[13,19],[22,29],[37,44],[58,66],[69,78],[84,91],[103,141],[115,122],[128,135],[146,157],[176,183]])}))),ee.apply(this,arguments)}function te(e){return ne.apply(this,arguments)}function ne(){return(ne=u(i().mark((function e(t){var n,r,o,a,s,c,u,l,d,g,m,f;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=p.workspace.getConfiguration("comitto"),r=n.get("notifications"),o=2,h.text="$(sync~spin) Comitto: Pushe Änderungen...",e.prev=4,e.next=7,x("git rev-parse --abbrev-ref HEAD",t);case 7:a=e.sent.trim(),e.next=13;break;case 10:throw e.prev=10,e.t0=e.catch(4),new Error("Fehler beim Ermitteln des aktuellen Branches: ".concat(e.t0.message));case 13:s=n.get("gitSettings"),c=s.pushOptions||"",u="git push origin ".concat(a," ").concat(c).trim(),l=!1,d=null,g=i().mark((function e(n){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,x(u,t);case 3:return l=!0,e.abrupt("return",0);case 7:if(e.prev=7,e.t0=e.catch(0),d=e.t0,console.warn("Push-Versuch ".concat(n+1," fehlgeschlagen:"),e.t0),!(e.t0.message.includes("Connection timed out")||e.t0.message.includes("Could not resolve host")||e.t0.message.includes("failed to push some refs"))){e.next=16;break}if(!(n<o)){e.next=16;break}return e.next=15,new Promise((function(e){return setTimeout(e,2e3*(n+1))}));case 15:return e.abrupt("return",1);case 16:return e.abrupt("return",0);case 17:case"end":return e.stop()}}),e,null,[[0,7]])})),f=0;case 20:if(!(f<=o)){e.next=30;break}return e.delegateYield(g(f),"t1",22);case 22:if(0!==(m=e.t1)){e.next=25;break}return e.abrupt("break",30);case 25:if(1!==m){e.next=27;break}return e.abrupt("continue",27);case 27:f++,e.next=20;break;case 30:if(!l){e.next=34;break}r.onPush&&ie("Änderungen wurden zu origin/".concat(a," gepusht."),"info"),e.next=51;break;case 34:if(!d){e.next=51;break}if(!(d.message.includes("failed to push some refs")||d.message.includes("rejected")||d.message.includes("non-fast-forward"))){e.next=50;break}return e.prev=36,ie("Push fehlgeschlagen. Versuche Pull...","warning"),e.next=40,x("git pull origin ".concat(a),t);case 40:return e.next=42,x(u,t);case 42:r.onPush&&ie("Pull & Push erfolgreich: Änderungen wurden zu origin/".concat(a," gepusht."),"info"),e.next=48;break;case 45:throw e.prev=45,e.t2=e.catch(36),new Error("Push fehlgeschlagen und Pull konnte nicht ausgeführt werden: ".concat(e.t2.message));case 48:e.next=51;break;case 50:throw d;case 51:case"end":return e.stop()}}),e,null,[[4,10],[36,45]])})))).apply(this,arguments)}function re(e){return oe.apply(this,arguments)}function oe(){return(oe=u(i().mark((function e(t){var n,r,a,s,c,u,l,h,d,g,m,f,v,w,k;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=p.workspace.workspaceFolders){e.next=3;break}throw new Error("Kein Workspace gefunden.");case 3:if(r=p.workspace.getConfiguration("comitto"),a=r.get("gitSettings"),s=a.repositoryPath||n[0].uri.fsPath,"prompt"!==t){e.next=36;break}return e.next=9,x("git status --porcelain",s);case 9:if((c=e.sent).trim()){e.next=12;break}throw new Error("Keine Änderungen zum Stagen gefunden.");case 12:return u=c.split("\n").filter((function(e){return e.trim().length>0})).map((function(e){return{status:e.substring(0,2).trim(),filePath:e.substring(3).trim()}})),e.next=15,p.window.showQuickPick(u.map((function(e){return{label:e.filePath,description:b.getStatusDescription(e.status),picked:!0}})),{canPickMany:!0,placeHolder:"Dateien zum Stagen auswählen"});case 15:if((l=e.sent)&&0!==l.length){e.next=18;break}throw new Error("Keine Dateien ausgewählt.");case 18:h=o(l),e.prev=19,h.s();case 21:if((d=h.n()).done){e.next=27;break}return g=d.value,e.next=25,x('git add "'.concat(g.label,'"'),s);case 25:e.next=21;break;case 27:e.next=32;break;case 29:e.prev=29,e.t0=e.catch(19),h.e(e.t0);case 32:return e.prev=32,h.f(),e.finish(32);case 35:return e.abrupt("return");case 36:if("specific"!==t){e.next=63;break}m=a.specificStagingPatterns||["**/*.js","**/*.ts","**/*.json"],f=o(m),e.prev=39,f.s();case 41:if((v=f.n()).done){e.next=54;break}return w=v.value,e.prev=43,k=w.replace(/\\/g,"/"),e.next=47,x('git add "'.concat(k,'"'),s);case 47:e.next=52;break;case 49:e.prev=49,e.t1=e.catch(43),console.error("Fehler beim Stagen von Muster ".concat(w,":"),e.t1);case 52:e.next=41;break;case 54:e.next=59;break;case 56:e.prev=56,e.t2=e.catch(39),f.e(e.t2);case 59:return e.prev=59,f.f(),e.finish(59);case 62:return e.abrupt("return");case 63:return e.next=65,x("git add .",s);case 65:case"end":return e.stop()}}),e,null,[[19,29,32,35],[39,56,59,62],[43,49]])})))).apply(this,arguments)}function ie(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"info",n=p.workspace.getConfiguration("comitto"),r=n.get("uiSettings");if(n.get("debug"),L(e,t),r&&r.showNotifications)switch(t){case"info":default:p.window.showInformationMessage(e);break;case"warning":p.window.showWarningMessage(e);break;case"error":p.window.showErrorMessage(e)}if("error"===t&&h){var o=h.text;h.text="$(error) Comitto: Fehler",setTimeout((function(){h&&(h.text=o)}),3e3)}}function ae(e){setInterval(u(i().mark((function t(){var n,r,o,a,s;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(t.prev=0,(n=p.workspace.getConfiguration("comitto")).get("autoCommitEnabled")){t.next=4;break}return t.abrupt("return");case 4:return r=n.get("debug")||{},t.next=7,U(e);case 7:if(t.sent){t.next=11;break}return L("Hintergrundprüfung: Kein aktives Git-Repository gefunden.","warning"),t.abrupt("return");case 11:if(o=p.workspace.workspaceFolders){t.next=14;break}return t.abrupt("return");case 14:return a=o[0].uri.fsPath,t.next=17,x("git status --porcelain",a);case 17:(s=t.sent).trim()&&0===O.size&&(L("Hintergrundprüfung: Nicht erfasste Änderungen gefunden.","info"),s.split("\n").filter((function(e){return e.trim().length>0})).forEach((function(e){var t=e.substring(3).trim();if(t&&!$(t)){var n=m.resolve(a,t);O.add(n)}})),r.extendedLogging&&L("Hintergrund-Synchronisierung: ".concat(O.size," Dateien werden nun überwacht."),"info"),n.get("autoCommitEnabled")&&Y()),t.next=25;break;case 21:t.prev=21,t.t0=t.catch(0),console.error("Fehler bei der Hintergrundüberwachung:",t.t0),L("Fehler bei der Hintergrundüberwachung: ".concat(t.t0.message),"error");case 25:case"end":return t.stop()}}),t,null,[[0,21]])}))),6e5),setInterval((function(){try{var t=p.workspace.getConfiguration("comitto");if(!t.get("autoCommitEnabled"))return;var n=t.get("debug")||{};!d&&t.get("autoCommitEnabled")&&(L("Gesundheitscheck: FileWatcher ist nicht aktiv. Starte neu...","warning"),J(e));var r=t.get("triggerRules");r.onInterval&&!G&&t.get("autoCommitEnabled")&&(L("Gesundheitscheck: Interval-Timer ist nicht aktiv. Starte neu...","warning"),Z(r.intervalMinutes)),n.extendedLogging&&L("Gesundheitscheck durchgeführt.","info")}catch(e){console.error("Fehler beim Gesundheitscheck:",e),L("Fehler beim Gesundheitscheck: ".concat(e.message),"error")}}),18e5)}function se(e){return ce.apply(this,arguments)}function ce(){return(ce=u(i().mark((function e(t){var n,r,o,a,s,c,u,l,d,m,f,v,b,w,k,x;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=p.workspace.getConfiguration("comitto"),r=n.get("ollama").endpoint||"http://localhost:11434/api/generate",o=n.get("ollama")||{},a=o.model,s=n.get("ollama-model"),a||!s){e.next=13;break}return a=s,o.model=s,e.next=10,n.update("ollama",o,p.ConfigurationTarget.Global);case 10:return e.next=12,n.update("ollama-model",void 0,p.ConfigurationTarget.Global);case 12:ie("Korrektur der Ollama-Modell-Konfiguration durchgeführt.","info");case 13:return a=a||"granite3.3:2b",e.prev=14,E(h,"Ollama generiert",0,"Modell: ".concat(a)),ie("KI-Nachricht wird mit Ollama (".concat(a,") generiert..."),"info",!1),console.log("Verwende Ollama-Modell: ".concat(a," auf ").concat(r)),c=Date.now(),u=r.endsWith("/api/generate")?r:r.endsWith("/")?"".concat(r,"api/generate"):"".concat(r,"/api/generate"),e.next=22,g.post(u,{model:a,prompt:t,stream:!1,options:{temperature:.3,num_predict:100}});case 22:if(l=e.sent,d=((Date.now()-c)/1e3).toFixed(2),E(h,"Ollama generiert",100,"Fertig in ".concat(d,"s")),!l.data||"string"!=typeof l.data.response){e.next=34;break}return m=l.data.response.trim(),f=l.data.eval_duration?(l.data.eval_duration/1e9).toFixed(2)+"s":"n/a",v=l.data.total_duration?(l.data.total_duration/1e9).toFixed(2)+"s":d+"s",console.log("Ollama-Antwort erhalten. Eval-Zeit: ".concat(f,", Gesamt-Zeit: ").concat(v)),ie("Commit-Nachricht mit Ollama generiert (".concat(v,")."),"info",!1),e.abrupt("return",m);case 34:throw new Error("Unerwartetes Antwortformat von Ollama");case 35:e.next=45;break;case 37:return e.prev=37,e.t0=e.catch(14),console.error("Ollama API-Fehler:",(null===(b=e.t0.response)||void 0===b?void 0:b.data)||e.t0.message),E(h,"Ollama-Fehler",-1),x="Fehler bei der Kommunikation mit Ollama","ECONNREFUSED"===e.t0.code?x="Verbindung zu Ollama fehlgeschlagen. Bitte stellen Sie sicher, dass Ollama läuft und erreichbar ist.":"ETIMEDOUT"===e.t0.code||"TIMEOUT"===e.t0.code?x="Zeitüberschreitung bei der Anfrage an Ollama. Bitte prüfen Sie die Verbindung oder versuchen Sie ein kleineres Modell.":404===(null===(w=e.t0.response)||void 0===w?void 0:w.status)?(x='Das Ollama-Modell "'.concat(a,'" wurde nicht gefunden. Bitte stellen Sie sicher, dass das Modell installiert ist.'),ie('Modell "'.concat(a,'" nicht gefunden. Installieren Sie es mit: ollama pull ').concat(a),"warning")):x=null!==(k=e.t0.response)&&void 0!==k&&k.data?"Ollama-Fehler: ".concat(e.t0.response.data.error||JSON.stringify(e.t0.response.data)):"Ollama-Fehler: ".concat(e.t0.message),ie(x,"error"),e.abrupt("return","chore: Änderungen commited");case 45:case"end":return e.stop()}}),e,null,[[14,37]])})))).apply(this,arguments)}function ue(e){return le.apply(this,arguments)}function le(){return(le=u(i().mark((function e(t){var n,r,o,a,s;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=p.workspace.getConfiguration("comitto"),r=n.get("openai.apiKey"),o=n.get("openai.model")||"gpt-3.5-turbo",r){e.next=5;break}throw new Error("OpenAI API-Schlüssel nicht konfiguriert");case 5:return e.prev=5,E(h,"OpenAI generiert",20,"Modell: ".concat(o)),ie("KI-Nachricht wird mit OpenAI (".concat(o,") generiert..."),"info",!1),e.next=10,g.post("https://api.openai.com/v1/chat/completions",{model:o,messages:[{role:"system",content:"Du bist ein Assistent, der hilft, präzise Git-Commit-Nachrichten zu erstellen."},{role:"user",content:t}],temperature:.3,max_tokens:100},{headers:{Authorization:"Bearer ".concat(r),"Content-Type":"application/json"}});case 10:if(a=e.sent,E(h,"OpenAI generiert",100,"Fertig"),!(a.data&&a.data.choices&&a.data.choices[0])){e.next=16;break}return e.abrupt("return",a.data.choices[0].message.content.trim().replace(/^["']|["']$/g,"").replace(/\n/g," "));case 16:throw new Error("Unerwartetes Antwortformat von OpenAI");case 17:e.next=24;break;case 19:throw e.prev=19,e.t0=e.catch(5),E(h,"OpenAI-Fehler",-1),console.error("OpenAI API-Fehler:",(null===(s=e.t0.response)||void 0===s?void 0:s.data)||e.t0.message),new Error("Fehler bei der Kommunikation mit OpenAI: ".concat(e.t0.message));case 24:case"end":return e.stop()}}),e,null,[[5,19]])})))).apply(this,arguments)}function he(e){return de.apply(this,arguments)}function de(){return(de=u(i().mark((function e(t){var n,r,o,a,s;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=p.workspace.getConfiguration("comitto"),r=n.get("anthropic.apiKey"),o=n.get("anthropic.model")||"claude-2",r){e.next=5;break}throw new Error("Anthropic API-Schlüssel nicht konfiguriert");case 5:return e.prev=5,E(h,"Anthropic generiert",20,"Modell: ".concat(o)),ie("KI-Nachricht wird mit Anthropic (".concat(o,") generiert..."),"info",!1),e.next=10,g.post("https://api.anthropic.com/v1/messages",{model:o,max_tokens:100,temperature:.3,system:"Du bist ein Assistent, der hilft, präzise Git-Commit-Nachrichten zu erstellen.",messages:[{role:"user",content:t}]},{headers:{"x-api-key":r,"anthropic-version":"2023-06-01","Content-Type":"application/json"}});case 10:if(a=e.sent,E(h,"Anthropic generiert",100,"Fertig"),!(a.data&&a.data.content&&a.data.content[0])){e.next=16;break}return e.abrupt("return",a.data.content[0].text.trim().replace(/^["']|["']$/g,"").replace(/\n/g," "));case 16:throw new Error("Unerwartetes Antwortformat von Anthropic");case 17:e.next=24;break;case 19:throw e.prev=19,e.t0=e.catch(5),E(h,"Anthropic-Fehler",-1),console.error("Anthropic API-Fehler:",(null===(s=e.t0.response)||void 0===s?void 0:s.data)||e.t0.message),new Error("Fehler bei der Kommunikation mit Anthropic: ".concat(e.t0.message));case 24:case"end":return e.stop()}}),e,null,[[5,19]])})))).apply(this,arguments)}e.exports={activate:function(e){return V.apply(this,arguments)},deactivate:function(){G&&clearInterval(G),h&&h.dispose(),d&&d.dispose(),l&&l.dispose()},generateWithOllama:se,generateWithOpenAI:ue,generateWithAnthropic:he}},857:e=>{"use strict";e.exports=require("os")},1398:e=>{"use strict";e.exports=require("vscode")},1449:(e,t,n)=>{function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t,n){return(t=function(e){var t=function(e){if("object"!=r(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=r(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==r(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(){"use strict";s=function(){return t};var e,t={},n=Object.prototype,o=n.hasOwnProperty,i=Object.defineProperty||function(e,t,n){e[t]=n.value},a="function"==typeof Symbol?Symbol:{},c=a.iterator||"@@iterator",u=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function h(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{h({},"")}catch(e){h=function(e,t,n){return e[t]=n}}function d(e,t,n,r){var o=t&&t.prototype instanceof w?t:w,a=Object.create(o.prototype),s=new D(r||[]);return i(a,"_invoke",{value:F(e,n,s)}),a}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=d;var g="suspendedStart",m="suspendedYield",f="executing",v="completed",b={};function w(){}function k(){}function x(){}var y={};h(y,c,(function(){return this}));var C=Object.getPrototypeOf,S=C&&C(C(M([])));S&&S!==n&&o.call(S,c)&&(y=S);var P=x.prototype=w.prototype=Object.create(y);function A(e){["next","throw","return"].forEach((function(t){h(e,t,(function(e){return this._invoke(t,e)}))}))}function E(e,t){function n(i,a,s,c){var u=p(e[i],e,a);if("throw"!==u.type){var l=u.arg,h=l.value;return h&&"object"==r(h)&&o.call(h,"__await")?t.resolve(h.__await).then((function(e){n("next",e,s,c)}),(function(e){n("throw",e,s,c)})):t.resolve(h).then((function(e){l.value=e,s(l)}),(function(e){return n("throw",e,s,c)}))}c(u.arg)}var a;i(this,"_invoke",{value:function(e,r){function o(){return new t((function(t,o){n(e,r,t,o)}))}return a=a?a.then(o,o):o()}})}function F(t,n,r){var o=g;return function(i,a){if(o===f)throw Error("Generator is already running");if(o===v){if("throw"===i)throw a;return{value:e,done:!0}}for(r.method=i,r.arg=a;;){var s=r.delegate;if(s){var c=O(s,r);if(c){if(c===b)continue;return c}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(o===g)throw o=v,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);o=f;var u=p(t,n,r);if("normal"===u.type){if(o=r.done?v:m,u.arg===b)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(o=v,r.method="throw",r.arg=u.arg)}}}function O(t,n){var r=n.method,o=t.iterator[r];if(o===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,O(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),b;var i=p(o,t.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,b;var a=i.arg;return a?a.done?(n[t.resultName]=a.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,b):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,b)}function I(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function D(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(I,this),this.reset(!0)}function M(t){if(t||""===t){var n=t[c];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var i=-1,a=function n(){for(;++i<t.length;)if(o.call(t,i))return n.value=t[i],n.done=!1,n;return n.value=e,n.done=!0,n};return a.next=a}}throw new TypeError(r(t)+" is not iterable")}return k.prototype=x,i(P,"constructor",{value:x,configurable:!0}),i(x,"constructor",{value:k,configurable:!0}),k.displayName=h(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===k||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,h(e,l,"GeneratorFunction")),e.prototype=Object.create(P),e},t.awrap=function(e){return{__await:e}},A(E.prototype),h(E.prototype,u,(function(){return this})),t.AsyncIterator=E,t.async=function(e,n,r,o,i){void 0===i&&(i=Promise);var a=new E(d(e,n,r,o),i);return t.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},A(P),h(P,l,"Generator"),h(P,c,(function(){return this})),h(P,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=M,D.prototype={constructor:D,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(T),!t)for(var n in this)"t"===n.charAt(0)&&o.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function r(r,o){return s.type="throw",s.arg=t,n.next=r,o&&(n.method="next",n.arg=e),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],s=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var c=o.call(a,"catchLoc"),u=o.call(a,"finallyLoc");if(c&&u){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(c){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&o.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,b):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),b},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),b}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;T(n)}return o}}throw Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:M(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),b}},t}function c(e,t,n,r,o,i,a){try{var s=e[i](a),c=s.value}catch(e){return void n(e)}s.done?t(c):Promise.resolve(c).then(r,o)}function u(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var i=e.apply(t,n);function a(e){c(i,r,o,a,s,"next",e)}function s(e){c(i,r,o,a,s,"throw",e)}a(void 0)}))}}var l=n(1398),h=(n(9829),n(4518)),d=h.executeGitCommand,p=h.getStatusText,g=h.updateStatusBarProgress,m=(n(9329),n(6928)),f=null;function v(){return(v=u(s().mark((function e(t,n,r,o,i){var a,c,u,h,d,g,m;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.prev=0,a=l.workspace.getConfiguration("comitto"),c=a.get("aiProvider"),u=a.get("gitSettings"),h=t.split("\n").filter((function(e){return e.trim().length>0})).map((function(e){var t=e.substring(0,2).trim(),n=e.substring(3).trim();return"".concat(p(t)," ").concat(n)})).join("\n"),d=(d=a.get("promptTemplate")||"Generiere eine Commit-Nachricht basierend auf folgenden Änderungen:").replace("{changes}",h),g=u.commitMessageLanguage||"de",d.includes(g)||(d+="\nDie Commit-Nachricht soll auf ".concat(g.toUpperCase()," sein.")),"conventional"!==(m=u.commitMessageStyle||"conventional")||d.includes("conventional")?"gitmoji"!==m||d.includes("gitmoji")?"angular"!==m||d.includes("angular")?"atom"!==m||d.includes("atom")?"simple"!==m||d.includes("simple")||(d+="\nVerwende einfache, beschreibende Commit-Nachrichten ohne spezifisches Format."):d+="\nVerwende das Atom Editor Commit Format: :emoji: description.":d+="\nVerwende das Angular Commit Convention Format mit type(scope): description.":d+="\nVerwende Gitmoji-Emojis am Anfang der Commit-Nachricht (🎉, 🐛, 📚, 💄, etc.).":d+="\nVerwende das Conventional Commits Format (feat, fix, docs, style, etc.).",e.t0=c,e.next="ollama"===e.t0?14:"openai"===e.t0?19:"anthropic"===e.t0?24:29;break;case 14:if("function"==typeof r){e.next=16;break}throw new Error("generateWithOllama ist nicht definiert");case 16:return e.next=18,r(d);case 18:case 23:case 28:return e.abrupt("return",e.sent);case 19:if("function"==typeof o){e.next=21;break}throw new Error("generateWithOpenAI ist nicht definiert");case 21:return e.next=23,o(d);case 24:if("function"==typeof i){e.next=26;break}throw new Error("generateWithAnthropic ist nicht definiert");case 26:return e.next=28,i(d);case 29:throw new Error("Unbekannter KI-Provider: ".concat(c));case 30:e.next=36;break;case 32:return e.prev=32,e.t1=e.catch(0),b(e.t1,"Fehler bei der Generierung der Commit-Nachricht"),e.abrupt("return","chore: auto commit (Fehler bei der Nachrichtengenerierung)");case 36:case"end":return e.stop()}}),e,null,[[0,32]])})))).apply(this,arguments)}function b(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Allgemeiner Fehler",n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];throw console.error("Fehler in commands.js (".concat(t,"):"),e),n&&l.window.showErrorMessage("Comitto Fehler: ".concat(e.message)),f&&(g(f,"Fehler",-1),setTimeout((function(){var e=l.workspace.getConfiguration("comitto").get("autoCommitEnabled");g(f,e?"Aktiv":"Inaktiv",e?100:0)}),3e3)),e}e.exports={registerCommands:function(e,t,n,r,o,a,c){f=n,e.subscriptions.push(l.commands.registerCommand("comitto.enableAutoCommit",u(s().mark((function o(){var i;return s().wrap((function(o){for(;;)switch(o.prev=o.next){case 0:return o.prev=0,i=l.workspace.getConfiguration("comitto"),o.next=4,i.update("autoCommitEnabled",!0,l.ConfigurationTarget.Global);case 4:r(e),g(n,"Aktiv",100,"Automatische Commits aktiviert"),c("Automatische Commits aktiviert","info"),console.log("Automatische Commits wurden aktiviert"),t&&(t.statusProvider.refresh(),t.settingsProvider.refresh(),t.quickActionsProvider.refresh()),o.next=14;break;case 11:o.prev=11,o.t0=o.catch(0),b(o.t0,"Fehler beim Aktivieren des Auto-Commits",!0);case 14:case"end":return o.stop()}}),o,null,[[0,11]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.disableAutoCommit",u(s().mark((function e(){var r;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,r=l.workspace.getConfiguration("comitto"),e.next=4,r.update("autoCommitEnabled",!1,l.ConfigurationTarget.Global);case 4:o(),g(n,"Inaktiv",0,"Automatische Commits deaktiviert"),c("Automatische Commits deaktiviert","info"),t&&(t.statusProvider.refresh(),t.settingsProvider.refresh(),t.quickActionsProvider.refresh()),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),b(e.t0,"Fehler beim Deaktivieren des Auto-Commits",!0);case 13:case"end":return e.stop()}}),e,null,[[0,10]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.toggleAutoCommit",u(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,!l.workspace.getConfiguration("comitto").get("autoCommitEnabled")){e.next=8;break}return e.next=6,l.commands.executeCommand("comitto.disableAutoCommit");case 6:e.next=10;break;case 8:return e.next=10,l.commands.executeCommand("comitto.enableAutoCommit");case 10:e.next=15;break;case 12:e.prev=12,e.t0=e.catch(0),b(e.t0,"Fehler beim Umschalten des Auto-Commits",!0);case 15:case"end":return e.stop()}}),e,null,[[0,12]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.manualCommit",u(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,a(!0);case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),b(e.t0,"Fehler beim manuellen Commit",!0);case 8:case"end":return e.stop()}}),e,null,[[0,5]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.showDashboard",u(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:try{t&&t.dashboardProvider?t.dashboardProvider.show():c("Dashboard konnte nicht geöffnet werden.","error")}catch(e){b(e,"Fehler beim Öffnen des Dashboards",!0)}case 1:case"end":return e.stop()}}),e)}))))),e.subscriptions.push(l.commands.registerCommand("comitto.showSimpleUI",u(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:try{t&&t.simpleUIProvider?t.simpleUIProvider.show():c("Einfache UI konnte nicht geöffnet werden.","error")}catch(e){b(e,"Fehler beim Öffnen der einfachen UI",!0)}case 1:case"end":return e.stop()}}),e)}))))),e.subscriptions.push(l.commands.registerCommand("comitto.selectAiProvider",u(s().mark((function e(){var t,n,r;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=["ollama","openai","anthropic"],e.next=4,l.window.showQuickPick(t,{placeHolder:"Wähle einen KI-Provider für die Commit-Nachrichtengenerierung"});case 4:if(!(n=e.sent)){e.next=10;break}return r=l.workspace.getConfiguration("comitto"),e.next=9,r.update("aiProvider",n,l.ConfigurationTarget.Global);case 9:c("KI-Provider wurde auf ".concat(n," gesetzt."),"info");case 10:e.next=15;break;case 12:e.prev=12,e.t0=e.catch(0),b(e.t0,"Fehler bei der Auswahl des KI-Providers",!0);case 15:case"end":return e.stop()}}),e,null,[[0,12]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.toggleSimpleMode",u(s().mark((function e(){var n,r,o;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("uiSettings"),o=!r.simpleMode,e.next=6,n.update("uiSettings",i(i({},r),{},{simpleMode:o}),l.ConfigurationTarget.Global);case 6:c("Einfacher Modus wurde ".concat(o?"aktiviert":"deaktiviert","."),"info"),t&&t.settingsProvider.refresh(),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),b(e.t0,"Fehler beim Umschalten des einfachen Modus",!0);case 13:case"end":return e.stop()}}),e,null,[[0,10]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.selectTheme",u(s().mark((function e(){var t,n,r,o;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=["auto","hell","dunkel"],e.next=4,l.window.showQuickPick(t,{placeHolder:"Wähle ein Theme für Comitto"});case 4:if(!(n=e.sent)){e.next=11;break}return r=l.workspace.getConfiguration("comitto"),o=r.get("uiSettings"),e.next=10,r.update("uiSettings",i(i({},o),{},{theme:n}),l.ConfigurationTarget.Global);case 10:c("Theme wurde auf '".concat(n,"' gesetzt."),"info");case 11:e.next=16;break;case 13:e.prev=13,e.t0=e.catch(0),b(e.t0,"Fehler bei der Auswahl des Themes",!0);case 16:case"end":return e.stop()}}),e,null,[[0,13]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.toggleOnSave",u(s().mark((function e(){var n,r,o;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("triggerRules"),o=!r.onSave,e.next=6,n.update("triggerRules",i(i({},r),{},{onSave:o}),l.ConfigurationTarget.Global);case 6:c("Auto-Commit beim Speichern wurde ".concat(o?"aktiviert":"deaktiviert","."),"info"),t&&t.settingsProvider.refresh(),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),b(e.t0,"Fehler beim Umschalten des onSave-Triggers",!0);case 13:case"end":return e.stop()}}),e,null,[[0,10]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.toggleOnInterval",u(s().mark((function e(){var n,r,o;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("triggerRules"),o=!r.onInterval,e.next=6,n.update("triggerRules",i(i({},r),{},{onInterval:o}),l.ConfigurationTarget.Global);case 6:c("Auto-Commit im Intervall wurde ".concat(o?"aktiviert":"deaktiviert","."),"info"),t&&t.settingsProvider.refresh(),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),b(e.t0,"Fehler beim Umschalten des onInterval-Triggers",!0);case 13:case"end":return e.stop()}}),e,null,[[0,10]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.toggleOnBranchSwitch",u(s().mark((function e(){var n,r,o;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("triggerRules"),o=!r.onBranchSwitch,e.next=6,n.update("triggerRules",i(i({},r),{},{onBranchSwitch:o}),l.ConfigurationTarget.Global);case 6:c("Auto-Commit beim Branch-Wechsel wurde ".concat(o?"aktiviert":"deaktiviert","."),"info"),t&&t.settingsProvider.refresh(),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),b(e.t0,"Fehler beim Umschalten des onBranchSwitch-Triggers",!0);case 13:case"end":return e.stop()}}),e,null,[[0,10]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.editFilePatterns",u(s().mark((function e(){var n,r,o,a,u;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("triggerRules"),o=r.filePatterns.join(", "),e.next=6,l.window.showInputBox({prompt:"Dateimuster (durch Komma getrennt)",value:o,placeHolder:"z.B. **/*.js, **/*.ts"});case 6:if(void 0===(a=e.sent)){e.next=13;break}return u=a.split(",").map((function(e){return e.trim()})).filter((function(e){return e.length>0})),e.next=11,n.update("triggerRules",i(i({},r),{},{filePatterns:u}),l.ConfigurationTarget.Global);case 11:c("Dateimuster wurden aktualisiert.","info"),t&&t.settingsProvider.refresh();case 13:e.next=18;break;case 15:e.prev=15,e.t0=e.catch(0),b(e.t0,"Fehler beim Bearbeiten der Dateimuster",!0);case 18:case"end":return e.stop()}}),e,null,[[0,15]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.editMinChangeCount",u(s().mark((function e(){var n,r,o,a,u;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("triggerRules"),o=r.minChangeCount.toString(),e.next=6,l.window.showInputBox({prompt:"Minimale Anzahl an Änderungen für Auto-Commit",value:o,placeHolder:"z.B. 10"});case 6:if(void 0===(a=e.sent)){e.next=17;break}if(u=parseInt(a),isNaN(u)||!(u>=0)){e.next=16;break}return e.next=12,n.update("triggerRules",i(i({},r),{},{minChangeCount:u}),l.ConfigurationTarget.Global);case 12:c("Minimale Änderungsanzahl auf ".concat(u," gesetzt."),"info"),t&&t.settingsProvider.refresh(),e.next=17;break;case 16:c("Bitte geben Sie eine gültige Zahl ein.","error");case 17:e.next=22;break;case 19:e.prev=19,e.t0=e.catch(0),b(e.t0,"Fehler beim Bearbeiten der minimalen Änderungsanzahl",!0);case 22:case"end":return e.stop()}}),e,null,[[0,19]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.editTimeThreshold",u(s().mark((function e(){var n,r,o,a,u;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("triggerRules"),o=r.timeThresholdMinutes.toString(),e.next=6,l.window.showInputBox({prompt:"Zeitschwellwert in Minuten (Zeit seit letztem Commit)",value:o,placeHolder:"z.B. 30"});case 6:if(void 0===(a=e.sent)){e.next=17;break}if(u=parseInt(a),isNaN(u)||!(u>=0)){e.next=16;break}return e.next=12,n.update("triggerRules",i(i({},r),{},{timeThresholdMinutes:u}),l.ConfigurationTarget.Global);case 12:c("Zeitschwellwert auf ".concat(u," Minuten gesetzt."),"info"),t&&t.settingsProvider.refresh(),e.next=17;break;case 16:c("Bitte geben Sie eine gültige Zahl ein.","error");case 17:e.next=22;break;case 19:e.prev=19,e.t0=e.catch(0),b(e.t0,"Fehler beim Bearbeiten des Zeitschwellwerts",!0);case 22:case"end":return e.stop()}}),e,null,[[0,19]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.editFileCountThreshold",u(s().mark((function e(){var n,r,o,a,u;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("triggerRules"),o=r.fileCountThreshold.toString(),e.next=6,l.window.showInputBox({prompt:"Dateien-Schwellwert (Anzahl der geänderten Dateien)",value:o,placeHolder:"z.B. 3"});case 6:if(void 0===(a=e.sent)){e.next=17;break}if(u=parseInt(a),isNaN(u)||!(u>=0)){e.next=16;break}return e.next=12,n.update("triggerRules",i(i({},r),{},{fileCountThreshold:u}),l.ConfigurationTarget.Global);case 12:c("Dateien-Schwellwert auf ".concat(u," gesetzt."),"info"),t&&t.settingsProvider.refresh(),e.next=17;break;case 16:c("Bitte geben Sie eine gültige Zahl ein.","error");case 17:e.next=22;break;case 19:e.prev=19,e.t0=e.catch(0),b(e.t0,"Fehler beim Bearbeiten des Dateien-Schwellwerts",!0);case 22:case"end":return e.stop()}}),e,null,[[0,19]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.refreshSettings",u(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:try{t&&(t.statusProvider.refresh(),t.settingsProvider.refresh(),t.quickActionsProvider.refresh()),c("Einstellungen wurden aktualisiert.","info")}catch(e){b(e,"Fehler beim Aktualisieren der Einstellungen",!0)}case 1:case"end":return e.stop()}}),e)}))))),e.subscriptions.push(l.commands.registerCommand("comitto.openSettings",u(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,l.commands.executeCommand("workbench.action.openSettings","comitto");case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),b(e.t0,"Fehler beim Öffnen der Einstellungen",!0);case 8:case"end":return e.stop()}}),e,null,[[0,5]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.performManualCommit",u(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,a(!0);case 3:e.next=8;break;case 5:e.prev=5,e.t0=e.catch(0),b(e.t0,"Fehler beim manuellen Commit",!0);case 8:case"end":return e.stop()}}),e,null,[[0,5]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.selectOpenAIModel",u(s().mark((function e(){var n,r,o,i;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=[{label:"GPT-4o",value:"gpt-4o"},{label:"GPT-4o Mini",value:"gpt-4o-mini"},{label:"GPT-4",value:"gpt-4"},{label:"GPT-4 Turbo",value:"gpt-4-turbo"},{label:"GPT-3.5 Turbo",value:"gpt-3.5-turbo"}],e.next=4,l.window.showQuickPick(n,{placeHolder:"Wähle ein OpenAI-Modell",title:"OpenAI-Modell auswählen"});case 4:if(!(r=e.sent)){e.next=13;break}return o=l.workspace.getConfiguration("comitto"),(i=o.get("openai")||{}).model=r.value,e.next=11,o.update("openai",i,l.ConfigurationTarget.Global);case 11:c("OpenAI-Modell wurde auf ".concat(r.label," (").concat(r.value,") gesetzt."),"info"),t&&t.settingsProvider.refresh();case 13:e.next=18;break;case 15:e.prev=15,e.t0=e.catch(0),b(e.t0,"Fehler bei der Auswahl des OpenAI-Modells",!0);case 18:case"end":return e.stop()}}),e,null,[[0,15]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.editOpenAIKey",u(s().mark((function e(){var n,r,o,i,a;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("openai")||{},o=r.apiKey||"",i=o?"********"+o.slice(-4):"",e.next=7,l.window.showInputBox({prompt:"OpenAI API-Schlüssel eingeben",placeHolder:"sk-...",value:i,password:!0});case 7:if(void 0===(a=e.sent)){e.next=15;break}if(a===i){e.next=14;break}return r.apiKey=a,e.next=13,n.update("openai",r,l.ConfigurationTarget.Global);case 13:c("OpenAI API-Schlüssel wurde aktualisiert.","info");case 14:t&&t.settingsProvider.refresh();case 15:e.next=20;break;case 17:e.prev=17,e.t0=e.catch(0),b(e.t0,"Fehler beim Bearbeiten des OpenAI API-Schlüssels",!0);case 20:case"end":return e.stop()}}),e,null,[[0,17]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.selectAnthropicModel",u(s().mark((function e(){var n,r,o,i;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=[{label:"Claude 3 Opus",value:"claude-3-opus-20240229"},{label:"Claude 3 Sonnet",value:"claude-3-sonnet-20240229"},{label:"Claude 3 Haiku",value:"claude-3-haiku-20240307"},{label:"Claude 2",value:"claude-2"},{label:"Claude 2.1",value:"claude-2.1"},{label:"Claude Instant",value:"claude-instant-1"}],e.next=4,l.window.showQuickPick(n,{placeHolder:"Wähle ein Anthropic-Modell",title:"Anthropic-Modell auswählen"});case 4:if(!(r=e.sent)){e.next=13;break}return o=l.workspace.getConfiguration("comitto"),(i=o.get("anthropic")||{}).model=r.value,e.next=11,o.update("anthropic",i,l.ConfigurationTarget.Global);case 11:c("Anthropic-Modell wurde auf ".concat(r.label," (").concat(r.value,") gesetzt."),"info"),t&&t.settingsProvider.refresh();case 13:e.next=18;break;case 15:e.prev=15,e.t0=e.catch(0),b(e.t0,"Fehler bei der Auswahl des Anthropic-Modells",!0);case 18:case"end":return e.stop()}}),e,null,[[0,15]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.editAnthropicKey",u(s().mark((function e(){var n,r,o,i,a;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("anthropic")||{},o=r.apiKey||"",i=o?"********"+o.slice(-4):"",e.next=7,l.window.showInputBox({prompt:"Anthropic API-Schlüssel eingeben",placeHolder:"sk-...",value:i,password:!0});case 7:if(void 0===(a=e.sent)){e.next=15;break}if(a===i){e.next=14;break}return r.apiKey=a,e.next=13,n.update("anthropic",r,l.ConfigurationTarget.Global);case 13:c("Anthropic API-Schlüssel wurde aktualisiert.","info");case 14:t&&t.settingsProvider.refresh();case 15:e.next=20;break;case 17:e.prev=17,e.t0=e.catch(0),b(e.t0,"Fehler beim Bearbeiten des Anthropic API-Schlüssels",!0);case 20:case"end":return e.stop()}}),e,null,[[0,17]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.editPromptTemplate",u(s().mark((function e(){var t,n,r,o;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=l.workspace.getConfiguration("comitto"),n=t.get("promptTemplate")||"Generiere eine Commit-Nachricht für diese Änderungen: {changes}",e.next=5,l.workspace.openTextDocument({content:n,language:"markdown"});case 5:return r=e.sent,e.next=8,l.window.showTextDocument(r);case 8:e.sent,o=l.workspace.onDidSaveTextDocument(function(){var e=u(s().mark((function e(n){var i;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n!==r){e.next=7;break}return i=n.getText(),e.next=4,t.update("promptTemplate",i,l.ConfigurationTarget.Global);case 4:c("Prompt-Vorlage wurde aktualisiert.","info"),o.dispose(),setTimeout((function(){l.commands.executeCommand("workbench.action.closeActiveEditor")}),500);case 7:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()),l.window.showInformationMessage("Bearbeiten Sie die Prompt-Vorlage und speichern Sie die Datei (STRG+S), um die Änderungen zu übernehmen."),e.next=16;break;case 13:e.prev=13,e.t0=e.catch(0),b(e.t0,"Fehler beim Bearbeiten der Prompt-Vorlage",!0);case 16:case"end":return e.stop()}}),e,null,[[0,13]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.stageAll",u(s().mark((function e(){var t,n,r,o,i;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,!(n=null===(t=l.extensions.getExtension("vscode.git"))||void 0===t?void 0:t.exports)){e.next=13;break}if(!((r=n.getAPI(1)).repositories&&r.repositories.length>0)){e.next=10;break}return e.next=7,r.repositories[0].add([]);case 7:c("Alle Änderungen wurden gestagt.","info"),e.next=11;break;case 10:c("Kein Git-Repository gefunden.","error");case 11:e.next=22;break;case 13:if(!((o=l.workspace.workspaceFolders)&&o.length>0)){e.next=21;break}return i=o[0].uri.fsPath,e.next=18,d(i,["add","-A"]);case 18:c("Alle Änderungen wurden gestagt.","info"),e.next=22;break;case 21:c("Kein Arbeitsbereich geöffnet.","error");case 22:e.next=27;break;case 24:e.prev=24,e.t0=e.catch(0),b(e.t0,"Fehler beim Stagen aller Änderungen",!0);case 27:case"end":return e.stop()}}),e,null,[[0,24]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.toggleAutoPush",u(s().mark((function e(){var n,r,o;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("gitSettings"),o=r.autoPush||!1,r.autoPush=!o,e.next=7,n.update("gitSettings",r,l.ConfigurationTarget.Global);case 7:c("Auto-Push ".concat(o?"deaktiviert":"aktiviert"),"info"),t&&(t.statusProvider.refresh(),t.settingsProvider.refresh(),t.quickActionsProvider.refresh()),e.next=14;break;case 11:e.prev=11,e.t0=e.catch(0),b(e.t0,"Fehler beim Umschalten des Auto-Push",!0);case 14:case"end":return e.stop()}}),e,null,[[0,11]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.editBranch",u(s().mark((function e(){var n,r,o,i;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("gitSettings"),o=r.branch||"",e.next=6,l.window.showInputBox({prompt:"Branch-Name eingeben (leer für aktuellen Branch)",value:o,placeHolder:"z.B. main oder feature/new-feature"});case 6:if(void 0===(i=e.sent)){e.next=13;break}return r.branch=i,e.next=11,n.update("gitSettings",r,l.ConfigurationTarget.Global);case 11:c('Branch auf "'.concat(i||"aktueller Branch",'" gesetzt'),"info"),t&&(t.statusProvider.refresh(),t.settingsProvider.refresh(),t.quickActionsProvider.refresh());case 13:e.next=18;break;case 15:e.prev=15,e.t0=e.catch(0),b(e.t0,"Fehler beim Bearbeiten des Branch",!0);case 18:case"end":return e.stop()}}),e,null,[[0,15]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.selectCommitStyle",u(s().mark((function e(){var n,r,o,i;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=[{label:"Conventional Commits",value:"conventional",description:"feat:, fix:, docs:, style:, etc."},{label:"Gitmoji",value:"gitmoji",description:"🎉, 🐛, 📚, 💄, etc."},{label:"Einfach",value:"simple",description:"Einfache beschreibende Nachrichten"},{label:"Angular",value:"angular",description:"Angular Commit Convention"},{label:"Atom",value:"atom",description:"Atom Editor Style"}],e.next=4,l.window.showQuickPick(n,{placeHolder:"Commit-Stil auswählen"});case 4:if(!(r=e.sent)){e.next=13;break}return o=l.workspace.getConfiguration("comitto"),(i=o.get("gitSettings")).commitMessageStyle=r.value,e.next=11,o.update("gitSettings",i,l.ConfigurationTarget.Global);case 11:c('Commit-Stil auf "'.concat(r.label,'" gesetzt'),"info"),t&&(t.statusProvider.refresh(),t.settingsProvider.refresh(),t.quickActionsProvider.refresh());case 13:e.next=18;break;case 15:e.prev=15,e.t0=e.catch(0),b(e.t0,"Fehler beim Auswählen des Commit-Stils",!0);case 18:case"end":return e.stop()}}),e,null,[[0,15]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.selectCommitLanguage",u(s().mark((function e(){var n,r,o,i;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=[{label:"Deutsch",value:"de"},{label:"English",value:"en"},{label:"Français",value:"fr"},{label:"Español",value:"es"},{label:"Italiano",value:"it"},{label:"日本語",value:"ja"},{label:"中文",value:"zh"}],e.next=4,l.window.showQuickPick(n,{placeHolder:"Sprache für Commit-Nachrichten auswählen"});case 4:if(!(r=e.sent)){e.next=13;break}return o=l.workspace.getConfiguration("comitto"),(i=o.get("gitSettings")).commitMessageLanguage=r.value,e.next=11,o.update("gitSettings",i,l.ConfigurationTarget.Global);case 11:c('Commit-Sprache auf "'.concat(r.label,'" gesetzt'),"info"),t&&(t.statusProvider.refresh(),t.settingsProvider.refresh(),t.quickActionsProvider.refresh());case 13:e.next=18;break;case 15:e.prev=15,e.t0=e.catch(0),b(e.t0,"Fehler beim Auswählen der Commit-Sprache",!0);case 18:case"end":return e.stop()}}),e,null,[[0,15]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.configureTriggers",u(s().mark((function e(){var n,r,o,i;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("triggerRules"),o=[{label:"".concat(r.onSave?"✓":"✗"," Bei Speichern"),value:"onSave"},{label:"".concat(r.onInterval?"✓":"✗"," Intervall-basiert"),value:"onInterval"},{label:"".concat(r.onBranchSwitch?"✓":"✗"," Bei Branch-Wechsel"),value:"onBranchSwitch"},{label:"Datei-Anzahl-Schwellwert bearbeiten",value:"fileCountThreshold"},{label:"Zeit-Schwellwert bearbeiten",value:"timeThreshold"},{label:"Mindest-Änderungs-Anzahl bearbeiten",value:"minChangeCount"},{label:"Datei-Muster bearbeiten",value:"filePatterns"}],e.next=6,l.window.showQuickPick(o,{placeHolder:"Trigger-Einstellung auswählen"});case 6:if(!(i=e.sent)){e.next=29;break}e.t0=i.value,e.next="onSave"===e.t0||"onInterval"===e.t0||"onBranchSwitch"===e.t0?11:"fileCountThreshold"===e.t0?16:"timeThreshold"===e.t0?19:"minChangeCount"===e.t0?22:"filePatterns"===e.t0?25:28;break;case 11:return r[i.value]=!r[i.value],e.next=14,n.update("triggerRules",r,l.ConfigurationTarget.Global);case 14:return c("".concat(i.label," ").concat(r[i.value]?"aktiviert":"deaktiviert"),"info"),e.abrupt("break",28);case 16:return e.next=18,l.commands.executeCommand("comitto.editFileCountThreshold");case 18:return e.abrupt("break",28);case 19:return e.next=21,l.commands.executeCommand("comitto.editTimeThreshold");case 21:return e.abrupt("break",28);case 22:return e.next=24,l.commands.executeCommand("comitto.editMinChangeCount");case 24:return e.abrupt("break",28);case 25:return e.next=27,l.commands.executeCommand("comitto.editFilePatterns");case 27:return e.abrupt("break",28);case 28:t&&(t.statusProvider.refresh(),t.settingsProvider.refresh(),t.quickActionsProvider.refresh());case 29:e.next=34;break;case 31:e.prev=31,e.t1=e.catch(0),b(e.t1,"Fehler beim Konfigurieren der Trigger",!0);case 34:case"end":return e.stop()}}),e,null,[[0,31]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.toggleUseGitignore",u(s().mark((function e(){var n,r,o;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("gitSettings"),o=!1!==r.useGitignore,r.useGitignore=!o,e.next=7,n.update("gitSettings",r,l.ConfigurationTarget.Global);case 7:c("Gitignore ".concat(o?"deaktiviert":"aktiviert"),"info"),t&&(t.statusProvider.refresh(),t.settingsProvider.refresh(),t.quickActionsProvider.refresh()),e.next=14;break;case 11:e.prev=11,e.t0=e.catch(0),b(e.t0,"Fehler beim Umschalten der Gitignore-Nutzung",!0);case 14:case"end":return e.stop()}}),e,null,[[0,11]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.configureAIProvider",u(s().mark((function e(){var t,n,r,o;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=l.workspace.getConfiguration("comitto"),n=t.get("aiProvider"),r=[{label:"OpenAI",value:"openai",description:"ChatGPT, GPT-4, etc."},{label:"Anthropic",value:"anthropic",description:"Claude Models"},{label:"Ollama",value:"ollama",description:"Lokale AI-Modelle"}],e.next=6,l.window.showQuickPick(r,{placeHolder:"Aktuell: ".concat(n,". Neuen KI-Provider auswählen")});case 6:if(!(o=e.sent)||o.value===n){e.next=33;break}return e.next=10,t.update("aiProvider",o.value,l.ConfigurationTarget.Global);case 10:c('KI-Provider auf "'.concat(o.label,'" gesetzt'),"info"),e.t0=o.value,e.next="openai"===e.t0?14:"anthropic"===e.t0?21:"ollama"===e.t0?28:32;break;case 14:return e.next=16,l.window.showInformationMessage("OpenAI ausgewählt. Möchten Sie den API-Schlüssel konfigurieren?","Ja","Nein");case 16:if("Ja"!==e.sent){e.next=20;break}return e.next=20,l.commands.executeCommand("comitto.editOpenAIKey");case 20:return e.abrupt("break",32);case 21:return e.next=23,l.window.showInformationMessage("Anthropic ausgewählt. Möchten Sie den API-Schlüssel konfigurieren?","Ja","Nein");case 23:if("Ja"!==e.sent){e.next=27;break}return e.next=27,l.commands.executeCommand("comitto.editAnthropicKey");case 27:return e.abrupt("break",32);case 28:return e.next=30,l.window.showInformationMessage("Ollama ausgewählt. Stellen Sie sicher, dass Ollama lokal läuft.","OK");case 30:return e.sent,e.abrupt("break",32);case 32:r&&(r.statusProvider.refresh(),r.settingsProvider.refresh(),r.quickActionsProvider.refresh());case 33:e.next=38;break;case 35:e.prev=35,e.t1=e.catch(0),b(e.t1,"Fehler beim Konfigurieren des KI-Providers",!0);case 38:case"end":return e.stop()}}),e,null,[[0,35]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.stageSelected",u(s().mark((function e(){var t,n,r,o,i,a,u,h;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,!(n=null===(t=l.extensions.getExtension("vscode.git"))||void 0===t?void 0:t.exports)){e.next=24;break}if(!((r=n.getAPI(1)).repositories&&r.repositories.length>0)){e.next=21;break}if(o=r.repositories[0],0!==(i=o.state.workingTreeChanges).length){e.next=10;break}return c("Keine Änderungen zum Stagen vorhanden.","info"),e.abrupt("return");case 10:return a=i.map((function(e){return{label:m.basename(e.uri.fsPath),description:e.uri.fsPath,value:e.uri}})),e.next=13,l.window.showQuickPick(a,{canPickMany:!0,placeHolder:"Dateien zum Stagen auswählen"});case 13:if(!((u=e.sent)&&u.length>0)){e.next=19;break}return h=u.map((function(e){return e.value})),e.next=18,o.add(h);case 18:c("".concat(u.length," Datei(en) gestagt."),"info");case 19:e.next=22;break;case 21:c("Kein Git-Repository gefunden.","error");case 22:e.next=25;break;case 24:c("Git-Erweiterung nicht verfügbar.","error");case 25:e.next=30;break;case 27:e.prev=27,e.t0=e.catch(0),b(e.t0,"Fehler beim Stagen ausgewählter Dateien",!0);case 30:case"end":return e.stop()}}),e,null,[[0,27]])}))))),e.subscriptions.push(l.commands.registerCommand("comitto.selectStageMode",u(s().mark((function e(){var n,r,o,i;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,n=l.workspace.getConfiguration("comitto"),r=n.get("gitSettings"),o=[{label:"Alle Dateien stagen",value:"all",description:"Automatisch alle geänderten Dateien stagen"},{label:"Spezifische Dateien stagen",value:"specific",description:"Nur Dateien mit bestimmten Mustern stagen"},{label:"Nachfragen",value:"ask",description:"Vor jedem Commit nach Dateien fragen"}],e.next=6,l.window.showQuickPick(o,{placeHolder:"Stage-Modus auswählen"});case 6:if(!(i=e.sent)){e.next=13;break}return r.stageMode=i.value,e.next=11,n.update("gitSettings",r,l.ConfigurationTarget.Global);case 11:c('Stage-Modus auf "'.concat(i.label,'" gesetzt'),"info"),t&&(t.statusProvider.refresh(),t.settingsProvider.refresh(),t.quickActionsProvider.refresh());case 13:e.next=18;break;case 15:e.prev=15,e.t0=e.catch(0),b(e.t0,"Fehler beim Auswählen des Stage-Modus",!0);case 18:case"end":return e.stop()}}),e,null,[[0,15]])})))))},generateCommitMessage:function(e,t,n,r,o){return v.apply(this,arguments)},handleError:b,preparePromptTemplate:function(e,t){try{var n=l.workspace.getConfiguration("comitto").get("promptTemplate")||"Generiere eine Commit-Nachricht basierend auf folgenden Änderungen:";if(n=n.replace("{changes}",e||"Keine Status-Informationen verfügbar."),t&&t.length>0){var r=t.length>2e3?t.substring(0,2e3)+"...(gekürzt)":t;n+="\n\nHier sind einige der Änderungen im Detail:\n".concat(r)}return n}catch(e){return b(e,"Fehler bei der Vorbereitung des Prompts"),"Generiere eine Commit-Nachricht basierend auf den letzten Änderungen."}},processDiffForPrompt:function(e){try{if(!e||0===e.trim().length)return"";if(e.length>2e3){var t=e.split("\n"),n=t.filter((function(e){return e.startsWith("diff --git")||e.startsWith("+++")||e.startsWith("---")})),r=t.filter((function(e){return e.startsWith("+")||e.startsWith("-")})),o=n.join("\n")+"\n";return o+="...\n",o+=r.slice(0,30).join("\n"),r.length>30&&(o+="\n...(weitere Änderungen gekürzt)"),o}return e}catch(t){return b(t,"Fehler bei der Verarbeitung der Diff-Daten"),e||""}},processCommitMessage:function(e){try{if(!e)return"chore: auto commit";var t=e.trim(),n=(t=t.replace(/^#\s+/gm,"")).split("\n").filter((function(e){return e.trim().length>0}));return n.length>1?l.workspace.getConfiguration("comitto").get("gitSettings").allowMultilineMessages?t:n[0]:t}catch(t){return b(t,"Fehler bei der Verarbeitung der Commit-Nachricht"),e?e.trim():"chore: auto commit"}}}},2018:e=>{"use strict";e.exports=require("tty")},2203:e=>{"use strict";e.exports=require("stream")},2613:e=>{"use strict";e.exports=require("assert")},3106:e=>{"use strict";e.exports=require("zlib")},4434:e=>{"use strict";e.exports=require("events")},5317:e=>{"use strict";e.exports=require("child_process")},5692:e=>{"use strict";e.exports=require("https")},6928:e=>{"use strict";e.exports=require("path")},6982:e=>{"use strict";e.exports=require("crypto")},7016:e=>{"use strict";e.exports=require("url")},8611:e=>{"use strict";e.exports=require("http")},9023:e=>{"use strict";e.exports=require("util")},9896:e=>{"use strict";e.exports=require("fs")}},o={};function i(e){var t=o[e];if(void 0!==t)return t.exports;var n=o[e]={exports:{}};return r[e](n,n.exports,i),n.exports}i.m=r,i.x=()=>{var e=i.O(void 0,[121,730],(()=>i(286)));return i.O(e)},e=[],i.O=(t,n,r,o)=>{if(!n){var a=1/0;for(l=0;l<e.length;l++){for(var[n,r,o]=e[l],s=!0,c=0;c<n.length;c++)(!1&o||a>=o)&&Object.keys(i.O).every((e=>i.O[e](n[c])))?n.splice(c--,1):(s=!1,o<a&&(a=o));if(s){e.splice(l--,1);var u=r();void 0!==u&&(t=u)}}return t}o=o||0;for(var l=e.length;l>0&&e[l-1][2]>o;l--)e[l]=e[l-1];e[l]=[n,r,o]},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,n)=>(i.f[n](e,t),t)),[])),i.u=e=>(121===e?"vendor":e)+".js",i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n={217:1,606:1},i.O.require=e=>n[e],i.f.require=(e,t)=>{n[e]||(e=>{var t=e.modules,r=e.ids,o=e.runtime;for(var a in t)i.o(t,a)&&(i.m[a]=t[a]);o&&o(i);for(var s=0;s<r.length;s++)n[r[s]]=1;i.O()})(require("./"+i.u(e)))},t=i.x,i.x=()=>(i.e(121),i.e(730),t());var a=i.x();module.exports=a})();
//# sourceMappingURL=extension.js.map